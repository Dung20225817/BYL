
plainf4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006ad4  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001920  08006c84  08006c84  00007c84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080085a4  080085a4  0000a080  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  080085a4  080085a4  000095a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080085ac  080085ac  0000a080  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080085ac  080085ac  000095ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080085b0  080085b0  000095b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000080  20000000  080085b4  0000a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000a080  2**0
                  CONTENTS
 10 .bss          000005bc  20000080  20000080  0000a080  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000063c  2000063c  0000a080  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000a080  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000af6d  00000000  00000000  0000a0b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002499  00000000  00000000  0001501d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000b28  00000000  00000000  000174b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000856  00000000  00000000  00017fe0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00024e94  00000000  00000000  00018836  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000dcdc  00000000  00000000  0003d6ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000da35d  00000000  00000000  0004b3a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00125703  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000377c  00000000  00000000  00125748  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000048  00000000  00000000  00128ec4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000080 	.word	0x20000080
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08006c6c 	.word	0x08006c6c

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000084 	.word	0x20000084
 80001ec:	08006c6c 	.word	0x08006c6c

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b988 	b.w	80005b8 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	468e      	mov	lr, r1
 80002c8:	4604      	mov	r4, r0
 80002ca:	4688      	mov	r8, r1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d14a      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4617      	mov	r7, r2
 80002d4:	d962      	bls.n	800039c <__udivmoddi4+0xdc>
 80002d6:	fab2 f682 	clz	r6, r2
 80002da:	b14e      	cbz	r6, 80002f0 <__udivmoddi4+0x30>
 80002dc:	f1c6 0320 	rsb	r3, r6, #32
 80002e0:	fa01 f806 	lsl.w	r8, r1, r6
 80002e4:	fa20 f303 	lsr.w	r3, r0, r3
 80002e8:	40b7      	lsls	r7, r6
 80002ea:	ea43 0808 	orr.w	r8, r3, r8
 80002ee:	40b4      	lsls	r4, r6
 80002f0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002f4:	fa1f fc87 	uxth.w	ip, r7
 80002f8:	fbb8 f1fe 	udiv	r1, r8, lr
 80002fc:	0c23      	lsrs	r3, r4, #16
 80002fe:	fb0e 8811 	mls	r8, lr, r1, r8
 8000302:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000306:	fb01 f20c 	mul.w	r2, r1, ip
 800030a:	429a      	cmp	r2, r3
 800030c:	d909      	bls.n	8000322 <__udivmoddi4+0x62>
 800030e:	18fb      	adds	r3, r7, r3
 8000310:	f101 30ff 	add.w	r0, r1, #4294967295
 8000314:	f080 80ea 	bcs.w	80004ec <__udivmoddi4+0x22c>
 8000318:	429a      	cmp	r2, r3
 800031a:	f240 80e7 	bls.w	80004ec <__udivmoddi4+0x22c>
 800031e:	3902      	subs	r1, #2
 8000320:	443b      	add	r3, r7
 8000322:	1a9a      	subs	r2, r3, r2
 8000324:	b2a3      	uxth	r3, r4
 8000326:	fbb2 f0fe 	udiv	r0, r2, lr
 800032a:	fb0e 2210 	mls	r2, lr, r0, r2
 800032e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000332:	fb00 fc0c 	mul.w	ip, r0, ip
 8000336:	459c      	cmp	ip, r3
 8000338:	d909      	bls.n	800034e <__udivmoddi4+0x8e>
 800033a:	18fb      	adds	r3, r7, r3
 800033c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000340:	f080 80d6 	bcs.w	80004f0 <__udivmoddi4+0x230>
 8000344:	459c      	cmp	ip, r3
 8000346:	f240 80d3 	bls.w	80004f0 <__udivmoddi4+0x230>
 800034a:	443b      	add	r3, r7
 800034c:	3802      	subs	r0, #2
 800034e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000352:	eba3 030c 	sub.w	r3, r3, ip
 8000356:	2100      	movs	r1, #0
 8000358:	b11d      	cbz	r5, 8000362 <__udivmoddi4+0xa2>
 800035a:	40f3      	lsrs	r3, r6
 800035c:	2200      	movs	r2, #0
 800035e:	e9c5 3200 	strd	r3, r2, [r5]
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d905      	bls.n	8000376 <__udivmoddi4+0xb6>
 800036a:	b10d      	cbz	r5, 8000370 <__udivmoddi4+0xb0>
 800036c:	e9c5 0100 	strd	r0, r1, [r5]
 8000370:	2100      	movs	r1, #0
 8000372:	4608      	mov	r0, r1
 8000374:	e7f5      	b.n	8000362 <__udivmoddi4+0xa2>
 8000376:	fab3 f183 	clz	r1, r3
 800037a:	2900      	cmp	r1, #0
 800037c:	d146      	bne.n	800040c <__udivmoddi4+0x14c>
 800037e:	4573      	cmp	r3, lr
 8000380:	d302      	bcc.n	8000388 <__udivmoddi4+0xc8>
 8000382:	4282      	cmp	r2, r0
 8000384:	f200 8105 	bhi.w	8000592 <__udivmoddi4+0x2d2>
 8000388:	1a84      	subs	r4, r0, r2
 800038a:	eb6e 0203 	sbc.w	r2, lr, r3
 800038e:	2001      	movs	r0, #1
 8000390:	4690      	mov	r8, r2
 8000392:	2d00      	cmp	r5, #0
 8000394:	d0e5      	beq.n	8000362 <__udivmoddi4+0xa2>
 8000396:	e9c5 4800 	strd	r4, r8, [r5]
 800039a:	e7e2      	b.n	8000362 <__udivmoddi4+0xa2>
 800039c:	2a00      	cmp	r2, #0
 800039e:	f000 8090 	beq.w	80004c2 <__udivmoddi4+0x202>
 80003a2:	fab2 f682 	clz	r6, r2
 80003a6:	2e00      	cmp	r6, #0
 80003a8:	f040 80a4 	bne.w	80004f4 <__udivmoddi4+0x234>
 80003ac:	1a8a      	subs	r2, r1, r2
 80003ae:	0c03      	lsrs	r3, r0, #16
 80003b0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003b4:	b280      	uxth	r0, r0
 80003b6:	b2bc      	uxth	r4, r7
 80003b8:	2101      	movs	r1, #1
 80003ba:	fbb2 fcfe 	udiv	ip, r2, lr
 80003be:	fb0e 221c 	mls	r2, lr, ip, r2
 80003c2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003c6:	fb04 f20c 	mul.w	r2, r4, ip
 80003ca:	429a      	cmp	r2, r3
 80003cc:	d907      	bls.n	80003de <__udivmoddi4+0x11e>
 80003ce:	18fb      	adds	r3, r7, r3
 80003d0:	f10c 38ff 	add.w	r8, ip, #4294967295
 80003d4:	d202      	bcs.n	80003dc <__udivmoddi4+0x11c>
 80003d6:	429a      	cmp	r2, r3
 80003d8:	f200 80e0 	bhi.w	800059c <__udivmoddi4+0x2dc>
 80003dc:	46c4      	mov	ip, r8
 80003de:	1a9b      	subs	r3, r3, r2
 80003e0:	fbb3 f2fe 	udiv	r2, r3, lr
 80003e4:	fb0e 3312 	mls	r3, lr, r2, r3
 80003e8:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 80003ec:	fb02 f404 	mul.w	r4, r2, r4
 80003f0:	429c      	cmp	r4, r3
 80003f2:	d907      	bls.n	8000404 <__udivmoddi4+0x144>
 80003f4:	18fb      	adds	r3, r7, r3
 80003f6:	f102 30ff 	add.w	r0, r2, #4294967295
 80003fa:	d202      	bcs.n	8000402 <__udivmoddi4+0x142>
 80003fc:	429c      	cmp	r4, r3
 80003fe:	f200 80ca 	bhi.w	8000596 <__udivmoddi4+0x2d6>
 8000402:	4602      	mov	r2, r0
 8000404:	1b1b      	subs	r3, r3, r4
 8000406:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 800040a:	e7a5      	b.n	8000358 <__udivmoddi4+0x98>
 800040c:	f1c1 0620 	rsb	r6, r1, #32
 8000410:	408b      	lsls	r3, r1
 8000412:	fa22 f706 	lsr.w	r7, r2, r6
 8000416:	431f      	orrs	r7, r3
 8000418:	fa0e f401 	lsl.w	r4, lr, r1
 800041c:	fa20 f306 	lsr.w	r3, r0, r6
 8000420:	fa2e fe06 	lsr.w	lr, lr, r6
 8000424:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000428:	4323      	orrs	r3, r4
 800042a:	fa00 f801 	lsl.w	r8, r0, r1
 800042e:	fa1f fc87 	uxth.w	ip, r7
 8000432:	fbbe f0f9 	udiv	r0, lr, r9
 8000436:	0c1c      	lsrs	r4, r3, #16
 8000438:	fb09 ee10 	mls	lr, r9, r0, lr
 800043c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000440:	fb00 fe0c 	mul.w	lr, r0, ip
 8000444:	45a6      	cmp	lr, r4
 8000446:	fa02 f201 	lsl.w	r2, r2, r1
 800044a:	d909      	bls.n	8000460 <__udivmoddi4+0x1a0>
 800044c:	193c      	adds	r4, r7, r4
 800044e:	f100 3aff 	add.w	sl, r0, #4294967295
 8000452:	f080 809c 	bcs.w	800058e <__udivmoddi4+0x2ce>
 8000456:	45a6      	cmp	lr, r4
 8000458:	f240 8099 	bls.w	800058e <__udivmoddi4+0x2ce>
 800045c:	3802      	subs	r0, #2
 800045e:	443c      	add	r4, r7
 8000460:	eba4 040e 	sub.w	r4, r4, lr
 8000464:	fa1f fe83 	uxth.w	lr, r3
 8000468:	fbb4 f3f9 	udiv	r3, r4, r9
 800046c:	fb09 4413 	mls	r4, r9, r3, r4
 8000470:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000474:	fb03 fc0c 	mul.w	ip, r3, ip
 8000478:	45a4      	cmp	ip, r4
 800047a:	d908      	bls.n	800048e <__udivmoddi4+0x1ce>
 800047c:	193c      	adds	r4, r7, r4
 800047e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000482:	f080 8082 	bcs.w	800058a <__udivmoddi4+0x2ca>
 8000486:	45a4      	cmp	ip, r4
 8000488:	d97f      	bls.n	800058a <__udivmoddi4+0x2ca>
 800048a:	3b02      	subs	r3, #2
 800048c:	443c      	add	r4, r7
 800048e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000492:	eba4 040c 	sub.w	r4, r4, ip
 8000496:	fba0 ec02 	umull	lr, ip, r0, r2
 800049a:	4564      	cmp	r4, ip
 800049c:	4673      	mov	r3, lr
 800049e:	46e1      	mov	r9, ip
 80004a0:	d362      	bcc.n	8000568 <__udivmoddi4+0x2a8>
 80004a2:	d05f      	beq.n	8000564 <__udivmoddi4+0x2a4>
 80004a4:	b15d      	cbz	r5, 80004be <__udivmoddi4+0x1fe>
 80004a6:	ebb8 0203 	subs.w	r2, r8, r3
 80004aa:	eb64 0409 	sbc.w	r4, r4, r9
 80004ae:	fa04 f606 	lsl.w	r6, r4, r6
 80004b2:	fa22 f301 	lsr.w	r3, r2, r1
 80004b6:	431e      	orrs	r6, r3
 80004b8:	40cc      	lsrs	r4, r1
 80004ba:	e9c5 6400 	strd	r6, r4, [r5]
 80004be:	2100      	movs	r1, #0
 80004c0:	e74f      	b.n	8000362 <__udivmoddi4+0xa2>
 80004c2:	fbb1 fcf2 	udiv	ip, r1, r2
 80004c6:	0c01      	lsrs	r1, r0, #16
 80004c8:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 80004cc:	b280      	uxth	r0, r0
 80004ce:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 80004d2:	463b      	mov	r3, r7
 80004d4:	4638      	mov	r0, r7
 80004d6:	463c      	mov	r4, r7
 80004d8:	46b8      	mov	r8, r7
 80004da:	46be      	mov	lr, r7
 80004dc:	2620      	movs	r6, #32
 80004de:	fbb1 f1f7 	udiv	r1, r1, r7
 80004e2:	eba2 0208 	sub.w	r2, r2, r8
 80004e6:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 80004ea:	e766      	b.n	80003ba <__udivmoddi4+0xfa>
 80004ec:	4601      	mov	r1, r0
 80004ee:	e718      	b.n	8000322 <__udivmoddi4+0x62>
 80004f0:	4610      	mov	r0, r2
 80004f2:	e72c      	b.n	800034e <__udivmoddi4+0x8e>
 80004f4:	f1c6 0220 	rsb	r2, r6, #32
 80004f8:	fa2e f302 	lsr.w	r3, lr, r2
 80004fc:	40b7      	lsls	r7, r6
 80004fe:	40b1      	lsls	r1, r6
 8000500:	fa20 f202 	lsr.w	r2, r0, r2
 8000504:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000508:	430a      	orrs	r2, r1
 800050a:	fbb3 f8fe 	udiv	r8, r3, lr
 800050e:	b2bc      	uxth	r4, r7
 8000510:	fb0e 3318 	mls	r3, lr, r8, r3
 8000514:	0c11      	lsrs	r1, r2, #16
 8000516:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800051a:	fb08 f904 	mul.w	r9, r8, r4
 800051e:	40b0      	lsls	r0, r6
 8000520:	4589      	cmp	r9, r1
 8000522:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000526:	b280      	uxth	r0, r0
 8000528:	d93e      	bls.n	80005a8 <__udivmoddi4+0x2e8>
 800052a:	1879      	adds	r1, r7, r1
 800052c:	f108 3cff 	add.w	ip, r8, #4294967295
 8000530:	d201      	bcs.n	8000536 <__udivmoddi4+0x276>
 8000532:	4589      	cmp	r9, r1
 8000534:	d81f      	bhi.n	8000576 <__udivmoddi4+0x2b6>
 8000536:	eba1 0109 	sub.w	r1, r1, r9
 800053a:	fbb1 f9fe 	udiv	r9, r1, lr
 800053e:	fb09 f804 	mul.w	r8, r9, r4
 8000542:	fb0e 1119 	mls	r1, lr, r9, r1
 8000546:	b292      	uxth	r2, r2
 8000548:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800054c:	4542      	cmp	r2, r8
 800054e:	d229      	bcs.n	80005a4 <__udivmoddi4+0x2e4>
 8000550:	18ba      	adds	r2, r7, r2
 8000552:	f109 31ff 	add.w	r1, r9, #4294967295
 8000556:	d2c4      	bcs.n	80004e2 <__udivmoddi4+0x222>
 8000558:	4542      	cmp	r2, r8
 800055a:	d2c2      	bcs.n	80004e2 <__udivmoddi4+0x222>
 800055c:	f1a9 0102 	sub.w	r1, r9, #2
 8000560:	443a      	add	r2, r7
 8000562:	e7be      	b.n	80004e2 <__udivmoddi4+0x222>
 8000564:	45f0      	cmp	r8, lr
 8000566:	d29d      	bcs.n	80004a4 <__udivmoddi4+0x1e4>
 8000568:	ebbe 0302 	subs.w	r3, lr, r2
 800056c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000570:	3801      	subs	r0, #1
 8000572:	46e1      	mov	r9, ip
 8000574:	e796      	b.n	80004a4 <__udivmoddi4+0x1e4>
 8000576:	eba7 0909 	sub.w	r9, r7, r9
 800057a:	4449      	add	r1, r9
 800057c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000580:	fbb1 f9fe 	udiv	r9, r1, lr
 8000584:	fb09 f804 	mul.w	r8, r9, r4
 8000588:	e7db      	b.n	8000542 <__udivmoddi4+0x282>
 800058a:	4673      	mov	r3, lr
 800058c:	e77f      	b.n	800048e <__udivmoddi4+0x1ce>
 800058e:	4650      	mov	r0, sl
 8000590:	e766      	b.n	8000460 <__udivmoddi4+0x1a0>
 8000592:	4608      	mov	r0, r1
 8000594:	e6fd      	b.n	8000392 <__udivmoddi4+0xd2>
 8000596:	443b      	add	r3, r7
 8000598:	3a02      	subs	r2, #2
 800059a:	e733      	b.n	8000404 <__udivmoddi4+0x144>
 800059c:	f1ac 0c02 	sub.w	ip, ip, #2
 80005a0:	443b      	add	r3, r7
 80005a2:	e71c      	b.n	80003de <__udivmoddi4+0x11e>
 80005a4:	4649      	mov	r1, r9
 80005a6:	e79c      	b.n	80004e2 <__udivmoddi4+0x222>
 80005a8:	eba1 0109 	sub.w	r1, r1, r9
 80005ac:	46c4      	mov	ip, r8
 80005ae:	fbb1 f9fe 	udiv	r9, r1, lr
 80005b2:	fb09 f804 	mul.w	r8, r9, r4
 80005b6:	e7c4      	b.n	8000542 <__udivmoddi4+0x282>

080005b8 <__aeabi_idiv0>:
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop

080005bc <ILI9341_DrawHollowCircle>:
 80005bc:	b590      	push	{r4, r7, lr}
 80005be:	b089      	sub	sp, #36	@ 0x24
 80005c0:	af00      	add	r7, sp, #0
 80005c2:	4604      	mov	r4, r0
 80005c4:	4608      	mov	r0, r1
 80005c6:	4611      	mov	r1, r2
 80005c8:	461a      	mov	r2, r3
 80005ca:	4623      	mov	r3, r4
 80005cc:	80fb      	strh	r3, [r7, #6]
 80005ce:	4603      	mov	r3, r0
 80005d0:	80bb      	strh	r3, [r7, #4]
 80005d2:	460b      	mov	r3, r1
 80005d4:	807b      	strh	r3, [r7, #2]
 80005d6:	4613      	mov	r3, r2
 80005d8:	803b      	strh	r3, [r7, #0]
 80005da:	887b      	ldrh	r3, [r7, #2]
 80005dc:	3b01      	subs	r3, #1
 80005de:	61fb      	str	r3, [r7, #28]
 80005e0:	2300      	movs	r3, #0
 80005e2:	61bb      	str	r3, [r7, #24]
 80005e4:	2301      	movs	r3, #1
 80005e6:	617b      	str	r3, [r7, #20]
 80005e8:	2301      	movs	r3, #1
 80005ea:	613b      	str	r3, [r7, #16]
 80005ec:	887b      	ldrh	r3, [r7, #2]
 80005ee:	005b      	lsls	r3, r3, #1
 80005f0:	697a      	ldr	r2, [r7, #20]
 80005f2:	1ad3      	subs	r3, r2, r3
 80005f4:	60fb      	str	r3, [r7, #12]
 80005f6:	e08d      	b.n	8000714 <ILI9341_DrawHollowCircle+0x158>
 80005f8:	69fb      	ldr	r3, [r7, #28]
 80005fa:	b29a      	uxth	r2, r3
 80005fc:	88fb      	ldrh	r3, [r7, #6]
 80005fe:	4413      	add	r3, r2
 8000600:	b298      	uxth	r0, r3
 8000602:	69bb      	ldr	r3, [r7, #24]
 8000604:	b29a      	uxth	r2, r3
 8000606:	88bb      	ldrh	r3, [r7, #4]
 8000608:	4413      	add	r3, r2
 800060a:	b29b      	uxth	r3, r3
 800060c:	883a      	ldrh	r2, [r7, #0]
 800060e:	4619      	mov	r1, r3
 8000610:	f000 fd0a 	bl	8001028 <ILI9341_DrawPixel>
 8000614:	69bb      	ldr	r3, [r7, #24]
 8000616:	b29a      	uxth	r2, r3
 8000618:	88fb      	ldrh	r3, [r7, #6]
 800061a:	4413      	add	r3, r2
 800061c:	b298      	uxth	r0, r3
 800061e:	69fb      	ldr	r3, [r7, #28]
 8000620:	b29a      	uxth	r2, r3
 8000622:	88bb      	ldrh	r3, [r7, #4]
 8000624:	4413      	add	r3, r2
 8000626:	b29b      	uxth	r3, r3
 8000628:	883a      	ldrh	r2, [r7, #0]
 800062a:	4619      	mov	r1, r3
 800062c:	f000 fcfc 	bl	8001028 <ILI9341_DrawPixel>
 8000630:	69bb      	ldr	r3, [r7, #24]
 8000632:	b29b      	uxth	r3, r3
 8000634:	88fa      	ldrh	r2, [r7, #6]
 8000636:	1ad3      	subs	r3, r2, r3
 8000638:	b298      	uxth	r0, r3
 800063a:	69fb      	ldr	r3, [r7, #28]
 800063c:	b29a      	uxth	r2, r3
 800063e:	88bb      	ldrh	r3, [r7, #4]
 8000640:	4413      	add	r3, r2
 8000642:	b29b      	uxth	r3, r3
 8000644:	883a      	ldrh	r2, [r7, #0]
 8000646:	4619      	mov	r1, r3
 8000648:	f000 fcee 	bl	8001028 <ILI9341_DrawPixel>
 800064c:	69fb      	ldr	r3, [r7, #28]
 800064e:	b29b      	uxth	r3, r3
 8000650:	88fa      	ldrh	r2, [r7, #6]
 8000652:	1ad3      	subs	r3, r2, r3
 8000654:	b298      	uxth	r0, r3
 8000656:	69bb      	ldr	r3, [r7, #24]
 8000658:	b29a      	uxth	r2, r3
 800065a:	88bb      	ldrh	r3, [r7, #4]
 800065c:	4413      	add	r3, r2
 800065e:	b29b      	uxth	r3, r3
 8000660:	883a      	ldrh	r2, [r7, #0]
 8000662:	4619      	mov	r1, r3
 8000664:	f000 fce0 	bl	8001028 <ILI9341_DrawPixel>
 8000668:	69fb      	ldr	r3, [r7, #28]
 800066a:	b29b      	uxth	r3, r3
 800066c:	88fa      	ldrh	r2, [r7, #6]
 800066e:	1ad3      	subs	r3, r2, r3
 8000670:	b298      	uxth	r0, r3
 8000672:	69bb      	ldr	r3, [r7, #24]
 8000674:	b29b      	uxth	r3, r3
 8000676:	88ba      	ldrh	r2, [r7, #4]
 8000678:	1ad3      	subs	r3, r2, r3
 800067a:	b29b      	uxth	r3, r3
 800067c:	883a      	ldrh	r2, [r7, #0]
 800067e:	4619      	mov	r1, r3
 8000680:	f000 fcd2 	bl	8001028 <ILI9341_DrawPixel>
 8000684:	69bb      	ldr	r3, [r7, #24]
 8000686:	b29b      	uxth	r3, r3
 8000688:	88fa      	ldrh	r2, [r7, #6]
 800068a:	1ad3      	subs	r3, r2, r3
 800068c:	b298      	uxth	r0, r3
 800068e:	69fb      	ldr	r3, [r7, #28]
 8000690:	b29b      	uxth	r3, r3
 8000692:	88ba      	ldrh	r2, [r7, #4]
 8000694:	1ad3      	subs	r3, r2, r3
 8000696:	b29b      	uxth	r3, r3
 8000698:	883a      	ldrh	r2, [r7, #0]
 800069a:	4619      	mov	r1, r3
 800069c:	f000 fcc4 	bl	8001028 <ILI9341_DrawPixel>
 80006a0:	69bb      	ldr	r3, [r7, #24]
 80006a2:	b29a      	uxth	r2, r3
 80006a4:	88fb      	ldrh	r3, [r7, #6]
 80006a6:	4413      	add	r3, r2
 80006a8:	b298      	uxth	r0, r3
 80006aa:	69fb      	ldr	r3, [r7, #28]
 80006ac:	b29b      	uxth	r3, r3
 80006ae:	88ba      	ldrh	r2, [r7, #4]
 80006b0:	1ad3      	subs	r3, r2, r3
 80006b2:	b29b      	uxth	r3, r3
 80006b4:	883a      	ldrh	r2, [r7, #0]
 80006b6:	4619      	mov	r1, r3
 80006b8:	f000 fcb6 	bl	8001028 <ILI9341_DrawPixel>
 80006bc:	69fb      	ldr	r3, [r7, #28]
 80006be:	b29a      	uxth	r2, r3
 80006c0:	88fb      	ldrh	r3, [r7, #6]
 80006c2:	4413      	add	r3, r2
 80006c4:	b298      	uxth	r0, r3
 80006c6:	69bb      	ldr	r3, [r7, #24]
 80006c8:	b29b      	uxth	r3, r3
 80006ca:	88ba      	ldrh	r2, [r7, #4]
 80006cc:	1ad3      	subs	r3, r2, r3
 80006ce:	b29b      	uxth	r3, r3
 80006d0:	883a      	ldrh	r2, [r7, #0]
 80006d2:	4619      	mov	r1, r3
 80006d4:	f000 fca8 	bl	8001028 <ILI9341_DrawPixel>
 80006d8:	68fb      	ldr	r3, [r7, #12]
 80006da:	2b00      	cmp	r3, #0
 80006dc:	dc09      	bgt.n	80006f2 <ILI9341_DrawHollowCircle+0x136>
 80006de:	69bb      	ldr	r3, [r7, #24]
 80006e0:	3301      	adds	r3, #1
 80006e2:	61bb      	str	r3, [r7, #24]
 80006e4:	68fa      	ldr	r2, [r7, #12]
 80006e6:	693b      	ldr	r3, [r7, #16]
 80006e8:	4413      	add	r3, r2
 80006ea:	60fb      	str	r3, [r7, #12]
 80006ec:	693b      	ldr	r3, [r7, #16]
 80006ee:	3302      	adds	r3, #2
 80006f0:	613b      	str	r3, [r7, #16]
 80006f2:	68fb      	ldr	r3, [r7, #12]
 80006f4:	2b00      	cmp	r3, #0
 80006f6:	dd0d      	ble.n	8000714 <ILI9341_DrawHollowCircle+0x158>
 80006f8:	69fb      	ldr	r3, [r7, #28]
 80006fa:	3b01      	subs	r3, #1
 80006fc:	61fb      	str	r3, [r7, #28]
 80006fe:	697b      	ldr	r3, [r7, #20]
 8000700:	3302      	adds	r3, #2
 8000702:	617b      	str	r3, [r7, #20]
 8000704:	887b      	ldrh	r3, [r7, #2]
 8000706:	425b      	negs	r3, r3
 8000708:	005a      	lsls	r2, r3, #1
 800070a:	697b      	ldr	r3, [r7, #20]
 800070c:	4413      	add	r3, r2
 800070e:	68fa      	ldr	r2, [r7, #12]
 8000710:	4413      	add	r3, r2
 8000712:	60fb      	str	r3, [r7, #12]
 8000714:	69fa      	ldr	r2, [r7, #28]
 8000716:	69bb      	ldr	r3, [r7, #24]
 8000718:	429a      	cmp	r2, r3
 800071a:	f6bf af6d 	bge.w	80005f8 <ILI9341_DrawHollowCircle+0x3c>
 800071e:	bf00      	nop
 8000720:	bf00      	nop
 8000722:	3724      	adds	r7, #36	@ 0x24
 8000724:	46bd      	mov	sp, r7
 8000726:	bd90      	pop	{r4, r7, pc}

08000728 <ILI9341_DrawFilledCircle>:
 8000728:	b590      	push	{r4, r7, lr}
 800072a:	b08b      	sub	sp, #44	@ 0x2c
 800072c:	af00      	add	r7, sp, #0
 800072e:	4604      	mov	r4, r0
 8000730:	4608      	mov	r0, r1
 8000732:	4611      	mov	r1, r2
 8000734:	461a      	mov	r2, r3
 8000736:	4623      	mov	r3, r4
 8000738:	80fb      	strh	r3, [r7, #6]
 800073a:	4603      	mov	r3, r0
 800073c:	80bb      	strh	r3, [r7, #4]
 800073e:	460b      	mov	r3, r1
 8000740:	807b      	strh	r3, [r7, #2]
 8000742:	4613      	mov	r3, r2
 8000744:	803b      	strh	r3, [r7, #0]
 8000746:	887b      	ldrh	r3, [r7, #2]
 8000748:	627b      	str	r3, [r7, #36]	@ 0x24
 800074a:	2300      	movs	r3, #0
 800074c:	623b      	str	r3, [r7, #32]
 800074e:	887b      	ldrh	r3, [r7, #2]
 8000750:	005b      	lsls	r3, r3, #1
 8000752:	f1c3 0301 	rsb	r3, r3, #1
 8000756:	61fb      	str	r3, [r7, #28]
 8000758:	2300      	movs	r3, #0
 800075a:	61bb      	str	r3, [r7, #24]
 800075c:	2300      	movs	r3, #0
 800075e:	617b      	str	r3, [r7, #20]
 8000760:	e061      	b.n	8000826 <ILI9341_DrawFilledCircle+0xfe>
 8000762:	88fa      	ldrh	r2, [r7, #6]
 8000764:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000766:	1ad3      	subs	r3, r2, r3
 8000768:	613b      	str	r3, [r7, #16]
 800076a:	e018      	b.n	800079e <ILI9341_DrawFilledCircle+0x76>
 800076c:	693b      	ldr	r3, [r7, #16]
 800076e:	b298      	uxth	r0, r3
 8000770:	6a3b      	ldr	r3, [r7, #32]
 8000772:	b29a      	uxth	r2, r3
 8000774:	88bb      	ldrh	r3, [r7, #4]
 8000776:	4413      	add	r3, r2
 8000778:	b29b      	uxth	r3, r3
 800077a:	883a      	ldrh	r2, [r7, #0]
 800077c:	4619      	mov	r1, r3
 800077e:	f000 fc53 	bl	8001028 <ILI9341_DrawPixel>
 8000782:	693b      	ldr	r3, [r7, #16]
 8000784:	b298      	uxth	r0, r3
 8000786:	6a3b      	ldr	r3, [r7, #32]
 8000788:	b29b      	uxth	r3, r3
 800078a:	88ba      	ldrh	r2, [r7, #4]
 800078c:	1ad3      	subs	r3, r2, r3
 800078e:	b29b      	uxth	r3, r3
 8000790:	883a      	ldrh	r2, [r7, #0]
 8000792:	4619      	mov	r1, r3
 8000794:	f000 fc48 	bl	8001028 <ILI9341_DrawPixel>
 8000798:	693b      	ldr	r3, [r7, #16]
 800079a:	3301      	adds	r3, #1
 800079c:	613b      	str	r3, [r7, #16]
 800079e:	88fa      	ldrh	r2, [r7, #6]
 80007a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80007a2:	4413      	add	r3, r2
 80007a4:	693a      	ldr	r2, [r7, #16]
 80007a6:	429a      	cmp	r2, r3
 80007a8:	dde0      	ble.n	800076c <ILI9341_DrawFilledCircle+0x44>
 80007aa:	88fa      	ldrh	r2, [r7, #6]
 80007ac:	6a3b      	ldr	r3, [r7, #32]
 80007ae:	1ad3      	subs	r3, r2, r3
 80007b0:	60fb      	str	r3, [r7, #12]
 80007b2:	e018      	b.n	80007e6 <ILI9341_DrawFilledCircle+0xbe>
 80007b4:	68fb      	ldr	r3, [r7, #12]
 80007b6:	b298      	uxth	r0, r3
 80007b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80007ba:	b29a      	uxth	r2, r3
 80007bc:	88bb      	ldrh	r3, [r7, #4]
 80007be:	4413      	add	r3, r2
 80007c0:	b29b      	uxth	r3, r3
 80007c2:	883a      	ldrh	r2, [r7, #0]
 80007c4:	4619      	mov	r1, r3
 80007c6:	f000 fc2f 	bl	8001028 <ILI9341_DrawPixel>
 80007ca:	68fb      	ldr	r3, [r7, #12]
 80007cc:	b298      	uxth	r0, r3
 80007ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80007d0:	b29b      	uxth	r3, r3
 80007d2:	88ba      	ldrh	r2, [r7, #4]
 80007d4:	1ad3      	subs	r3, r2, r3
 80007d6:	b29b      	uxth	r3, r3
 80007d8:	883a      	ldrh	r2, [r7, #0]
 80007da:	4619      	mov	r1, r3
 80007dc:	f000 fc24 	bl	8001028 <ILI9341_DrawPixel>
 80007e0:	68fb      	ldr	r3, [r7, #12]
 80007e2:	3301      	adds	r3, #1
 80007e4:	60fb      	str	r3, [r7, #12]
 80007e6:	88fa      	ldrh	r2, [r7, #6]
 80007e8:	6a3b      	ldr	r3, [r7, #32]
 80007ea:	4413      	add	r3, r2
 80007ec:	68fa      	ldr	r2, [r7, #12]
 80007ee:	429a      	cmp	r2, r3
 80007f0:	dde0      	ble.n	80007b4 <ILI9341_DrawFilledCircle+0x8c>
 80007f2:	6a3b      	ldr	r3, [r7, #32]
 80007f4:	3301      	adds	r3, #1
 80007f6:	623b      	str	r3, [r7, #32]
 80007f8:	697a      	ldr	r2, [r7, #20]
 80007fa:	69bb      	ldr	r3, [r7, #24]
 80007fc:	4413      	add	r3, r2
 80007fe:	617b      	str	r3, [r7, #20]
 8000800:	69bb      	ldr	r3, [r7, #24]
 8000802:	3302      	adds	r3, #2
 8000804:	61bb      	str	r3, [r7, #24]
 8000806:	697b      	ldr	r3, [r7, #20]
 8000808:	005a      	lsls	r2, r3, #1
 800080a:	69fb      	ldr	r3, [r7, #28]
 800080c:	4413      	add	r3, r2
 800080e:	2b00      	cmp	r3, #0
 8000810:	dd09      	ble.n	8000826 <ILI9341_DrawFilledCircle+0xfe>
 8000812:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000814:	3b01      	subs	r3, #1
 8000816:	627b      	str	r3, [r7, #36]	@ 0x24
 8000818:	697a      	ldr	r2, [r7, #20]
 800081a:	69fb      	ldr	r3, [r7, #28]
 800081c:	4413      	add	r3, r2
 800081e:	617b      	str	r3, [r7, #20]
 8000820:	69fb      	ldr	r3, [r7, #28]
 8000822:	3302      	adds	r3, #2
 8000824:	61fb      	str	r3, [r7, #28]
 8000826:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8000828:	6a3b      	ldr	r3, [r7, #32]
 800082a:	429a      	cmp	r2, r3
 800082c:	da99      	bge.n	8000762 <ILI9341_DrawFilledCircle+0x3a>
 800082e:	bf00      	nop
 8000830:	bf00      	nop
 8000832:	372c      	adds	r7, #44	@ 0x2c
 8000834:	46bd      	mov	sp, r7
 8000836:	bd90      	pop	{r4, r7, pc}

08000838 <ILI9341_DrawChar>:
 8000838:	b590      	push	{r4, r7, lr}
 800083a:	b08d      	sub	sp, #52	@ 0x34
 800083c:	af02      	add	r7, sp, #8
 800083e:	60b9      	str	r1, [r7, #8]
 8000840:	4611      	mov	r1, r2
 8000842:	461a      	mov	r2, r3
 8000844:	4603      	mov	r3, r0
 8000846:	73fb      	strb	r3, [r7, #15]
 8000848:	460b      	mov	r3, r1
 800084a:	81bb      	strh	r3, [r7, #12]
 800084c:	4613      	mov	r3, r2
 800084e:	80fb      	strh	r3, [r7, #6]
 8000850:	7bfb      	ldrb	r3, [r7, #15]
 8000852:	2b1e      	cmp	r3, #30
 8000854:	d964      	bls.n	8000920 <ILI9341_DrawChar+0xe8>
 8000856:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800085a:	2b00      	cmp	r3, #0
 800085c:	db60      	blt.n	8000920 <ILI9341_DrawChar+0xe8>
 800085e:	68bb      	ldr	r3, [r7, #8]
 8000860:	781b      	ldrb	r3, [r3, #0]
 8000862:	77fb      	strb	r3, [r7, #31]
 8000864:	68bb      	ldr	r3, [r7, #8]
 8000866:	3301      	adds	r3, #1
 8000868:	781b      	ldrb	r3, [r3, #0]
 800086a:	77bb      	strb	r3, [r7, #30]
 800086c:	68bb      	ldr	r3, [r7, #8]
 800086e:	3302      	adds	r3, #2
 8000870:	781b      	ldrb	r3, [r3, #0]
 8000872:	777b      	strb	r3, [r7, #29]
 8000874:	68bb      	ldr	r3, [r7, #8]
 8000876:	3303      	adds	r3, #3
 8000878:	781b      	ldrb	r3, [r3, #0]
 800087a:	773b      	strb	r3, [r7, #28]
 800087c:	7bfb      	ldrb	r3, [r7, #15]
 800087e:	3b20      	subs	r3, #32
 8000880:	7ffa      	ldrb	r2, [r7, #31]
 8000882:	fb02 f303 	mul.w	r3, r2, r3
 8000886:	3304      	adds	r3, #4
 8000888:	68ba      	ldr	r2, [r7, #8]
 800088a:	4413      	add	r3, r2
 800088c:	61bb      	str	r3, [r7, #24]
 800088e:	7fbb      	ldrb	r3, [r7, #30]
 8000890:	b29a      	uxth	r2, r3
 8000892:	7f7b      	ldrb	r3, [r7, #29]
 8000894:	b29c      	uxth	r4, r3
 8000896:	88f9      	ldrh	r1, [r7, #6]
 8000898:	89b8      	ldrh	r0, [r7, #12]
 800089a:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 800089c:	9300      	str	r3, [sp, #0]
 800089e:	4623      	mov	r3, r4
 80008a0:	f000 fc28 	bl	80010f4 <ILI9341_DrawRectangle>
 80008a4:	2300      	movs	r3, #0
 80008a6:	627b      	str	r3, [r7, #36]	@ 0x24
 80008a8:	e035      	b.n	8000916 <ILI9341_DrawChar+0xde>
 80008aa:	2300      	movs	r3, #0
 80008ac:	623b      	str	r3, [r7, #32]
 80008ae:	e02b      	b.n	8000908 <ILI9341_DrawChar+0xd0>
 80008b0:	7f3b      	ldrb	r3, [r7, #28]
 80008b2:	6a3a      	ldr	r2, [r7, #32]
 80008b4:	fb03 f202 	mul.w	r2, r3, r2
 80008b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80008ba:	10db      	asrs	r3, r3, #3
 80008bc:	f003 031f 	and.w	r3, r3, #31
 80008c0:	4413      	add	r3, r2
 80008c2:	3301      	adds	r3, #1
 80008c4:	69ba      	ldr	r2, [r7, #24]
 80008c6:	4413      	add	r3, r2
 80008c8:	781b      	ldrb	r3, [r3, #0]
 80008ca:	75fb      	strb	r3, [r7, #23]
 80008cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80008ce:	f003 0307 	and.w	r3, r3, #7
 80008d2:	2201      	movs	r2, #1
 80008d4:	fa02 f303 	lsl.w	r3, r2, r3
 80008d8:	75bb      	strb	r3, [r7, #22]
 80008da:	7dfa      	ldrb	r2, [r7, #23]
 80008dc:	7dbb      	ldrb	r3, [r7, #22]
 80008de:	4013      	ands	r3, r2
 80008e0:	b2db      	uxtb	r3, r3
 80008e2:	2b00      	cmp	r3, #0
 80008e4:	d00d      	beq.n	8000902 <ILI9341_DrawChar+0xca>
 80008e6:	6a3b      	ldr	r3, [r7, #32]
 80008e8:	b29a      	uxth	r2, r3
 80008ea:	89bb      	ldrh	r3, [r7, #12]
 80008ec:	4413      	add	r3, r2
 80008ee:	b298      	uxth	r0, r3
 80008f0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80008f2:	b29a      	uxth	r2, r3
 80008f4:	88fb      	ldrh	r3, [r7, #6]
 80008f6:	4413      	add	r3, r2
 80008f8:	b29b      	uxth	r3, r3
 80008fa:	8f3a      	ldrh	r2, [r7, #56]	@ 0x38
 80008fc:	4619      	mov	r1, r3
 80008fe:	f000 fb93 	bl	8001028 <ILI9341_DrawPixel>
 8000902:	6a3b      	ldr	r3, [r7, #32]
 8000904:	3301      	adds	r3, #1
 8000906:	623b      	str	r3, [r7, #32]
 8000908:	7fbb      	ldrb	r3, [r7, #30]
 800090a:	6a3a      	ldr	r2, [r7, #32]
 800090c:	429a      	cmp	r2, r3
 800090e:	dbcf      	blt.n	80008b0 <ILI9341_DrawChar+0x78>
 8000910:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000912:	3301      	adds	r3, #1
 8000914:	627b      	str	r3, [r7, #36]	@ 0x24
 8000916:	7f7b      	ldrb	r3, [r7, #29]
 8000918:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800091a:	429a      	cmp	r2, r3
 800091c:	dbc5      	blt.n	80008aa <ILI9341_DrawChar+0x72>
 800091e:	e000      	b.n	8000922 <ILI9341_DrawChar+0xea>
 8000920:	bf00      	nop
 8000922:	372c      	adds	r7, #44	@ 0x2c
 8000924:	46bd      	mov	sp, r7
 8000926:	bd90      	pop	{r4, r7, pc}

08000928 <ILI9341_DrawText>:
 8000928:	b580      	push	{r7, lr}
 800092a:	b08a      	sub	sp, #40	@ 0x28
 800092c:	af02      	add	r7, sp, #8
 800092e:	60f8      	str	r0, [r7, #12]
 8000930:	60b9      	str	r1, [r7, #8]
 8000932:	4611      	mov	r1, r2
 8000934:	461a      	mov	r2, r3
 8000936:	460b      	mov	r3, r1
 8000938:	80fb      	strh	r3, [r7, #6]
 800093a:	4613      	mov	r3, r2
 800093c:	80bb      	strh	r3, [r7, #4]
 800093e:	68bb      	ldr	r3, [r7, #8]
 8000940:	781b      	ldrb	r3, [r3, #0]
 8000942:	77fb      	strb	r3, [r7, #31]
 8000944:	68bb      	ldr	r3, [r7, #8]
 8000946:	3301      	adds	r3, #1
 8000948:	781b      	ldrb	r3, [r3, #0]
 800094a:	77bb      	strb	r3, [r7, #30]
 800094c:	e02d      	b.n	80009aa <ILI9341_DrawText+0x82>
 800094e:	68fb      	ldr	r3, [r7, #12]
 8000950:	7818      	ldrb	r0, [r3, #0]
 8000952:	88b9      	ldrh	r1, [r7, #4]
 8000954:	88fa      	ldrh	r2, [r7, #6]
 8000956:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 8000958:	9301      	str	r3, [sp, #4]
 800095a:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 800095c:	9300      	str	r3, [sp, #0]
 800095e:	460b      	mov	r3, r1
 8000960:	68b9      	ldr	r1, [r7, #8]
 8000962:	f7ff ff69 	bl	8000838 <ILI9341_DrawChar>
 8000966:	68fb      	ldr	r3, [r7, #12]
 8000968:	781b      	ldrb	r3, [r3, #0]
 800096a:	3b20      	subs	r3, #32
 800096c:	7ffa      	ldrb	r2, [r7, #31]
 800096e:	fb02 f303 	mul.w	r3, r2, r3
 8000972:	3304      	adds	r3, #4
 8000974:	68ba      	ldr	r2, [r7, #8]
 8000976:	4413      	add	r3, r2
 8000978:	61bb      	str	r3, [r7, #24]
 800097a:	69bb      	ldr	r3, [r7, #24]
 800097c:	781b      	ldrb	r3, [r3, #0]
 800097e:	75fb      	strb	r3, [r7, #23]
 8000980:	7dfb      	ldrb	r3, [r7, #23]
 8000982:	1c9a      	adds	r2, r3, #2
 8000984:	7fbb      	ldrb	r3, [r7, #30]
 8000986:	429a      	cmp	r2, r3
 8000988:	da07      	bge.n	800099a <ILI9341_DrawText+0x72>
 800098a:	7dfb      	ldrb	r3, [r7, #23]
 800098c:	b29a      	uxth	r2, r3
 800098e:	88fb      	ldrh	r3, [r7, #6]
 8000990:	4413      	add	r3, r2
 8000992:	b29b      	uxth	r3, r3
 8000994:	3302      	adds	r3, #2
 8000996:	80fb      	strh	r3, [r7, #6]
 8000998:	e004      	b.n	80009a4 <ILI9341_DrawText+0x7c>
 800099a:	7fbb      	ldrb	r3, [r7, #30]
 800099c:	b29a      	uxth	r2, r3
 800099e:	88fb      	ldrh	r3, [r7, #6]
 80009a0:	4413      	add	r3, r2
 80009a2:	80fb      	strh	r3, [r7, #6]
 80009a4:	68fb      	ldr	r3, [r7, #12]
 80009a6:	3301      	adds	r3, #1
 80009a8:	60fb      	str	r3, [r7, #12]
 80009aa:	68fb      	ldr	r3, [r7, #12]
 80009ac:	781b      	ldrb	r3, [r3, #0]
 80009ae:	2b00      	cmp	r3, #0
 80009b0:	d1cd      	bne.n	800094e <ILI9341_DrawText+0x26>
 80009b2:	bf00      	nop
 80009b4:	bf00      	nop
 80009b6:	3720      	adds	r7, #32
 80009b8:	46bd      	mov	sp, r7
 80009ba:	bd80      	pop	{r7, pc}

080009bc <HAL_SPI_TxCpltCallback>:
 80009bc:	b580      	push	{r7, lr}
 80009be:	b082      	sub	sp, #8
 80009c0:	af00      	add	r7, sp, #0
 80009c2:	6078      	str	r0, [r7, #4]
 80009c4:	687b      	ldr	r3, [r7, #4]
 80009c6:	4a06      	ldr	r2, [pc, #24]	@ (80009e0 <HAL_SPI_TxCpltCallback+0x24>)
 80009c8:	4293      	cmp	r3, r2
 80009ca:	d104      	bne.n	80009d6 <HAL_SPI_TxCpltCallback+0x1a>
 80009cc:	2201      	movs	r2, #1
 80009ce:	2104      	movs	r1, #4
 80009d0:	4804      	ldr	r0, [pc, #16]	@ (80009e4 <HAL_SPI_TxCpltCallback+0x28>)
 80009d2:	f003 fb8b 	bl	80040ec <HAL_GPIO_WritePin>
 80009d6:	bf00      	nop
 80009d8:	3708      	adds	r7, #8
 80009da:	46bd      	mov	sp, r7
 80009dc:	bd80      	pop	{r7, pc}
 80009de:	bf00      	nop
 80009e0:	200000bc 	.word	0x200000bc
 80009e4:	40020800 	.word	0x40020800

080009e8 <ILI9341_SPI_Tx>:
 80009e8:	b580      	push	{r7, lr}
 80009ea:	b082      	sub	sp, #8
 80009ec:	af00      	add	r7, sp, #0
 80009ee:	4603      	mov	r3, r0
 80009f0:	71fb      	strb	r3, [r7, #7]
 80009f2:	bf00      	nop
 80009f4:	4b08      	ldr	r3, [pc, #32]	@ (8000a18 <ILI9341_SPI_Tx+0x30>)
 80009f6:	681b      	ldr	r3, [r3, #0]
 80009f8:	689b      	ldr	r3, [r3, #8]
 80009fa:	f003 0302 	and.w	r3, r3, #2
 80009fe:	2b02      	cmp	r3, #2
 8000a00:	d1f8      	bne.n	80009f4 <ILI9341_SPI_Tx+0xc>
 8000a02:	1dfb      	adds	r3, r7, #7
 8000a04:	2201      	movs	r2, #1
 8000a06:	4619      	mov	r1, r3
 8000a08:	4803      	ldr	r0, [pc, #12]	@ (8000a18 <ILI9341_SPI_Tx+0x30>)
 8000a0a:	f004 fcf3 	bl	80053f4 <HAL_SPI_Transmit_DMA>
 8000a0e:	bf00      	nop
 8000a10:	3708      	adds	r7, #8
 8000a12:	46bd      	mov	sp, r7
 8000a14:	bd80      	pop	{r7, pc}
 8000a16:	bf00      	nop
 8000a18:	200000bc 	.word	0x200000bc

08000a1c <ILI9341_SPI_TxBuffer>:
 8000a1c:	b580      	push	{r7, lr}
 8000a1e:	b082      	sub	sp, #8
 8000a20:	af00      	add	r7, sp, #0
 8000a22:	6078      	str	r0, [r7, #4]
 8000a24:	460b      	mov	r3, r1
 8000a26:	807b      	strh	r3, [r7, #2]
 8000a28:	bf00      	nop
 8000a2a:	4b08      	ldr	r3, [pc, #32]	@ (8000a4c <ILI9341_SPI_TxBuffer+0x30>)
 8000a2c:	681b      	ldr	r3, [r3, #0]
 8000a2e:	689b      	ldr	r3, [r3, #8]
 8000a30:	f003 0302 	and.w	r3, r3, #2
 8000a34:	2b02      	cmp	r3, #2
 8000a36:	d1f8      	bne.n	8000a2a <ILI9341_SPI_TxBuffer+0xe>
 8000a38:	887b      	ldrh	r3, [r7, #2]
 8000a3a:	461a      	mov	r2, r3
 8000a3c:	6879      	ldr	r1, [r7, #4]
 8000a3e:	4803      	ldr	r0, [pc, #12]	@ (8000a4c <ILI9341_SPI_TxBuffer+0x30>)
 8000a40:	f004 fcd8 	bl	80053f4 <HAL_SPI_Transmit_DMA>
 8000a44:	bf00      	nop
 8000a46:	3708      	adds	r7, #8
 8000a48:	46bd      	mov	sp, r7
 8000a4a:	bd80      	pop	{r7, pc}
 8000a4c:	200000bc 	.word	0x200000bc

08000a50 <ILI9341_WriteCommand>:
 8000a50:	b580      	push	{r7, lr}
 8000a52:	b082      	sub	sp, #8
 8000a54:	af00      	add	r7, sp, #0
 8000a56:	4603      	mov	r3, r0
 8000a58:	71fb      	strb	r3, [r7, #7]
 8000a5a:	2200      	movs	r2, #0
 8000a5c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000a60:	4807      	ldr	r0, [pc, #28]	@ (8000a80 <ILI9341_WriteCommand+0x30>)
 8000a62:	f003 fb43 	bl	80040ec <HAL_GPIO_WritePin>
 8000a66:	2200      	movs	r2, #0
 8000a68:	2104      	movs	r1, #4
 8000a6a:	4806      	ldr	r0, [pc, #24]	@ (8000a84 <ILI9341_WriteCommand+0x34>)
 8000a6c:	f003 fb3e 	bl	80040ec <HAL_GPIO_WritePin>
 8000a70:	79fb      	ldrb	r3, [r7, #7]
 8000a72:	4618      	mov	r0, r3
 8000a74:	f7ff ffb8 	bl	80009e8 <ILI9341_SPI_Tx>
 8000a78:	bf00      	nop
 8000a7a:	3708      	adds	r7, #8
 8000a7c:	46bd      	mov	sp, r7
 8000a7e:	bd80      	pop	{r7, pc}
 8000a80:	40020c00 	.word	0x40020c00
 8000a84:	40020800 	.word	0x40020800

08000a88 <ILI9341_WriteData>:
 8000a88:	b580      	push	{r7, lr}
 8000a8a:	b082      	sub	sp, #8
 8000a8c:	af00      	add	r7, sp, #0
 8000a8e:	4603      	mov	r3, r0
 8000a90:	71fb      	strb	r3, [r7, #7]
 8000a92:	2201      	movs	r2, #1
 8000a94:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000a98:	4807      	ldr	r0, [pc, #28]	@ (8000ab8 <ILI9341_WriteData+0x30>)
 8000a9a:	f003 fb27 	bl	80040ec <HAL_GPIO_WritePin>
 8000a9e:	2200      	movs	r2, #0
 8000aa0:	2104      	movs	r1, #4
 8000aa2:	4806      	ldr	r0, [pc, #24]	@ (8000abc <ILI9341_WriteData+0x34>)
 8000aa4:	f003 fb22 	bl	80040ec <HAL_GPIO_WritePin>
 8000aa8:	79fb      	ldrb	r3, [r7, #7]
 8000aaa:	4618      	mov	r0, r3
 8000aac:	f7ff ff9c 	bl	80009e8 <ILI9341_SPI_Tx>
 8000ab0:	bf00      	nop
 8000ab2:	3708      	adds	r7, #8
 8000ab4:	46bd      	mov	sp, r7
 8000ab6:	bd80      	pop	{r7, pc}
 8000ab8:	40020c00 	.word	0x40020c00
 8000abc:	40020800 	.word	0x40020800

08000ac0 <ILI9341_WriteBuffer>:
 8000ac0:	b580      	push	{r7, lr}
 8000ac2:	b082      	sub	sp, #8
 8000ac4:	af00      	add	r7, sp, #0
 8000ac6:	6078      	str	r0, [r7, #4]
 8000ac8:	460b      	mov	r3, r1
 8000aca:	807b      	strh	r3, [r7, #2]
 8000acc:	2201      	movs	r2, #1
 8000ace:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000ad2:	4808      	ldr	r0, [pc, #32]	@ (8000af4 <ILI9341_WriteBuffer+0x34>)
 8000ad4:	f003 fb0a 	bl	80040ec <HAL_GPIO_WritePin>
 8000ad8:	2200      	movs	r2, #0
 8000ada:	2104      	movs	r1, #4
 8000adc:	4806      	ldr	r0, [pc, #24]	@ (8000af8 <ILI9341_WriteBuffer+0x38>)
 8000ade:	f003 fb05 	bl	80040ec <HAL_GPIO_WritePin>
 8000ae2:	887b      	ldrh	r3, [r7, #2]
 8000ae4:	4619      	mov	r1, r3
 8000ae6:	6878      	ldr	r0, [r7, #4]
 8000ae8:	f7ff ff98 	bl	8000a1c <ILI9341_SPI_TxBuffer>
 8000aec:	bf00      	nop
 8000aee:	3708      	adds	r7, #8
 8000af0:	46bd      	mov	sp, r7
 8000af2:	bd80      	pop	{r7, pc}
 8000af4:	40020c00 	.word	0x40020c00
 8000af8:	40020800 	.word	0x40020800

08000afc <ILI9341_SetAddress>:
 8000afc:	b590      	push	{r4, r7, lr}
 8000afe:	b085      	sub	sp, #20
 8000b00:	af00      	add	r7, sp, #0
 8000b02:	4604      	mov	r4, r0
 8000b04:	4608      	mov	r0, r1
 8000b06:	4611      	mov	r1, r2
 8000b08:	461a      	mov	r2, r3
 8000b0a:	4623      	mov	r3, r4
 8000b0c:	80fb      	strh	r3, [r7, #6]
 8000b0e:	4603      	mov	r3, r0
 8000b10:	80bb      	strh	r3, [r7, #4]
 8000b12:	460b      	mov	r3, r1
 8000b14:	807b      	strh	r3, [r7, #2]
 8000b16:	4613      	mov	r3, r2
 8000b18:	803b      	strh	r3, [r7, #0]
 8000b1a:	88fb      	ldrh	r3, [r7, #6]
 8000b1c:	0a1b      	lsrs	r3, r3, #8
 8000b1e:	b29b      	uxth	r3, r3
 8000b20:	b2db      	uxtb	r3, r3
 8000b22:	733b      	strb	r3, [r7, #12]
 8000b24:	88fb      	ldrh	r3, [r7, #6]
 8000b26:	b2db      	uxtb	r3, r3
 8000b28:	737b      	strb	r3, [r7, #13]
 8000b2a:	887b      	ldrh	r3, [r7, #2]
 8000b2c:	0a1b      	lsrs	r3, r3, #8
 8000b2e:	b29b      	uxth	r3, r3
 8000b30:	b2db      	uxtb	r3, r3
 8000b32:	73bb      	strb	r3, [r7, #14]
 8000b34:	887b      	ldrh	r3, [r7, #2]
 8000b36:	b2db      	uxtb	r3, r3
 8000b38:	73fb      	strb	r3, [r7, #15]
 8000b3a:	202a      	movs	r0, #42	@ 0x2a
 8000b3c:	f7ff ff88 	bl	8000a50 <ILI9341_WriteCommand>
 8000b40:	f107 030c 	add.w	r3, r7, #12
 8000b44:	2104      	movs	r1, #4
 8000b46:	4618      	mov	r0, r3
 8000b48:	f7ff ffba 	bl	8000ac0 <ILI9341_WriteBuffer>
 8000b4c:	88bb      	ldrh	r3, [r7, #4]
 8000b4e:	0a1b      	lsrs	r3, r3, #8
 8000b50:	b29b      	uxth	r3, r3
 8000b52:	b2db      	uxtb	r3, r3
 8000b54:	733b      	strb	r3, [r7, #12]
 8000b56:	88bb      	ldrh	r3, [r7, #4]
 8000b58:	b2db      	uxtb	r3, r3
 8000b5a:	737b      	strb	r3, [r7, #13]
 8000b5c:	883b      	ldrh	r3, [r7, #0]
 8000b5e:	0a1b      	lsrs	r3, r3, #8
 8000b60:	b29b      	uxth	r3, r3
 8000b62:	b2db      	uxtb	r3, r3
 8000b64:	73bb      	strb	r3, [r7, #14]
 8000b66:	883b      	ldrh	r3, [r7, #0]
 8000b68:	b2db      	uxtb	r3, r3
 8000b6a:	73fb      	strb	r3, [r7, #15]
 8000b6c:	202b      	movs	r0, #43	@ 0x2b
 8000b6e:	f7ff ff6f 	bl	8000a50 <ILI9341_WriteCommand>
 8000b72:	f107 030c 	add.w	r3, r7, #12
 8000b76:	2104      	movs	r1, #4
 8000b78:	4618      	mov	r0, r3
 8000b7a:	f7ff ffa1 	bl	8000ac0 <ILI9341_WriteBuffer>
 8000b7e:	202c      	movs	r0, #44	@ 0x2c
 8000b80:	f7ff ff66 	bl	8000a50 <ILI9341_WriteCommand>
 8000b84:	bf00      	nop
 8000b86:	3714      	adds	r7, #20
 8000b88:	46bd      	mov	sp, r7
 8000b8a:	bd90      	pop	{r4, r7, pc}

08000b8c <ILI9341_Reset>:
 8000b8c:	b580      	push	{r7, lr}
 8000b8e:	af00      	add	r7, sp, #0
 8000b90:	2200      	movs	r2, #0
 8000b92:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000b96:	480d      	ldr	r0, [pc, #52]	@ (8000bcc <ILI9341_Reset+0x40>)
 8000b98:	f003 faa8 	bl	80040ec <HAL_GPIO_WritePin>
 8000b9c:	200a      	movs	r0, #10
 8000b9e:	f002 fc53 	bl	8003448 <HAL_Delay>
 8000ba2:	2200      	movs	r2, #0
 8000ba4:	2104      	movs	r1, #4
 8000ba6:	480a      	ldr	r0, [pc, #40]	@ (8000bd0 <ILI9341_Reset+0x44>)
 8000ba8:	f003 faa0 	bl	80040ec <HAL_GPIO_WritePin>
 8000bac:	200a      	movs	r0, #10
 8000bae:	f002 fc4b 	bl	8003448 <HAL_Delay>
 8000bb2:	2201      	movs	r2, #1
 8000bb4:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000bb8:	4804      	ldr	r0, [pc, #16]	@ (8000bcc <ILI9341_Reset+0x40>)
 8000bba:	f003 fa97 	bl	80040ec <HAL_GPIO_WritePin>
 8000bbe:	2201      	movs	r2, #1
 8000bc0:	2104      	movs	r1, #4
 8000bc2:	4803      	ldr	r0, [pc, #12]	@ (8000bd0 <ILI9341_Reset+0x44>)
 8000bc4:	f003 fa92 	bl	80040ec <HAL_GPIO_WritePin>
 8000bc8:	bf00      	nop
 8000bca:	bd80      	pop	{r7, pc}
 8000bcc:	40020c00 	.word	0x40020c00
 8000bd0:	40020800 	.word	0x40020800

08000bd4 <ILI9341_Enable>:
 8000bd4:	b580      	push	{r7, lr}
 8000bd6:	af00      	add	r7, sp, #0
 8000bd8:	2201      	movs	r2, #1
 8000bda:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000bde:	4802      	ldr	r0, [pc, #8]	@ (8000be8 <ILI9341_Enable+0x14>)
 8000be0:	f003 fa84 	bl	80040ec <HAL_GPIO_WritePin>
 8000be4:	bf00      	nop
 8000be6:	bd80      	pop	{r7, pc}
 8000be8:	40020c00 	.word	0x40020c00

08000bec <ILI9341_Init>:
 8000bec:	b580      	push	{r7, lr}
 8000bee:	af00      	add	r7, sp, #0
 8000bf0:	f7ff fff0 	bl	8000bd4 <ILI9341_Enable>
 8000bf4:	f7ff ffca 	bl	8000b8c <ILI9341_Reset>
 8000bf8:	2001      	movs	r0, #1
 8000bfa:	f7ff ff29 	bl	8000a50 <ILI9341_WriteCommand>
 8000bfe:	200a      	movs	r0, #10
 8000c00:	f002 fc22 	bl	8003448 <HAL_Delay>
 8000c04:	20cb      	movs	r0, #203	@ 0xcb
 8000c06:	f7ff ff23 	bl	8000a50 <ILI9341_WriteCommand>
 8000c0a:	2039      	movs	r0, #57	@ 0x39
 8000c0c:	f7ff ff3c 	bl	8000a88 <ILI9341_WriteData>
 8000c10:	202c      	movs	r0, #44	@ 0x2c
 8000c12:	f7ff ff39 	bl	8000a88 <ILI9341_WriteData>
 8000c16:	2000      	movs	r0, #0
 8000c18:	f7ff ff36 	bl	8000a88 <ILI9341_WriteData>
 8000c1c:	2034      	movs	r0, #52	@ 0x34
 8000c1e:	f7ff ff33 	bl	8000a88 <ILI9341_WriteData>
 8000c22:	2002      	movs	r0, #2
 8000c24:	f7ff ff30 	bl	8000a88 <ILI9341_WriteData>
 8000c28:	20cf      	movs	r0, #207	@ 0xcf
 8000c2a:	f7ff ff11 	bl	8000a50 <ILI9341_WriteCommand>
 8000c2e:	2000      	movs	r0, #0
 8000c30:	f7ff ff2a 	bl	8000a88 <ILI9341_WriteData>
 8000c34:	20c1      	movs	r0, #193	@ 0xc1
 8000c36:	f7ff ff27 	bl	8000a88 <ILI9341_WriteData>
 8000c3a:	2030      	movs	r0, #48	@ 0x30
 8000c3c:	f7ff ff24 	bl	8000a88 <ILI9341_WriteData>
 8000c40:	20e8      	movs	r0, #232	@ 0xe8
 8000c42:	f7ff ff05 	bl	8000a50 <ILI9341_WriteCommand>
 8000c46:	2085      	movs	r0, #133	@ 0x85
 8000c48:	f7ff ff1e 	bl	8000a88 <ILI9341_WriteData>
 8000c4c:	2000      	movs	r0, #0
 8000c4e:	f7ff ff1b 	bl	8000a88 <ILI9341_WriteData>
 8000c52:	2078      	movs	r0, #120	@ 0x78
 8000c54:	f7ff ff18 	bl	8000a88 <ILI9341_WriteData>
 8000c58:	20ea      	movs	r0, #234	@ 0xea
 8000c5a:	f7ff fef9 	bl	8000a50 <ILI9341_WriteCommand>
 8000c5e:	2000      	movs	r0, #0
 8000c60:	f7ff ff12 	bl	8000a88 <ILI9341_WriteData>
 8000c64:	2000      	movs	r0, #0
 8000c66:	f7ff ff0f 	bl	8000a88 <ILI9341_WriteData>
 8000c6a:	20ed      	movs	r0, #237	@ 0xed
 8000c6c:	f7ff fef0 	bl	8000a50 <ILI9341_WriteCommand>
 8000c70:	2064      	movs	r0, #100	@ 0x64
 8000c72:	f7ff ff09 	bl	8000a88 <ILI9341_WriteData>
 8000c76:	2003      	movs	r0, #3
 8000c78:	f7ff ff06 	bl	8000a88 <ILI9341_WriteData>
 8000c7c:	2012      	movs	r0, #18
 8000c7e:	f7ff ff03 	bl	8000a88 <ILI9341_WriteData>
 8000c82:	2081      	movs	r0, #129	@ 0x81
 8000c84:	f7ff ff00 	bl	8000a88 <ILI9341_WriteData>
 8000c88:	20f7      	movs	r0, #247	@ 0xf7
 8000c8a:	f7ff fee1 	bl	8000a50 <ILI9341_WriteCommand>
 8000c8e:	2020      	movs	r0, #32
 8000c90:	f7ff fefa 	bl	8000a88 <ILI9341_WriteData>
 8000c94:	20c0      	movs	r0, #192	@ 0xc0
 8000c96:	f7ff fedb 	bl	8000a50 <ILI9341_WriteCommand>
 8000c9a:	2023      	movs	r0, #35	@ 0x23
 8000c9c:	f7ff fef4 	bl	8000a88 <ILI9341_WriteData>
 8000ca0:	20c1      	movs	r0, #193	@ 0xc1
 8000ca2:	f7ff fed5 	bl	8000a50 <ILI9341_WriteCommand>
 8000ca6:	2010      	movs	r0, #16
 8000ca8:	f7ff feee 	bl	8000a88 <ILI9341_WriteData>
 8000cac:	20c5      	movs	r0, #197	@ 0xc5
 8000cae:	f7ff fecf 	bl	8000a50 <ILI9341_WriteCommand>
 8000cb2:	203e      	movs	r0, #62	@ 0x3e
 8000cb4:	f7ff fee8 	bl	8000a88 <ILI9341_WriteData>
 8000cb8:	2028      	movs	r0, #40	@ 0x28
 8000cba:	f7ff fee5 	bl	8000a88 <ILI9341_WriteData>
 8000cbe:	20c7      	movs	r0, #199	@ 0xc7
 8000cc0:	f7ff fec6 	bl	8000a50 <ILI9341_WriteCommand>
 8000cc4:	2086      	movs	r0, #134	@ 0x86
 8000cc6:	f7ff fedf 	bl	8000a88 <ILI9341_WriteData>
 8000cca:	2036      	movs	r0, #54	@ 0x36
 8000ccc:	f7ff fec0 	bl	8000a50 <ILI9341_WriteCommand>
 8000cd0:	2048      	movs	r0, #72	@ 0x48
 8000cd2:	f7ff fed9 	bl	8000a88 <ILI9341_WriteData>
 8000cd6:	203a      	movs	r0, #58	@ 0x3a
 8000cd8:	f7ff feba 	bl	8000a50 <ILI9341_WriteCommand>
 8000cdc:	2055      	movs	r0, #85	@ 0x55
 8000cde:	f7ff fed3 	bl	8000a88 <ILI9341_WriteData>
 8000ce2:	20b1      	movs	r0, #177	@ 0xb1
 8000ce4:	f7ff feb4 	bl	8000a50 <ILI9341_WriteCommand>
 8000ce8:	2000      	movs	r0, #0
 8000cea:	f7ff fecd 	bl	8000a88 <ILI9341_WriteData>
 8000cee:	2018      	movs	r0, #24
 8000cf0:	f7ff feca 	bl	8000a88 <ILI9341_WriteData>
 8000cf4:	20b6      	movs	r0, #182	@ 0xb6
 8000cf6:	f7ff feab 	bl	8000a50 <ILI9341_WriteCommand>
 8000cfa:	2008      	movs	r0, #8
 8000cfc:	f7ff fec4 	bl	8000a88 <ILI9341_WriteData>
 8000d00:	2082      	movs	r0, #130	@ 0x82
 8000d02:	f7ff fec1 	bl	8000a88 <ILI9341_WriteData>
 8000d06:	2027      	movs	r0, #39	@ 0x27
 8000d08:	f7ff febe 	bl	8000a88 <ILI9341_WriteData>
 8000d0c:	20f2      	movs	r0, #242	@ 0xf2
 8000d0e:	f7ff fe9f 	bl	8000a50 <ILI9341_WriteCommand>
 8000d12:	2000      	movs	r0, #0
 8000d14:	f7ff feb8 	bl	8000a88 <ILI9341_WriteData>
 8000d18:	2026      	movs	r0, #38	@ 0x26
 8000d1a:	f7ff fe99 	bl	8000a50 <ILI9341_WriteCommand>
 8000d1e:	2001      	movs	r0, #1
 8000d20:	f7ff feb2 	bl	8000a88 <ILI9341_WriteData>
 8000d24:	20e0      	movs	r0, #224	@ 0xe0
 8000d26:	f7ff fe93 	bl	8000a50 <ILI9341_WriteCommand>
 8000d2a:	200f      	movs	r0, #15
 8000d2c:	f7ff feac 	bl	8000a88 <ILI9341_WriteData>
 8000d30:	2031      	movs	r0, #49	@ 0x31
 8000d32:	f7ff fea9 	bl	8000a88 <ILI9341_WriteData>
 8000d36:	202b      	movs	r0, #43	@ 0x2b
 8000d38:	f7ff fea6 	bl	8000a88 <ILI9341_WriteData>
 8000d3c:	200c      	movs	r0, #12
 8000d3e:	f7ff fea3 	bl	8000a88 <ILI9341_WriteData>
 8000d42:	200e      	movs	r0, #14
 8000d44:	f7ff fea0 	bl	8000a88 <ILI9341_WriteData>
 8000d48:	2008      	movs	r0, #8
 8000d4a:	f7ff fe9d 	bl	8000a88 <ILI9341_WriteData>
 8000d4e:	204e      	movs	r0, #78	@ 0x4e
 8000d50:	f7ff fe9a 	bl	8000a88 <ILI9341_WriteData>
 8000d54:	20f1      	movs	r0, #241	@ 0xf1
 8000d56:	f7ff fe97 	bl	8000a88 <ILI9341_WriteData>
 8000d5a:	2037      	movs	r0, #55	@ 0x37
 8000d5c:	f7ff fe94 	bl	8000a88 <ILI9341_WriteData>
 8000d60:	2007      	movs	r0, #7
 8000d62:	f7ff fe91 	bl	8000a88 <ILI9341_WriteData>
 8000d66:	2010      	movs	r0, #16
 8000d68:	f7ff fe8e 	bl	8000a88 <ILI9341_WriteData>
 8000d6c:	2003      	movs	r0, #3
 8000d6e:	f7ff fe8b 	bl	8000a88 <ILI9341_WriteData>
 8000d72:	200e      	movs	r0, #14
 8000d74:	f7ff fe88 	bl	8000a88 <ILI9341_WriteData>
 8000d78:	2009      	movs	r0, #9
 8000d7a:	f7ff fe85 	bl	8000a88 <ILI9341_WriteData>
 8000d7e:	2000      	movs	r0, #0
 8000d80:	f7ff fe82 	bl	8000a88 <ILI9341_WriteData>
 8000d84:	20e1      	movs	r0, #225	@ 0xe1
 8000d86:	f7ff fe63 	bl	8000a50 <ILI9341_WriteCommand>
 8000d8a:	2000      	movs	r0, #0
 8000d8c:	f7ff fe7c 	bl	8000a88 <ILI9341_WriteData>
 8000d90:	200e      	movs	r0, #14
 8000d92:	f7ff fe79 	bl	8000a88 <ILI9341_WriteData>
 8000d96:	2014      	movs	r0, #20
 8000d98:	f7ff fe76 	bl	8000a88 <ILI9341_WriteData>
 8000d9c:	2003      	movs	r0, #3
 8000d9e:	f7ff fe73 	bl	8000a88 <ILI9341_WriteData>
 8000da2:	2011      	movs	r0, #17
 8000da4:	f7ff fe70 	bl	8000a88 <ILI9341_WriteData>
 8000da8:	2007      	movs	r0, #7
 8000daa:	f7ff fe6d 	bl	8000a88 <ILI9341_WriteData>
 8000dae:	2031      	movs	r0, #49	@ 0x31
 8000db0:	f7ff fe6a 	bl	8000a88 <ILI9341_WriteData>
 8000db4:	20c1      	movs	r0, #193	@ 0xc1
 8000db6:	f7ff fe67 	bl	8000a88 <ILI9341_WriteData>
 8000dba:	2048      	movs	r0, #72	@ 0x48
 8000dbc:	f7ff fe64 	bl	8000a88 <ILI9341_WriteData>
 8000dc0:	2008      	movs	r0, #8
 8000dc2:	f7ff fe61 	bl	8000a88 <ILI9341_WriteData>
 8000dc6:	200f      	movs	r0, #15
 8000dc8:	f7ff fe5e 	bl	8000a88 <ILI9341_WriteData>
 8000dcc:	200c      	movs	r0, #12
 8000dce:	f7ff fe5b 	bl	8000a88 <ILI9341_WriteData>
 8000dd2:	2031      	movs	r0, #49	@ 0x31
 8000dd4:	f7ff fe58 	bl	8000a88 <ILI9341_WriteData>
 8000dd8:	2036      	movs	r0, #54	@ 0x36
 8000dda:	f7ff fe55 	bl	8000a88 <ILI9341_WriteData>
 8000dde:	200f      	movs	r0, #15
 8000de0:	f7ff fe52 	bl	8000a88 <ILI9341_WriteData>
 8000de4:	2011      	movs	r0, #17
 8000de6:	f7ff fe33 	bl	8000a50 <ILI9341_WriteCommand>
 8000dea:	2064      	movs	r0, #100	@ 0x64
 8000dec:	f002 fb2c 	bl	8003448 <HAL_Delay>
 8000df0:	2029      	movs	r0, #41	@ 0x29
 8000df2:	f7ff fe2d 	bl	8000a50 <ILI9341_WriteCommand>
 8000df6:	2000      	movs	r0, #0
 8000df8:	f000 f802 	bl	8000e00 <ILI9341_SetRotation>
 8000dfc:	bf00      	nop
 8000dfe:	bd80      	pop	{r7, pc}

08000e00 <ILI9341_SetRotation>:
 8000e00:	b580      	push	{r7, lr}
 8000e02:	b082      	sub	sp, #8
 8000e04:	af00      	add	r7, sp, #0
 8000e06:	4603      	mov	r3, r0
 8000e08:	71fb      	strb	r3, [r7, #7]
 8000e0a:	2036      	movs	r0, #54	@ 0x36
 8000e0c:	f7ff fe20 	bl	8000a50 <ILI9341_WriteCommand>
 8000e10:	2001      	movs	r0, #1
 8000e12:	f002 fb19 	bl	8003448 <HAL_Delay>
 8000e16:	79fb      	ldrb	r3, [r7, #7]
 8000e18:	2b03      	cmp	r3, #3
 8000e1a:	d837      	bhi.n	8000e8c <ILI9341_SetRotation+0x8c>
 8000e1c:	a201      	add	r2, pc, #4	@ (adr r2, 8000e24 <ILI9341_SetRotation+0x24>)
 8000e1e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000e22:	bf00      	nop
 8000e24:	08000e35 	.word	0x08000e35
 8000e28:	08000e4b 	.word	0x08000e4b
 8000e2c:	08000e61 	.word	0x08000e61
 8000e30:	08000e77 	.word	0x08000e77
 8000e34:	2048      	movs	r0, #72	@ 0x48
 8000e36:	f7ff fe27 	bl	8000a88 <ILI9341_WriteData>
 8000e3a:	4b17      	ldr	r3, [pc, #92]	@ (8000e98 <ILI9341_SetRotation+0x98>)
 8000e3c:	22f0      	movs	r2, #240	@ 0xf0
 8000e3e:	801a      	strh	r2, [r3, #0]
 8000e40:	4b16      	ldr	r3, [pc, #88]	@ (8000e9c <ILI9341_SetRotation+0x9c>)
 8000e42:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8000e46:	801a      	strh	r2, [r3, #0]
 8000e48:	e021      	b.n	8000e8e <ILI9341_SetRotation+0x8e>
 8000e4a:	2028      	movs	r0, #40	@ 0x28
 8000e4c:	f7ff fe1c 	bl	8000a88 <ILI9341_WriteData>
 8000e50:	4b11      	ldr	r3, [pc, #68]	@ (8000e98 <ILI9341_SetRotation+0x98>)
 8000e52:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8000e56:	801a      	strh	r2, [r3, #0]
 8000e58:	4b10      	ldr	r3, [pc, #64]	@ (8000e9c <ILI9341_SetRotation+0x9c>)
 8000e5a:	22f0      	movs	r2, #240	@ 0xf0
 8000e5c:	801a      	strh	r2, [r3, #0]
 8000e5e:	e016      	b.n	8000e8e <ILI9341_SetRotation+0x8e>
 8000e60:	2088      	movs	r0, #136	@ 0x88
 8000e62:	f7ff fe11 	bl	8000a88 <ILI9341_WriteData>
 8000e66:	4b0c      	ldr	r3, [pc, #48]	@ (8000e98 <ILI9341_SetRotation+0x98>)
 8000e68:	22f0      	movs	r2, #240	@ 0xf0
 8000e6a:	801a      	strh	r2, [r3, #0]
 8000e6c:	4b0b      	ldr	r3, [pc, #44]	@ (8000e9c <ILI9341_SetRotation+0x9c>)
 8000e6e:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8000e72:	801a      	strh	r2, [r3, #0]
 8000e74:	e00b      	b.n	8000e8e <ILI9341_SetRotation+0x8e>
 8000e76:	20e8      	movs	r0, #232	@ 0xe8
 8000e78:	f7ff fe06 	bl	8000a88 <ILI9341_WriteData>
 8000e7c:	4b06      	ldr	r3, [pc, #24]	@ (8000e98 <ILI9341_SetRotation+0x98>)
 8000e7e:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8000e82:	801a      	strh	r2, [r3, #0]
 8000e84:	4b05      	ldr	r3, [pc, #20]	@ (8000e9c <ILI9341_SetRotation+0x9c>)
 8000e86:	22f0      	movs	r2, #240	@ 0xf0
 8000e88:	801a      	strh	r2, [r3, #0]
 8000e8a:	e000      	b.n	8000e8e <ILI9341_SetRotation+0x8e>
 8000e8c:	bf00      	nop
 8000e8e:	bf00      	nop
 8000e90:	3708      	adds	r7, #8
 8000e92:	46bd      	mov	sp, r7
 8000e94:	bd80      	pop	{r7, pc}
 8000e96:	bf00      	nop
 8000e98:	20000002 	.word	0x20000002
 8000e9c:	20000000 	.word	0x20000000

08000ea0 <ILI9341_DrawColorBurst>:
 8000ea0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000ea4:	b08d      	sub	sp, #52	@ 0x34
 8000ea6:	af00      	add	r7, sp, #0
 8000ea8:	4603      	mov	r3, r0
 8000eaa:	6039      	str	r1, [r7, #0]
 8000eac:	80fb      	strh	r3, [r7, #6]
 8000eae:	466b      	mov	r3, sp
 8000eb0:	461e      	mov	r6, r3
 8000eb2:	2300      	movs	r3, #0
 8000eb4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8000eb6:	683b      	ldr	r3, [r7, #0]
 8000eb8:	005b      	lsls	r3, r3, #1
 8000eba:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 8000ebe:	d202      	bcs.n	8000ec6 <ILI9341_DrawColorBurst+0x26>
 8000ec0:	683b      	ldr	r3, [r7, #0]
 8000ec2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8000ec4:	e002      	b.n	8000ecc <ILI9341_DrawColorBurst+0x2c>
 8000ec6:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8000eca:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8000ecc:	2201      	movs	r2, #1
 8000ece:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000ed2:	483f      	ldr	r0, [pc, #252]	@ (8000fd0 <ILI9341_DrawColorBurst+0x130>)
 8000ed4:	f003 f90a 	bl	80040ec <HAL_GPIO_WritePin>
 8000ed8:	2200      	movs	r2, #0
 8000eda:	2104      	movs	r1, #4
 8000edc:	483d      	ldr	r0, [pc, #244]	@ (8000fd4 <ILI9341_DrawColorBurst+0x134>)
 8000ede:	f003 f905 	bl	80040ec <HAL_GPIO_WritePin>
 8000ee2:	88fb      	ldrh	r3, [r7, #6]
 8000ee4:	0a1b      	lsrs	r3, r3, #8
 8000ee6:	b29b      	uxth	r3, r3
 8000ee8:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8000eec:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8000eee:	460b      	mov	r3, r1
 8000ef0:	3b01      	subs	r3, #1
 8000ef2:	61fb      	str	r3, [r7, #28]
 8000ef4:	2300      	movs	r3, #0
 8000ef6:	4688      	mov	r8, r1
 8000ef8:	4699      	mov	r9, r3
 8000efa:	f04f 0200 	mov.w	r2, #0
 8000efe:	f04f 0300 	mov.w	r3, #0
 8000f02:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8000f06:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8000f0a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8000f0e:	2300      	movs	r3, #0
 8000f10:	460c      	mov	r4, r1
 8000f12:	461d      	mov	r5, r3
 8000f14:	f04f 0200 	mov.w	r2, #0
 8000f18:	f04f 0300 	mov.w	r3, #0
 8000f1c:	00eb      	lsls	r3, r5, #3
 8000f1e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8000f22:	00e2      	lsls	r2, r4, #3
 8000f24:	1dcb      	adds	r3, r1, #7
 8000f26:	08db      	lsrs	r3, r3, #3
 8000f28:	00db      	lsls	r3, r3, #3
 8000f2a:	ebad 0d03 	sub.w	sp, sp, r3
 8000f2e:	466b      	mov	r3, sp
 8000f30:	3300      	adds	r3, #0
 8000f32:	61bb      	str	r3, [r7, #24]
 8000f34:	2300      	movs	r3, #0
 8000f36:	62bb      	str	r3, [r7, #40]	@ 0x28
 8000f38:	e00e      	b.n	8000f58 <ILI9341_DrawColorBurst+0xb8>
 8000f3a:	69ba      	ldr	r2, [r7, #24]
 8000f3c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8000f3e:	4413      	add	r3, r2
 8000f40:	f897 2023 	ldrb.w	r2, [r7, #35]	@ 0x23
 8000f44:	701a      	strb	r2, [r3, #0]
 8000f46:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8000f48:	3301      	adds	r3, #1
 8000f4a:	88fa      	ldrh	r2, [r7, #6]
 8000f4c:	b2d1      	uxtb	r1, r2
 8000f4e:	69ba      	ldr	r2, [r7, #24]
 8000f50:	54d1      	strb	r1, [r2, r3]
 8000f52:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8000f54:	3302      	adds	r3, #2
 8000f56:	62bb      	str	r3, [r7, #40]	@ 0x28
 8000f58:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8000f5a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000f5c:	429a      	cmp	r2, r3
 8000f5e:	d3ec      	bcc.n	8000f3a <ILI9341_DrawColorBurst+0x9a>
 8000f60:	683b      	ldr	r3, [r7, #0]
 8000f62:	005b      	lsls	r3, r3, #1
 8000f64:	617b      	str	r3, [r7, #20]
 8000f66:	697a      	ldr	r2, [r7, #20]
 8000f68:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000f6a:	fbb2 f3f3 	udiv	r3, r2, r3
 8000f6e:	613b      	str	r3, [r7, #16]
 8000f70:	697b      	ldr	r3, [r7, #20]
 8000f72:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8000f74:	fbb3 f2f2 	udiv	r2, r3, r2
 8000f78:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8000f7a:	fb01 f202 	mul.w	r2, r1, r2
 8000f7e:	1a9b      	subs	r3, r3, r2
 8000f80:	60fb      	str	r3, [r7, #12]
 8000f82:	693b      	ldr	r3, [r7, #16]
 8000f84:	2b00      	cmp	r3, #0
 8000f86:	d010      	beq.n	8000faa <ILI9341_DrawColorBurst+0x10a>
 8000f88:	2300      	movs	r3, #0
 8000f8a:	627b      	str	r3, [r7, #36]	@ 0x24
 8000f8c:	e009      	b.n	8000fa2 <ILI9341_DrawColorBurst+0x102>
 8000f8e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000f90:	b29a      	uxth	r2, r3
 8000f92:	230a      	movs	r3, #10
 8000f94:	69b9      	ldr	r1, [r7, #24]
 8000f96:	4810      	ldr	r0, [pc, #64]	@ (8000fd8 <ILI9341_DrawColorBurst+0x138>)
 8000f98:	f004 f8e7 	bl	800516a <HAL_SPI_Transmit>
 8000f9c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000f9e:	3301      	adds	r3, #1
 8000fa0:	627b      	str	r3, [r7, #36]	@ 0x24
 8000fa2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8000fa4:	693b      	ldr	r3, [r7, #16]
 8000fa6:	429a      	cmp	r2, r3
 8000fa8:	d3f1      	bcc.n	8000f8e <ILI9341_DrawColorBurst+0xee>
 8000faa:	68fb      	ldr	r3, [r7, #12]
 8000fac:	b29a      	uxth	r2, r3
 8000fae:	230a      	movs	r3, #10
 8000fb0:	69b9      	ldr	r1, [r7, #24]
 8000fb2:	4809      	ldr	r0, [pc, #36]	@ (8000fd8 <ILI9341_DrawColorBurst+0x138>)
 8000fb4:	f004 f8d9 	bl	800516a <HAL_SPI_Transmit>
 8000fb8:	2201      	movs	r2, #1
 8000fba:	2104      	movs	r1, #4
 8000fbc:	4805      	ldr	r0, [pc, #20]	@ (8000fd4 <ILI9341_DrawColorBurst+0x134>)
 8000fbe:	f003 f895 	bl	80040ec <HAL_GPIO_WritePin>
 8000fc2:	46b5      	mov	sp, r6
 8000fc4:	bf00      	nop
 8000fc6:	3734      	adds	r7, #52	@ 0x34
 8000fc8:	46bd      	mov	sp, r7
 8000fca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000fce:	bf00      	nop
 8000fd0:	40020c00 	.word	0x40020c00
 8000fd4:	40020800 	.word	0x40020800
 8000fd8:	200000bc 	.word	0x200000bc

08000fdc <ILI9341_FillScreen>:
 8000fdc:	b580      	push	{r7, lr}
 8000fde:	b082      	sub	sp, #8
 8000fe0:	af00      	add	r7, sp, #0
 8000fe2:	4603      	mov	r3, r0
 8000fe4:	80fb      	strh	r3, [r7, #6]
 8000fe6:	4b0e      	ldr	r3, [pc, #56]	@ (8001020 <ILI9341_FillScreen+0x44>)
 8000fe8:	881b      	ldrh	r3, [r3, #0]
 8000fea:	b29a      	uxth	r2, r3
 8000fec:	4b0d      	ldr	r3, [pc, #52]	@ (8001024 <ILI9341_FillScreen+0x48>)
 8000fee:	881b      	ldrh	r3, [r3, #0]
 8000ff0:	b29b      	uxth	r3, r3
 8000ff2:	2100      	movs	r1, #0
 8000ff4:	2000      	movs	r0, #0
 8000ff6:	f7ff fd81 	bl	8000afc <ILI9341_SetAddress>
 8000ffa:	4b09      	ldr	r3, [pc, #36]	@ (8001020 <ILI9341_FillScreen+0x44>)
 8000ffc:	881b      	ldrh	r3, [r3, #0]
 8000ffe:	b29b      	uxth	r3, r3
 8001000:	461a      	mov	r2, r3
 8001002:	4b08      	ldr	r3, [pc, #32]	@ (8001024 <ILI9341_FillScreen+0x48>)
 8001004:	881b      	ldrh	r3, [r3, #0]
 8001006:	b29b      	uxth	r3, r3
 8001008:	fb02 f303 	mul.w	r3, r2, r3
 800100c:	461a      	mov	r2, r3
 800100e:	88fb      	ldrh	r3, [r7, #6]
 8001010:	4611      	mov	r1, r2
 8001012:	4618      	mov	r0, r3
 8001014:	f7ff ff44 	bl	8000ea0 <ILI9341_DrawColorBurst>
 8001018:	bf00      	nop
 800101a:	3708      	adds	r7, #8
 800101c:	46bd      	mov	sp, r7
 800101e:	bd80      	pop	{r7, pc}
 8001020:	20000002 	.word	0x20000002
 8001024:	20000000 	.word	0x20000000

08001028 <ILI9341_DrawPixel>:
 8001028:	b580      	push	{r7, lr}
 800102a:	b086      	sub	sp, #24
 800102c:	af00      	add	r7, sp, #0
 800102e:	4603      	mov	r3, r0
 8001030:	80fb      	strh	r3, [r7, #6]
 8001032:	460b      	mov	r3, r1
 8001034:	80bb      	strh	r3, [r7, #4]
 8001036:	4613      	mov	r3, r2
 8001038:	807b      	strh	r3, [r7, #2]
 800103a:	4b2c      	ldr	r3, [pc, #176]	@ (80010ec <ILI9341_DrawPixel+0xc4>)
 800103c:	881b      	ldrh	r3, [r3, #0]
 800103e:	b29b      	uxth	r3, r3
 8001040:	88fa      	ldrh	r2, [r7, #6]
 8001042:	429a      	cmp	r2, r3
 8001044:	d24d      	bcs.n	80010e2 <ILI9341_DrawPixel+0xba>
 8001046:	4b2a      	ldr	r3, [pc, #168]	@ (80010f0 <ILI9341_DrawPixel+0xc8>)
 8001048:	881b      	ldrh	r3, [r3, #0]
 800104a:	b29b      	uxth	r3, r3
 800104c:	88ba      	ldrh	r2, [r7, #4]
 800104e:	429a      	cmp	r2, r3
 8001050:	d247      	bcs.n	80010e2 <ILI9341_DrawPixel+0xba>
 8001052:	88fb      	ldrh	r3, [r7, #6]
 8001054:	0a1b      	lsrs	r3, r3, #8
 8001056:	b29b      	uxth	r3, r3
 8001058:	b2db      	uxtb	r3, r3
 800105a:	753b      	strb	r3, [r7, #20]
 800105c:	88fb      	ldrh	r3, [r7, #6]
 800105e:	b2db      	uxtb	r3, r3
 8001060:	757b      	strb	r3, [r7, #21]
 8001062:	88fb      	ldrh	r3, [r7, #6]
 8001064:	3301      	adds	r3, #1
 8001066:	121b      	asrs	r3, r3, #8
 8001068:	b2db      	uxtb	r3, r3
 800106a:	75bb      	strb	r3, [r7, #22]
 800106c:	88fb      	ldrh	r3, [r7, #6]
 800106e:	b2db      	uxtb	r3, r3
 8001070:	3301      	adds	r3, #1
 8001072:	b2db      	uxtb	r3, r3
 8001074:	75fb      	strb	r3, [r7, #23]
 8001076:	88bb      	ldrh	r3, [r7, #4]
 8001078:	0a1b      	lsrs	r3, r3, #8
 800107a:	b29b      	uxth	r3, r3
 800107c:	b2db      	uxtb	r3, r3
 800107e:	743b      	strb	r3, [r7, #16]
 8001080:	88bb      	ldrh	r3, [r7, #4]
 8001082:	b2db      	uxtb	r3, r3
 8001084:	747b      	strb	r3, [r7, #17]
 8001086:	88bb      	ldrh	r3, [r7, #4]
 8001088:	3301      	adds	r3, #1
 800108a:	121b      	asrs	r3, r3, #8
 800108c:	b2db      	uxtb	r3, r3
 800108e:	74bb      	strb	r3, [r7, #18]
 8001090:	88bb      	ldrh	r3, [r7, #4]
 8001092:	b2db      	uxtb	r3, r3
 8001094:	3301      	adds	r3, #1
 8001096:	b2db      	uxtb	r3, r3
 8001098:	74fb      	strb	r3, [r7, #19]
 800109a:	887b      	ldrh	r3, [r7, #2]
 800109c:	0a1b      	lsrs	r3, r3, #8
 800109e:	b29b      	uxth	r3, r3
 80010a0:	b2db      	uxtb	r3, r3
 80010a2:	733b      	strb	r3, [r7, #12]
 80010a4:	887b      	ldrh	r3, [r7, #2]
 80010a6:	b2db      	uxtb	r3, r3
 80010a8:	737b      	strb	r3, [r7, #13]
 80010aa:	202a      	movs	r0, #42	@ 0x2a
 80010ac:	f7ff fcd0 	bl	8000a50 <ILI9341_WriteCommand>
 80010b0:	f107 0314 	add.w	r3, r7, #20
 80010b4:	2104      	movs	r1, #4
 80010b6:	4618      	mov	r0, r3
 80010b8:	f7ff fd02 	bl	8000ac0 <ILI9341_WriteBuffer>
 80010bc:	202b      	movs	r0, #43	@ 0x2b
 80010be:	f7ff fcc7 	bl	8000a50 <ILI9341_WriteCommand>
 80010c2:	f107 0310 	add.w	r3, r7, #16
 80010c6:	2104      	movs	r1, #4
 80010c8:	4618      	mov	r0, r3
 80010ca:	f7ff fcf9 	bl	8000ac0 <ILI9341_WriteBuffer>
 80010ce:	202c      	movs	r0, #44	@ 0x2c
 80010d0:	f7ff fcbe 	bl	8000a50 <ILI9341_WriteCommand>
 80010d4:	f107 030c 	add.w	r3, r7, #12
 80010d8:	2102      	movs	r1, #2
 80010da:	4618      	mov	r0, r3
 80010dc:	f7ff fcf0 	bl	8000ac0 <ILI9341_WriteBuffer>
 80010e0:	e000      	b.n	80010e4 <ILI9341_DrawPixel+0xbc>
 80010e2:	bf00      	nop
 80010e4:	3718      	adds	r7, #24
 80010e6:	46bd      	mov	sp, r7
 80010e8:	bd80      	pop	{r7, pc}
 80010ea:	bf00      	nop
 80010ec:	20000002 	.word	0x20000002
 80010f0:	20000000 	.word	0x20000000

080010f4 <ILI9341_DrawRectangle>:
 80010f4:	b590      	push	{r4, r7, lr}
 80010f6:	b083      	sub	sp, #12
 80010f8:	af00      	add	r7, sp, #0
 80010fa:	4604      	mov	r4, r0
 80010fc:	4608      	mov	r0, r1
 80010fe:	4611      	mov	r1, r2
 8001100:	461a      	mov	r2, r3
 8001102:	4623      	mov	r3, r4
 8001104:	80fb      	strh	r3, [r7, #6]
 8001106:	4603      	mov	r3, r0
 8001108:	80bb      	strh	r3, [r7, #4]
 800110a:	460b      	mov	r3, r1
 800110c:	807b      	strh	r3, [r7, #2]
 800110e:	4613      	mov	r3, r2
 8001110:	803b      	strh	r3, [r7, #0]
 8001112:	4b24      	ldr	r3, [pc, #144]	@ (80011a4 <ILI9341_DrawRectangle+0xb0>)
 8001114:	881b      	ldrh	r3, [r3, #0]
 8001116:	b29b      	uxth	r3, r3
 8001118:	88fa      	ldrh	r2, [r7, #6]
 800111a:	429a      	cmp	r2, r3
 800111c:	d23d      	bcs.n	800119a <ILI9341_DrawRectangle+0xa6>
 800111e:	4b22      	ldr	r3, [pc, #136]	@ (80011a8 <ILI9341_DrawRectangle+0xb4>)
 8001120:	881b      	ldrh	r3, [r3, #0]
 8001122:	b29b      	uxth	r3, r3
 8001124:	88ba      	ldrh	r2, [r7, #4]
 8001126:	429a      	cmp	r2, r3
 8001128:	d237      	bcs.n	800119a <ILI9341_DrawRectangle+0xa6>
 800112a:	88fa      	ldrh	r2, [r7, #6]
 800112c:	887b      	ldrh	r3, [r7, #2]
 800112e:	4413      	add	r3, r2
 8001130:	4a1c      	ldr	r2, [pc, #112]	@ (80011a4 <ILI9341_DrawRectangle+0xb0>)
 8001132:	8812      	ldrh	r2, [r2, #0]
 8001134:	b292      	uxth	r2, r2
 8001136:	4293      	cmp	r3, r2
 8001138:	dd05      	ble.n	8001146 <ILI9341_DrawRectangle+0x52>
 800113a:	4b1a      	ldr	r3, [pc, #104]	@ (80011a4 <ILI9341_DrawRectangle+0xb0>)
 800113c:	881b      	ldrh	r3, [r3, #0]
 800113e:	b29a      	uxth	r2, r3
 8001140:	88fb      	ldrh	r3, [r7, #6]
 8001142:	1ad3      	subs	r3, r2, r3
 8001144:	807b      	strh	r3, [r7, #2]
 8001146:	88ba      	ldrh	r2, [r7, #4]
 8001148:	883b      	ldrh	r3, [r7, #0]
 800114a:	4413      	add	r3, r2
 800114c:	4a16      	ldr	r2, [pc, #88]	@ (80011a8 <ILI9341_DrawRectangle+0xb4>)
 800114e:	8812      	ldrh	r2, [r2, #0]
 8001150:	b292      	uxth	r2, r2
 8001152:	4293      	cmp	r3, r2
 8001154:	dd05      	ble.n	8001162 <ILI9341_DrawRectangle+0x6e>
 8001156:	4b14      	ldr	r3, [pc, #80]	@ (80011a8 <ILI9341_DrawRectangle+0xb4>)
 8001158:	881b      	ldrh	r3, [r3, #0]
 800115a:	b29a      	uxth	r2, r3
 800115c:	88bb      	ldrh	r3, [r7, #4]
 800115e:	1ad3      	subs	r3, r2, r3
 8001160:	803b      	strh	r3, [r7, #0]
 8001162:	88fa      	ldrh	r2, [r7, #6]
 8001164:	887b      	ldrh	r3, [r7, #2]
 8001166:	4413      	add	r3, r2
 8001168:	b29b      	uxth	r3, r3
 800116a:	3b01      	subs	r3, #1
 800116c:	b29c      	uxth	r4, r3
 800116e:	88ba      	ldrh	r2, [r7, #4]
 8001170:	883b      	ldrh	r3, [r7, #0]
 8001172:	4413      	add	r3, r2
 8001174:	b29b      	uxth	r3, r3
 8001176:	3b01      	subs	r3, #1
 8001178:	b29b      	uxth	r3, r3
 800117a:	88b9      	ldrh	r1, [r7, #4]
 800117c:	88f8      	ldrh	r0, [r7, #6]
 800117e:	4622      	mov	r2, r4
 8001180:	f7ff fcbc 	bl	8000afc <ILI9341_SetAddress>
 8001184:	883b      	ldrh	r3, [r7, #0]
 8001186:	887a      	ldrh	r2, [r7, #2]
 8001188:	fb02 f303 	mul.w	r3, r2, r3
 800118c:	461a      	mov	r2, r3
 800118e:	8b3b      	ldrh	r3, [r7, #24]
 8001190:	4611      	mov	r1, r2
 8001192:	4618      	mov	r0, r3
 8001194:	f7ff fe84 	bl	8000ea0 <ILI9341_DrawColorBurst>
 8001198:	e000      	b.n	800119c <ILI9341_DrawRectangle+0xa8>
 800119a:	bf00      	nop
 800119c:	370c      	adds	r7, #12
 800119e:	46bd      	mov	sp, r7
 80011a0:	bd90      	pop	{r4, r7, pc}
 80011a2:	bf00      	nop
 80011a4:	20000002 	.word	0x20000002
 80011a8:	20000000 	.word	0x20000000

080011ac <ILI9341_DrawLine>:
 80011ac:	b590      	push	{r4, r7, lr}
 80011ae:	b089      	sub	sp, #36	@ 0x24
 80011b0:	af00      	add	r7, sp, #0
 80011b2:	4604      	mov	r4, r0
 80011b4:	4608      	mov	r0, r1
 80011b6:	4611      	mov	r1, r2
 80011b8:	461a      	mov	r2, r3
 80011ba:	4623      	mov	r3, r4
 80011bc:	80fb      	strh	r3, [r7, #6]
 80011be:	4603      	mov	r3, r0
 80011c0:	80bb      	strh	r3, [r7, #4]
 80011c2:	460b      	mov	r3, r1
 80011c4:	807b      	strh	r3, [r7, #2]
 80011c6:	4613      	mov	r3, r2
 80011c8:	803b      	strh	r3, [r7, #0]
 80011ca:	887a      	ldrh	r2, [r7, #2]
 80011cc:	88fb      	ldrh	r3, [r7, #6]
 80011ce:	1ad3      	subs	r3, r2, r3
 80011d0:	2b00      	cmp	r3, #0
 80011d2:	bfb8      	it	lt
 80011d4:	425b      	neglt	r3, r3
 80011d6:	61bb      	str	r3, [r7, #24]
 80011d8:	88fa      	ldrh	r2, [r7, #6]
 80011da:	887b      	ldrh	r3, [r7, #2]
 80011dc:	429a      	cmp	r2, r3
 80011de:	d201      	bcs.n	80011e4 <ILI9341_DrawLine+0x38>
 80011e0:	2301      	movs	r3, #1
 80011e2:	e001      	b.n	80011e8 <ILI9341_DrawLine+0x3c>
 80011e4:	f04f 33ff 	mov.w	r3, #4294967295
 80011e8:	617b      	str	r3, [r7, #20]
 80011ea:	883a      	ldrh	r2, [r7, #0]
 80011ec:	88bb      	ldrh	r3, [r7, #4]
 80011ee:	1ad3      	subs	r3, r2, r3
 80011f0:	2b00      	cmp	r3, #0
 80011f2:	bfb8      	it	lt
 80011f4:	425b      	neglt	r3, r3
 80011f6:	425b      	negs	r3, r3
 80011f8:	613b      	str	r3, [r7, #16]
 80011fa:	88ba      	ldrh	r2, [r7, #4]
 80011fc:	883b      	ldrh	r3, [r7, #0]
 80011fe:	429a      	cmp	r2, r3
 8001200:	d201      	bcs.n	8001206 <ILI9341_DrawLine+0x5a>
 8001202:	2301      	movs	r3, #1
 8001204:	e001      	b.n	800120a <ILI9341_DrawLine+0x5e>
 8001206:	f04f 33ff 	mov.w	r3, #4294967295
 800120a:	60fb      	str	r3, [r7, #12]
 800120c:	69ba      	ldr	r2, [r7, #24]
 800120e:	693b      	ldr	r3, [r7, #16]
 8001210:	4413      	add	r3, r2
 8001212:	61fb      	str	r3, [r7, #28]
 8001214:	8e3a      	ldrh	r2, [r7, #48]	@ 0x30
 8001216:	88b9      	ldrh	r1, [r7, #4]
 8001218:	88fb      	ldrh	r3, [r7, #6]
 800121a:	4618      	mov	r0, r3
 800121c:	f7ff ff04 	bl	8001028 <ILI9341_DrawPixel>
 8001220:	88fa      	ldrh	r2, [r7, #6]
 8001222:	887b      	ldrh	r3, [r7, #2]
 8001224:	429a      	cmp	r2, r3
 8001226:	d103      	bne.n	8001230 <ILI9341_DrawLine+0x84>
 8001228:	88ba      	ldrh	r2, [r7, #4]
 800122a:	883b      	ldrh	r3, [r7, #0]
 800122c:	429a      	cmp	r2, r3
 800122e:	d01d      	beq.n	800126c <ILI9341_DrawLine+0xc0>
 8001230:	69fb      	ldr	r3, [r7, #28]
 8001232:	005b      	lsls	r3, r3, #1
 8001234:	60bb      	str	r3, [r7, #8]
 8001236:	68ba      	ldr	r2, [r7, #8]
 8001238:	693b      	ldr	r3, [r7, #16]
 800123a:	429a      	cmp	r2, r3
 800123c:	db08      	blt.n	8001250 <ILI9341_DrawLine+0xa4>
 800123e:	69fa      	ldr	r2, [r7, #28]
 8001240:	693b      	ldr	r3, [r7, #16]
 8001242:	4413      	add	r3, r2
 8001244:	61fb      	str	r3, [r7, #28]
 8001246:	697b      	ldr	r3, [r7, #20]
 8001248:	b29a      	uxth	r2, r3
 800124a:	88fb      	ldrh	r3, [r7, #6]
 800124c:	4413      	add	r3, r2
 800124e:	80fb      	strh	r3, [r7, #6]
 8001250:	68ba      	ldr	r2, [r7, #8]
 8001252:	69bb      	ldr	r3, [r7, #24]
 8001254:	429a      	cmp	r2, r3
 8001256:	dcdd      	bgt.n	8001214 <ILI9341_DrawLine+0x68>
 8001258:	69fa      	ldr	r2, [r7, #28]
 800125a:	69bb      	ldr	r3, [r7, #24]
 800125c:	4413      	add	r3, r2
 800125e:	61fb      	str	r3, [r7, #28]
 8001260:	68fb      	ldr	r3, [r7, #12]
 8001262:	b29a      	uxth	r2, r3
 8001264:	88bb      	ldrh	r3, [r7, #4]
 8001266:	4413      	add	r3, r2
 8001268:	80bb      	strh	r3, [r7, #4]
 800126a:	e7d3      	b.n	8001214 <ILI9341_DrawLine+0x68>
 800126c:	bf00      	nop
 800126e:	bf00      	nop
 8001270:	3724      	adds	r7, #36	@ 0x24
 8001272:	46bd      	mov	sp, r7
 8001274:	bd90      	pop	{r4, r7, pc}

08001276 <draw_plane>:
/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
/* Game logic ----------------------------------------------------------------*/

// (x,y) = (0,0) tại góc trái gần nút bấm, x theo chiểu dài, y theo chiều rộng
void draw_plane(int x, int y) { // hàm vẽ mb
 8001276:	b590      	push	{r4, r7, lr}
 8001278:	b085      	sub	sp, #20
 800127a:	af02      	add	r7, sp, #8
 800127c:	6078      	str	r0, [r7, #4]
 800127e:	6039      	str	r1, [r7, #0]
	// Thân chính (mũi máy bay)
	ILI9341_DrawLine(x, y - 10, x + 15, y, BLUE);      // Cạnh trên
 8001280:	687b      	ldr	r3, [r7, #4]
 8001282:	b298      	uxth	r0, r3
 8001284:	683b      	ldr	r3, [r7, #0]
 8001286:	b29b      	uxth	r3, r3
 8001288:	3b0a      	subs	r3, #10
 800128a:	b299      	uxth	r1, r3
 800128c:	687b      	ldr	r3, [r7, #4]
 800128e:	b29b      	uxth	r3, r3
 8001290:	330f      	adds	r3, #15
 8001292:	b29a      	uxth	r2, r3
 8001294:	683b      	ldr	r3, [r7, #0]
 8001296:	b29b      	uxth	r3, r3
 8001298:	241f      	movs	r4, #31
 800129a:	9400      	str	r4, [sp, #0]
 800129c:	f7ff ff86 	bl	80011ac <ILI9341_DrawLine>
	ILI9341_DrawLine(x + 15, y, x, y + 10, BLUE);      // Cạnh dưới
 80012a0:	687b      	ldr	r3, [r7, #4]
 80012a2:	b29b      	uxth	r3, r3
 80012a4:	330f      	adds	r3, #15
 80012a6:	b298      	uxth	r0, r3
 80012a8:	683b      	ldr	r3, [r7, #0]
 80012aa:	b299      	uxth	r1, r3
 80012ac:	687b      	ldr	r3, [r7, #4]
 80012ae:	b29a      	uxth	r2, r3
 80012b0:	683b      	ldr	r3, [r7, #0]
 80012b2:	b29b      	uxth	r3, r3
 80012b4:	330a      	adds	r3, #10
 80012b6:	b29b      	uxth	r3, r3
 80012b8:	241f      	movs	r4, #31
 80012ba:	9400      	str	r4, [sp, #0]
 80012bc:	f7ff ff76 	bl	80011ac <ILI9341_DrawLine>
	ILI9341_DrawLine(x, y + 10, x, y - 10, BLUE);      // Lưng
 80012c0:	687b      	ldr	r3, [r7, #4]
 80012c2:	b298      	uxth	r0, r3
 80012c4:	683b      	ldr	r3, [r7, #0]
 80012c6:	b29b      	uxth	r3, r3
 80012c8:	330a      	adds	r3, #10
 80012ca:	b299      	uxth	r1, r3
 80012cc:	687b      	ldr	r3, [r7, #4]
 80012ce:	b29a      	uxth	r2, r3
 80012d0:	683b      	ldr	r3, [r7, #0]
 80012d2:	b29b      	uxth	r3, r3
 80012d4:	3b0a      	subs	r3, #10
 80012d6:	b29b      	uxth	r3, r3
 80012d8:	241f      	movs	r4, #31
 80012da:	9400      	str	r4, [sp, #0]
 80012dc:	f7ff ff66 	bl	80011ac <ILI9341_DrawLine>

	// Cánh máy bay
	ILI9341_DrawLine(x + 5, y - 6, x - 10, y - 10, GREEN);
 80012e0:	687b      	ldr	r3, [r7, #4]
 80012e2:	b29b      	uxth	r3, r3
 80012e4:	3305      	adds	r3, #5
 80012e6:	b298      	uxth	r0, r3
 80012e8:	683b      	ldr	r3, [r7, #0]
 80012ea:	b29b      	uxth	r3, r3
 80012ec:	3b06      	subs	r3, #6
 80012ee:	b299      	uxth	r1, r3
 80012f0:	687b      	ldr	r3, [r7, #4]
 80012f2:	b29b      	uxth	r3, r3
 80012f4:	3b0a      	subs	r3, #10
 80012f6:	b29a      	uxth	r2, r3
 80012f8:	683b      	ldr	r3, [r7, #0]
 80012fa:	b29b      	uxth	r3, r3
 80012fc:	3b0a      	subs	r3, #10
 80012fe:	b29b      	uxth	r3, r3
 8001300:	f44f 64fc 	mov.w	r4, #2016	@ 0x7e0
 8001304:	9400      	str	r4, [sp, #0]
 8001306:	f7ff ff51 	bl	80011ac <ILI9341_DrawLine>
	ILI9341_DrawLine(x + 5, y + 6, x - 10, y + 10, GREEN);
 800130a:	687b      	ldr	r3, [r7, #4]
 800130c:	b29b      	uxth	r3, r3
 800130e:	3305      	adds	r3, #5
 8001310:	b298      	uxth	r0, r3
 8001312:	683b      	ldr	r3, [r7, #0]
 8001314:	b29b      	uxth	r3, r3
 8001316:	3306      	adds	r3, #6
 8001318:	b299      	uxth	r1, r3
 800131a:	687b      	ldr	r3, [r7, #4]
 800131c:	b29b      	uxth	r3, r3
 800131e:	3b0a      	subs	r3, #10
 8001320:	b29a      	uxth	r2, r3
 8001322:	683b      	ldr	r3, [r7, #0]
 8001324:	b29b      	uxth	r3, r3
 8001326:	330a      	adds	r3, #10
 8001328:	b29b      	uxth	r3, r3
 800132a:	f44f 64fc 	mov.w	r4, #2016	@ 0x7e0
 800132e:	9400      	str	r4, [sp, #0]
 8001330:	f7ff ff3c 	bl	80011ac <ILI9341_DrawLine>

	// Đuôi máy bay
	ILI9341_DrawLine(x - 5, y - 5, x - 12, y - 5, RED);
 8001334:	687b      	ldr	r3, [r7, #4]
 8001336:	b29b      	uxth	r3, r3
 8001338:	3b05      	subs	r3, #5
 800133a:	b298      	uxth	r0, r3
 800133c:	683b      	ldr	r3, [r7, #0]
 800133e:	b29b      	uxth	r3, r3
 8001340:	3b05      	subs	r3, #5
 8001342:	b299      	uxth	r1, r3
 8001344:	687b      	ldr	r3, [r7, #4]
 8001346:	b29b      	uxth	r3, r3
 8001348:	3b0c      	subs	r3, #12
 800134a:	b29a      	uxth	r2, r3
 800134c:	683b      	ldr	r3, [r7, #0]
 800134e:	b29b      	uxth	r3, r3
 8001350:	3b05      	subs	r3, #5
 8001352:	b29b      	uxth	r3, r3
 8001354:	f44f 4478 	mov.w	r4, #63488	@ 0xf800
 8001358:	9400      	str	r4, [sp, #0]
 800135a:	f7ff ff27 	bl	80011ac <ILI9341_DrawLine>
	ILI9341_DrawLine(x - 5, y + 5, x - 12, y + 5, RED);
 800135e:	687b      	ldr	r3, [r7, #4]
 8001360:	b29b      	uxth	r3, r3
 8001362:	3b05      	subs	r3, #5
 8001364:	b298      	uxth	r0, r3
 8001366:	683b      	ldr	r3, [r7, #0]
 8001368:	b29b      	uxth	r3, r3
 800136a:	3305      	adds	r3, #5
 800136c:	b299      	uxth	r1, r3
 800136e:	687b      	ldr	r3, [r7, #4]
 8001370:	b29b      	uxth	r3, r3
 8001372:	3b0c      	subs	r3, #12
 8001374:	b29a      	uxth	r2, r3
 8001376:	683b      	ldr	r3, [r7, #0]
 8001378:	b29b      	uxth	r3, r3
 800137a:	3305      	adds	r3, #5
 800137c:	b29b      	uxth	r3, r3
 800137e:	f44f 4478 	mov.w	r4, #63488	@ 0xf800
 8001382:	9400      	str	r4, [sp, #0]
 8001384:	f7ff ff12 	bl	80011ac <ILI9341_DrawLine>
}
 8001388:	bf00      	nop
 800138a:	370c      	adds	r7, #12
 800138c:	46bd      	mov	sp, r7
 800138e:	bd90      	pop	{r4, r7, pc}

08001390 <erase_plane>:

void erase_plane(int x, int y) {
 8001390:	b590      	push	{r4, r7, lr}
 8001392:	b085      	sub	sp, #20
 8001394:	af02      	add	r7, sp, #8
 8001396:	6078      	str	r0, [r7, #4]
 8001398:	6039      	str	r1, [r7, #0]
	// Xóa thân chính
	ILI9341_DrawLine(x, y - 10, x + 15, y, WHITE);     // Cạnh trên
 800139a:	687b      	ldr	r3, [r7, #4]
 800139c:	b298      	uxth	r0, r3
 800139e:	683b      	ldr	r3, [r7, #0]
 80013a0:	b29b      	uxth	r3, r3
 80013a2:	3b0a      	subs	r3, #10
 80013a4:	b299      	uxth	r1, r3
 80013a6:	687b      	ldr	r3, [r7, #4]
 80013a8:	b29b      	uxth	r3, r3
 80013aa:	330f      	adds	r3, #15
 80013ac:	b29a      	uxth	r2, r3
 80013ae:	683b      	ldr	r3, [r7, #0]
 80013b0:	b29b      	uxth	r3, r3
 80013b2:	f64f 74ff 	movw	r4, #65535	@ 0xffff
 80013b6:	9400      	str	r4, [sp, #0]
 80013b8:	f7ff fef8 	bl	80011ac <ILI9341_DrawLine>
	ILI9341_DrawLine(x + 15, y, x, y + 10, WHITE);     // Cạnh dưới
 80013bc:	687b      	ldr	r3, [r7, #4]
 80013be:	b29b      	uxth	r3, r3
 80013c0:	330f      	adds	r3, #15
 80013c2:	b298      	uxth	r0, r3
 80013c4:	683b      	ldr	r3, [r7, #0]
 80013c6:	b299      	uxth	r1, r3
 80013c8:	687b      	ldr	r3, [r7, #4]
 80013ca:	b29a      	uxth	r2, r3
 80013cc:	683b      	ldr	r3, [r7, #0]
 80013ce:	b29b      	uxth	r3, r3
 80013d0:	330a      	adds	r3, #10
 80013d2:	b29b      	uxth	r3, r3
 80013d4:	f64f 74ff 	movw	r4, #65535	@ 0xffff
 80013d8:	9400      	str	r4, [sp, #0]
 80013da:	f7ff fee7 	bl	80011ac <ILI9341_DrawLine>
	ILI9341_DrawLine(x, y + 10, x, y - 10, WHITE);     // Lưng
 80013de:	687b      	ldr	r3, [r7, #4]
 80013e0:	b298      	uxth	r0, r3
 80013e2:	683b      	ldr	r3, [r7, #0]
 80013e4:	b29b      	uxth	r3, r3
 80013e6:	330a      	adds	r3, #10
 80013e8:	b299      	uxth	r1, r3
 80013ea:	687b      	ldr	r3, [r7, #4]
 80013ec:	b29a      	uxth	r2, r3
 80013ee:	683b      	ldr	r3, [r7, #0]
 80013f0:	b29b      	uxth	r3, r3
 80013f2:	3b0a      	subs	r3, #10
 80013f4:	b29b      	uxth	r3, r3
 80013f6:	f64f 74ff 	movw	r4, #65535	@ 0xffff
 80013fa:	9400      	str	r4, [sp, #0]
 80013fc:	f7ff fed6 	bl	80011ac <ILI9341_DrawLine>

	// Xóa cánh máy bay
	ILI9341_DrawLine(x + 5, y - 6, x - 10, y - 10, WHITE);
 8001400:	687b      	ldr	r3, [r7, #4]
 8001402:	b29b      	uxth	r3, r3
 8001404:	3305      	adds	r3, #5
 8001406:	b298      	uxth	r0, r3
 8001408:	683b      	ldr	r3, [r7, #0]
 800140a:	b29b      	uxth	r3, r3
 800140c:	3b06      	subs	r3, #6
 800140e:	b299      	uxth	r1, r3
 8001410:	687b      	ldr	r3, [r7, #4]
 8001412:	b29b      	uxth	r3, r3
 8001414:	3b0a      	subs	r3, #10
 8001416:	b29a      	uxth	r2, r3
 8001418:	683b      	ldr	r3, [r7, #0]
 800141a:	b29b      	uxth	r3, r3
 800141c:	3b0a      	subs	r3, #10
 800141e:	b29b      	uxth	r3, r3
 8001420:	f64f 74ff 	movw	r4, #65535	@ 0xffff
 8001424:	9400      	str	r4, [sp, #0]
 8001426:	f7ff fec1 	bl	80011ac <ILI9341_DrawLine>
	ILI9341_DrawLine(x + 5, y + 6, x - 10, y + 10, WHITE);
 800142a:	687b      	ldr	r3, [r7, #4]
 800142c:	b29b      	uxth	r3, r3
 800142e:	3305      	adds	r3, #5
 8001430:	b298      	uxth	r0, r3
 8001432:	683b      	ldr	r3, [r7, #0]
 8001434:	b29b      	uxth	r3, r3
 8001436:	3306      	adds	r3, #6
 8001438:	b299      	uxth	r1, r3
 800143a:	687b      	ldr	r3, [r7, #4]
 800143c:	b29b      	uxth	r3, r3
 800143e:	3b0a      	subs	r3, #10
 8001440:	b29a      	uxth	r2, r3
 8001442:	683b      	ldr	r3, [r7, #0]
 8001444:	b29b      	uxth	r3, r3
 8001446:	330a      	adds	r3, #10
 8001448:	b29b      	uxth	r3, r3
 800144a:	f64f 74ff 	movw	r4, #65535	@ 0xffff
 800144e:	9400      	str	r4, [sp, #0]
 8001450:	f7ff feac 	bl	80011ac <ILI9341_DrawLine>

	// Xóa đuôi máy bay
	ILI9341_DrawLine(x - 5, y - 5, x - 12, y - 5, WHITE);
 8001454:	687b      	ldr	r3, [r7, #4]
 8001456:	b29b      	uxth	r3, r3
 8001458:	3b05      	subs	r3, #5
 800145a:	b298      	uxth	r0, r3
 800145c:	683b      	ldr	r3, [r7, #0]
 800145e:	b29b      	uxth	r3, r3
 8001460:	3b05      	subs	r3, #5
 8001462:	b299      	uxth	r1, r3
 8001464:	687b      	ldr	r3, [r7, #4]
 8001466:	b29b      	uxth	r3, r3
 8001468:	3b0c      	subs	r3, #12
 800146a:	b29a      	uxth	r2, r3
 800146c:	683b      	ldr	r3, [r7, #0]
 800146e:	b29b      	uxth	r3, r3
 8001470:	3b05      	subs	r3, #5
 8001472:	b29b      	uxth	r3, r3
 8001474:	f64f 74ff 	movw	r4, #65535	@ 0xffff
 8001478:	9400      	str	r4, [sp, #0]
 800147a:	f7ff fe97 	bl	80011ac <ILI9341_DrawLine>
	ILI9341_DrawLine(x - 5, y + 5, x - 12, y + 5, WHITE);
 800147e:	687b      	ldr	r3, [r7, #4]
 8001480:	b29b      	uxth	r3, r3
 8001482:	3b05      	subs	r3, #5
 8001484:	b298      	uxth	r0, r3
 8001486:	683b      	ldr	r3, [r7, #0]
 8001488:	b29b      	uxth	r3, r3
 800148a:	3305      	adds	r3, #5
 800148c:	b299      	uxth	r1, r3
 800148e:	687b      	ldr	r3, [r7, #4]
 8001490:	b29b      	uxth	r3, r3
 8001492:	3b0c      	subs	r3, #12
 8001494:	b29a      	uxth	r2, r3
 8001496:	683b      	ldr	r3, [r7, #0]
 8001498:	b29b      	uxth	r3, r3
 800149a:	3305      	adds	r3, #5
 800149c:	b29b      	uxth	r3, r3
 800149e:	f64f 74ff 	movw	r4, #65535	@ 0xffff
 80014a2:	9400      	str	r4, [sp, #0]
 80014a4:	f7ff fe82 	bl	80011ac <ILI9341_DrawLine>
}
 80014a8:	bf00      	nop
 80014aa:	370c      	adds	r7, #12
 80014ac:	46bd      	mov	sp, r7
 80014ae:	bd90      	pop	{r4, r7, pc}

080014b0 <draw_enemies>:

void draw_enemies(int x, int y) { //hàm vẽ enemies
 80014b0:	b580      	push	{r7, lr}
 80014b2:	b084      	sub	sp, #16
 80014b4:	af02      	add	r7, sp, #8
 80014b6:	6078      	str	r0, [r7, #4]
 80014b8:	6039      	str	r1, [r7, #0]
	ILI9341_DrawRectangle(x, y, PLANE_WIDTH, PLANE_HEIGHT, GREEN);
 80014ba:	687b      	ldr	r3, [r7, #4]
 80014bc:	b298      	uxth	r0, r3
 80014be:	683b      	ldr	r3, [r7, #0]
 80014c0:	b299      	uxth	r1, r3
 80014c2:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 80014c6:	9300      	str	r3, [sp, #0]
 80014c8:	2314      	movs	r3, #20
 80014ca:	2214      	movs	r2, #20
 80014cc:	f7ff fe12 	bl	80010f4 <ILI9341_DrawRectangle>
}
 80014d0:	bf00      	nop
 80014d2:	3708      	adds	r7, #8
 80014d4:	46bd      	mov	sp, r7
 80014d6:	bd80      	pop	{r7, pc}

080014d8 <init_enemies>:

void init_enemies() { //hàm khởi tạo enemies
 80014d8:	b580      	push	{r7, lr}
 80014da:	b082      	sub	sp, #8
 80014dc:	af00      	add	r7, sp, #0
	for (int i = 0; i < current_enemy_count; i++) {
 80014de:	2300      	movs	r3, #0
 80014e0:	607b      	str	r3, [r7, #4]
 80014e2:	e031      	b.n	8001548 <init_enemies+0x70>
		enemies[i].x = 280 + i * 10;
 80014e4:	687a      	ldr	r2, [r7, #4]
 80014e6:	4613      	mov	r3, r2
 80014e8:	009b      	lsls	r3, r3, #2
 80014ea:	4413      	add	r3, r2
 80014ec:	005b      	lsls	r3, r3, #1
 80014ee:	f503 718c 	add.w	r1, r3, #280	@ 0x118
 80014f2:	481a      	ldr	r0, [pc, #104]	@ (800155c <init_enemies+0x84>)
 80014f4:	687a      	ldr	r2, [r7, #4]
 80014f6:	4613      	mov	r3, r2
 80014f8:	005b      	lsls	r3, r3, #1
 80014fa:	4413      	add	r3, r2
 80014fc:	009b      	lsls	r3, r3, #2
 80014fe:	4403      	add	r3, r0
 8001500:	6019      	str	r1, [r3, #0]
		enemies[i].y = rand() % 100;
 8001502:	f004 f9c9 	bl	8005898 <rand>
 8001506:	4603      	mov	r3, r0
 8001508:	4a15      	ldr	r2, [pc, #84]	@ (8001560 <init_enemies+0x88>)
 800150a:	fb82 1203 	smull	r1, r2, r2, r3
 800150e:	1151      	asrs	r1, r2, #5
 8001510:	17da      	asrs	r2, r3, #31
 8001512:	1a8a      	subs	r2, r1, r2
 8001514:	2164      	movs	r1, #100	@ 0x64
 8001516:	fb01 f202 	mul.w	r2, r1, r2
 800151a:	1a9a      	subs	r2, r3, r2
 800151c:	480f      	ldr	r0, [pc, #60]	@ (800155c <init_enemies+0x84>)
 800151e:	6879      	ldr	r1, [r7, #4]
 8001520:	460b      	mov	r3, r1
 8001522:	005b      	lsls	r3, r3, #1
 8001524:	440b      	add	r3, r1
 8001526:	009b      	lsls	r3, r3, #2
 8001528:	4403      	add	r3, r0
 800152a:	3304      	adds	r3, #4
 800152c:	601a      	str	r2, [r3, #0]
		enemies[i].active = 1;
 800152e:	490b      	ldr	r1, [pc, #44]	@ (800155c <init_enemies+0x84>)
 8001530:	687a      	ldr	r2, [r7, #4]
 8001532:	4613      	mov	r3, r2
 8001534:	005b      	lsls	r3, r3, #1
 8001536:	4413      	add	r3, r2
 8001538:	009b      	lsls	r3, r3, #2
 800153a:	440b      	add	r3, r1
 800153c:	3308      	adds	r3, #8
 800153e:	2201      	movs	r2, #1
 8001540:	601a      	str	r2, [r3, #0]
	for (int i = 0; i < current_enemy_count; i++) {
 8001542:	687b      	ldr	r3, [r7, #4]
 8001544:	3301      	adds	r3, #1
 8001546:	607b      	str	r3, [r7, #4]
 8001548:	4b06      	ldr	r3, [pc, #24]	@ (8001564 <init_enemies+0x8c>)
 800154a:	681b      	ldr	r3, [r3, #0]
 800154c:	687a      	ldr	r2, [r7, #4]
 800154e:	429a      	cmp	r2, r3
 8001550:	dbc8      	blt.n	80014e4 <init_enemies+0xc>
	}
}
 8001552:	bf00      	nop
 8001554:	bf00      	nop
 8001556:	3708      	adds	r7, #8
 8001558:	46bd      	mov	sp, r7
 800155a:	bd80      	pop	{r7, pc}
 800155c:	20000174 	.word	0x20000174
 8001560:	51eb851f 	.word	0x51eb851f
 8001564:	2000000c 	.word	0x2000000c

08001568 <erase_enemies>:

void erase_enemies(int x, int y) { //hàm xóa enemies
 8001568:	b580      	push	{r7, lr}
 800156a:	b084      	sub	sp, #16
 800156c:	af02      	add	r7, sp, #8
 800156e:	6078      	str	r0, [r7, #4]
 8001570:	6039      	str	r1, [r7, #0]
	ILI9341_DrawRectangle(x, y, PLANE_WIDTH, PLANE_HEIGHT, WHITE);
 8001572:	687b      	ldr	r3, [r7, #4]
 8001574:	b298      	uxth	r0, r3
 8001576:	683b      	ldr	r3, [r7, #0]
 8001578:	b299      	uxth	r1, r3
 800157a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800157e:	9300      	str	r3, [sp, #0]
 8001580:	2314      	movs	r3, #20
 8001582:	2214      	movs	r2, #20
 8001584:	f7ff fdb6 	bl	80010f4 <ILI9341_DrawRectangle>
}
 8001588:	bf00      	nop
 800158a:	3708      	adds	r7, #8
 800158c:	46bd      	mov	sp, r7
 800158e:	bd80      	pop	{r7, pc}

08001590 <update_enemies>:
void update_enemies() { //hàm cập nhật enemies
 8001590:	b590      	push	{r4, r7, lr}
 8001592:	b083      	sub	sp, #12
 8001594:	af00      	add	r7, sp, #0
	for (int i = 0; i < current_enemy_count; i++) {
 8001596:	2300      	movs	r3, #0
 8001598:	607b      	str	r3, [r7, #4]
 800159a:	e08c      	b.n	80016b6 <update_enemies+0x126>
		if (enemies[i].active) {
 800159c:	494b      	ldr	r1, [pc, #300]	@ (80016cc <update_enemies+0x13c>)
 800159e:	687a      	ldr	r2, [r7, #4]
 80015a0:	4613      	mov	r3, r2
 80015a2:	005b      	lsls	r3, r3, #1
 80015a4:	4413      	add	r3, r2
 80015a6:	009b      	lsls	r3, r3, #2
 80015a8:	440b      	add	r3, r1
 80015aa:	3308      	adds	r3, #8
 80015ac:	681b      	ldr	r3, [r3, #0]
 80015ae:	2b00      	cmp	r3, #0
 80015b0:	d07e      	beq.n	80016b0 <update_enemies+0x120>
			erase_enemies(enemies[i].x, enemies[i].y);
 80015b2:	4946      	ldr	r1, [pc, #280]	@ (80016cc <update_enemies+0x13c>)
 80015b4:	687a      	ldr	r2, [r7, #4]
 80015b6:	4613      	mov	r3, r2
 80015b8:	005b      	lsls	r3, r3, #1
 80015ba:	4413      	add	r3, r2
 80015bc:	009b      	lsls	r3, r3, #2
 80015be:	440b      	add	r3, r1
 80015c0:	6818      	ldr	r0, [r3, #0]
 80015c2:	4942      	ldr	r1, [pc, #264]	@ (80016cc <update_enemies+0x13c>)
 80015c4:	687a      	ldr	r2, [r7, #4]
 80015c6:	4613      	mov	r3, r2
 80015c8:	005b      	lsls	r3, r3, #1
 80015ca:	4413      	add	r3, r2
 80015cc:	009b      	lsls	r3, r3, #2
 80015ce:	440b      	add	r3, r1
 80015d0:	3304      	adds	r3, #4
 80015d2:	681b      	ldr	r3, [r3, #0]
 80015d4:	4619      	mov	r1, r3
 80015d6:	f7ff ffc7 	bl	8001568 <erase_enemies>

					enemies[i].x -= level;
 80015da:	493c      	ldr	r1, [pc, #240]	@ (80016cc <update_enemies+0x13c>)
 80015dc:	687a      	ldr	r2, [r7, #4]
 80015de:	4613      	mov	r3, r2
 80015e0:	005b      	lsls	r3, r3, #1
 80015e2:	4413      	add	r3, r2
 80015e4:	009b      	lsls	r3, r3, #2
 80015e6:	440b      	add	r3, r1
 80015e8:	681a      	ldr	r2, [r3, #0]
 80015ea:	4b39      	ldr	r3, [pc, #228]	@ (80016d0 <update_enemies+0x140>)
 80015ec:	681b      	ldr	r3, [r3, #0]
 80015ee:	1ad1      	subs	r1, r2, r3
 80015f0:	4836      	ldr	r0, [pc, #216]	@ (80016cc <update_enemies+0x13c>)
 80015f2:	687a      	ldr	r2, [r7, #4]
 80015f4:	4613      	mov	r3, r2
 80015f6:	005b      	lsls	r3, r3, #1
 80015f8:	4413      	add	r3, r2
 80015fa:	009b      	lsls	r3, r3, #2
 80015fc:	4403      	add	r3, r0
 80015fe:	6019      	str	r1, [r3, #0]

			if (enemies[i].x <= 0) {
 8001600:	4932      	ldr	r1, [pc, #200]	@ (80016cc <update_enemies+0x13c>)
 8001602:	687a      	ldr	r2, [r7, #4]
 8001604:	4613      	mov	r3, r2
 8001606:	005b      	lsls	r3, r3, #1
 8001608:	4413      	add	r3, r2
 800160a:	009b      	lsls	r3, r3, #2
 800160c:	440b      	add	r3, r1
 800160e:	681b      	ldr	r3, [r3, #0]
 8001610:	2b00      	cmp	r3, #0
 8001612:	dc39      	bgt.n	8001688 <update_enemies+0xf8>
				enemies[i].x = 320;
 8001614:	492d      	ldr	r1, [pc, #180]	@ (80016cc <update_enemies+0x13c>)
 8001616:	687a      	ldr	r2, [r7, #4]
 8001618:	4613      	mov	r3, r2
 800161a:	005b      	lsls	r3, r3, #1
 800161c:	4413      	add	r3, r2
 800161e:	009b      	lsls	r3, r3, #2
 8001620:	440b      	add	r3, r1
 8001622:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8001626:	601a      	str	r2, [r3, #0]
				enemies[i].y = (enemies[i].y + 100 + rand() * 3 % 70) % 220;
 8001628:	4928      	ldr	r1, [pc, #160]	@ (80016cc <update_enemies+0x13c>)
 800162a:	687a      	ldr	r2, [r7, #4]
 800162c:	4613      	mov	r3, r2
 800162e:	005b      	lsls	r3, r3, #1
 8001630:	4413      	add	r3, r2
 8001632:	009b      	lsls	r3, r3, #2
 8001634:	440b      	add	r3, r1
 8001636:	3304      	adds	r3, #4
 8001638:	681b      	ldr	r3, [r3, #0]
 800163a:	f103 0464 	add.w	r4, r3, #100	@ 0x64
 800163e:	f004 f92b 	bl	8005898 <rand>
 8001642:	4602      	mov	r2, r0
 8001644:	4613      	mov	r3, r2
 8001646:	005b      	lsls	r3, r3, #1
 8001648:	4413      	add	r3, r2
 800164a:	4a22      	ldr	r2, [pc, #136]	@ (80016d4 <update_enemies+0x144>)
 800164c:	fb82 1203 	smull	r1, r2, r2, r3
 8001650:	441a      	add	r2, r3
 8001652:	1191      	asrs	r1, r2, #6
 8001654:	17da      	asrs	r2, r3, #31
 8001656:	1a8a      	subs	r2, r1, r2
 8001658:	2146      	movs	r1, #70	@ 0x46
 800165a:	fb01 f202 	mul.w	r2, r1, r2
 800165e:	1a9a      	subs	r2, r3, r2
 8001660:	18a3      	adds	r3, r4, r2
 8001662:	4a1d      	ldr	r2, [pc, #116]	@ (80016d8 <update_enemies+0x148>)
 8001664:	fb82 1203 	smull	r1, r2, r2, r3
 8001668:	10d1      	asrs	r1, r2, #3
 800166a:	17da      	asrs	r2, r3, #31
 800166c:	1a8a      	subs	r2, r1, r2
 800166e:	21dc      	movs	r1, #220	@ 0xdc
 8001670:	fb01 f202 	mul.w	r2, r1, r2
 8001674:	1a9a      	subs	r2, r3, r2
 8001676:	4815      	ldr	r0, [pc, #84]	@ (80016cc <update_enemies+0x13c>)
 8001678:	6879      	ldr	r1, [r7, #4]
 800167a:	460b      	mov	r3, r1
 800167c:	005b      	lsls	r3, r3, #1
 800167e:	440b      	add	r3, r1
 8001680:	009b      	lsls	r3, r3, #2
 8001682:	4403      	add	r3, r0
 8001684:	3304      	adds	r3, #4
 8001686:	601a      	str	r2, [r3, #0]
			}

			draw_enemies(enemies[i].x, enemies[i].y); // vẽ lại enemy
 8001688:	4910      	ldr	r1, [pc, #64]	@ (80016cc <update_enemies+0x13c>)
 800168a:	687a      	ldr	r2, [r7, #4]
 800168c:	4613      	mov	r3, r2
 800168e:	005b      	lsls	r3, r3, #1
 8001690:	4413      	add	r3, r2
 8001692:	009b      	lsls	r3, r3, #2
 8001694:	440b      	add	r3, r1
 8001696:	6818      	ldr	r0, [r3, #0]
 8001698:	490c      	ldr	r1, [pc, #48]	@ (80016cc <update_enemies+0x13c>)
 800169a:	687a      	ldr	r2, [r7, #4]
 800169c:	4613      	mov	r3, r2
 800169e:	005b      	lsls	r3, r3, #1
 80016a0:	4413      	add	r3, r2
 80016a2:	009b      	lsls	r3, r3, #2
 80016a4:	440b      	add	r3, r1
 80016a6:	3304      	adds	r3, #4
 80016a8:	681b      	ldr	r3, [r3, #0]
 80016aa:	4619      	mov	r1, r3
 80016ac:	f7ff ff00 	bl	80014b0 <draw_enemies>
	for (int i = 0; i < current_enemy_count; i++) {
 80016b0:	687b      	ldr	r3, [r7, #4]
 80016b2:	3301      	adds	r3, #1
 80016b4:	607b      	str	r3, [r7, #4]
 80016b6:	4b09      	ldr	r3, [pc, #36]	@ (80016dc <update_enemies+0x14c>)
 80016b8:	681b      	ldr	r3, [r3, #0]
 80016ba:	687a      	ldr	r2, [r7, #4]
 80016bc:	429a      	cmp	r2, r3
 80016be:	f6ff af6d 	blt.w	800159c <update_enemies+0xc>
		}
	}
}
 80016c2:	bf00      	nop
 80016c4:	bf00      	nop
 80016c6:	370c      	adds	r7, #12
 80016c8:	46bd      	mov	sp, r7
 80016ca:	bd90      	pop	{r4, r7, pc}
 80016cc:	20000174 	.word	0x20000174
 80016d0:	20000010 	.word	0x20000010
 80016d4:	ea0ea0eb 	.word	0xea0ea0eb
 80016d8:	094f2095 	.word	0x094f2095
 80016dc:	2000000c 	.word	0x2000000c

080016e0 <init_boss>:

void init_boss() { //hàm khởi tạo boss
 80016e0:	b480      	push	{r7}
 80016e2:	af00      	add	r7, sp, #0
	boss.x = 280;
 80016e4:	4b0a      	ldr	r3, [pc, #40]	@ (8001710 <init_boss+0x30>)
 80016e6:	f44f 728c 	mov.w	r2, #280	@ 0x118
 80016ea:	601a      	str	r2, [r3, #0]
	boss.y = 20;
 80016ec:	4b08      	ldr	r3, [pc, #32]	@ (8001710 <init_boss+0x30>)
 80016ee:	2214      	movs	r2, #20
 80016f0:	605a      	str	r2, [r3, #4]
	boss.hp = 10;
 80016f2:	4b07      	ldr	r3, [pc, #28]	@ (8001710 <init_boss+0x30>)
 80016f4:	220a      	movs	r2, #10
 80016f6:	609a      	str	r2, [r3, #8]
	boss.active = 1;
 80016f8:	4b05      	ldr	r3, [pc, #20]	@ (8001710 <init_boss+0x30>)
 80016fa:	2201      	movs	r2, #1
 80016fc:	60da      	str	r2, [r3, #12]
	boss.laser_timer = 0;
 80016fe:	4b04      	ldr	r3, [pc, #16]	@ (8001710 <init_boss+0x30>)
 8001700:	2200      	movs	r2, #0
 8001702:	611a      	str	r2, [r3, #16]
}
 8001704:	bf00      	nop
 8001706:	46bd      	mov	sp, r7
 8001708:	f85d 7b04 	ldr.w	r7, [sp], #4
 800170c:	4770      	bx	lr
 800170e:	bf00      	nop
 8001710:	20000264 	.word	0x20000264

08001714 <draw_boss>:

void draw_boss(int x, int y) { //vẽ boss
 8001714:	b580      	push	{r7, lr}
 8001716:	b084      	sub	sp, #16
 8001718:	af02      	add	r7, sp, #8
 800171a:	6078      	str	r0, [r7, #4]
 800171c:	6039      	str	r1, [r7, #0]
	ILI9341_DrawRectangle(x, y, BOSS_WIDTH, BOSS_HEIGHT, RED);
 800171e:	687b      	ldr	r3, [r7, #4]
 8001720:	b298      	uxth	r0, r3
 8001722:	683b      	ldr	r3, [r7, #0]
 8001724:	b299      	uxth	r1, r3
 8001726:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 800172a:	9300      	str	r3, [sp, #0]
 800172c:	231e      	movs	r3, #30
 800172e:	2228      	movs	r2, #40	@ 0x28
 8001730:	f7ff fce0 	bl	80010f4 <ILI9341_DrawRectangle>
}
 8001734:	bf00      	nop
 8001736:	3708      	adds	r7, #8
 8001738:	46bd      	mov	sp, r7
 800173a:	bd80      	pop	{r7, pc}

0800173c <erase_boss>:

void erase_boss(int x, int y) { //xóa boss
 800173c:	b580      	push	{r7, lr}
 800173e:	b084      	sub	sp, #16
 8001740:	af02      	add	r7, sp, #8
 8001742:	6078      	str	r0, [r7, #4]
 8001744:	6039      	str	r1, [r7, #0]
	ILI9341_DrawRectangle(x, y, BOSS_WIDTH, BOSS_HEIGHT, WHITE);
 8001746:	687b      	ldr	r3, [r7, #4]
 8001748:	b298      	uxth	r0, r3
 800174a:	683b      	ldr	r3, [r7, #0]
 800174c:	b299      	uxth	r1, r3
 800174e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001752:	9300      	str	r3, [sp, #0]
 8001754:	231e      	movs	r3, #30
 8001756:	2228      	movs	r2, #40	@ 0x28
 8001758:	f7ff fccc 	bl	80010f4 <ILI9341_DrawRectangle>
}
 800175c:	bf00      	nop
 800175e:	3708      	adds	r7, #8
 8001760:	46bd      	mov	sp, r7
 8001762:	bd80      	pop	{r7, pc}

08001764 <fire_boss_laser>:

void fire_boss_laser() { // hàm bắn đạn của boss
 8001764:	b480      	push	{r7}
 8001766:	b083      	sub	sp, #12
 8001768:	af00      	add	r7, sp, #0
	for (int i = 0; i < MAX_BOSS_BULLETS; i += 3) {
 800176a:	2300      	movs	r3, #0
 800176c:	607b      	str	r3, [r7, #4]
 800176e:	e071      	b.n	8001854 <fire_boss_laser+0xf0>
		if (!boss_bullets[i].active) {
 8001770:	493d      	ldr	r1, [pc, #244]	@ (8001868 <fire_boss_laser+0x104>)
 8001772:	687a      	ldr	r2, [r7, #4]
 8001774:	4613      	mov	r3, r2
 8001776:	005b      	lsls	r3, r3, #1
 8001778:	4413      	add	r3, r2
 800177a:	009b      	lsls	r3, r3, #2
 800177c:	440b      	add	r3, r1
 800177e:	3308      	adds	r3, #8
 8001780:	681b      	ldr	r3, [r3, #0]
 8001782:	2b00      	cmp	r3, #0
 8001784:	d163      	bne.n	800184e <fire_boss_laser+0xea>
			boss_bullets[i].x = boss.x;
 8001786:	4b39      	ldr	r3, [pc, #228]	@ (800186c <fire_boss_laser+0x108>)
 8001788:	6819      	ldr	r1, [r3, #0]
 800178a:	4837      	ldr	r0, [pc, #220]	@ (8001868 <fire_boss_laser+0x104>)
 800178c:	687a      	ldr	r2, [r7, #4]
 800178e:	4613      	mov	r3, r2
 8001790:	005b      	lsls	r3, r3, #1
 8001792:	4413      	add	r3, r2
 8001794:	009b      	lsls	r3, r3, #2
 8001796:	4403      	add	r3, r0
 8001798:	6019      	str	r1, [r3, #0]
			boss_bullets[i].y = boss.y;
 800179a:	4b34      	ldr	r3, [pc, #208]	@ (800186c <fire_boss_laser+0x108>)
 800179c:	6859      	ldr	r1, [r3, #4]
 800179e:	4832      	ldr	r0, [pc, #200]	@ (8001868 <fire_boss_laser+0x104>)
 80017a0:	687a      	ldr	r2, [r7, #4]
 80017a2:	4613      	mov	r3, r2
 80017a4:	005b      	lsls	r3, r3, #1
 80017a6:	4413      	add	r3, r2
 80017a8:	009b      	lsls	r3, r3, #2
 80017aa:	4403      	add	r3, r0
 80017ac:	3304      	adds	r3, #4
 80017ae:	6019      	str	r1, [r3, #0]
			boss_bullets[i].active = 1;
 80017b0:	492d      	ldr	r1, [pc, #180]	@ (8001868 <fire_boss_laser+0x104>)
 80017b2:	687a      	ldr	r2, [r7, #4]
 80017b4:	4613      	mov	r3, r2
 80017b6:	005b      	lsls	r3, r3, #1
 80017b8:	4413      	add	r3, r2
 80017ba:	009b      	lsls	r3, r3, #2
 80017bc:	440b      	add	r3, r1
 80017be:	3308      	adds	r3, #8
 80017c0:	2201      	movs	r2, #1
 80017c2:	601a      	str	r2, [r3, #0]

			boss_bullets[i + 1].x = boss.x;
 80017c4:	687b      	ldr	r3, [r7, #4]
 80017c6:	1c5a      	adds	r2, r3, #1
 80017c8:	4b28      	ldr	r3, [pc, #160]	@ (800186c <fire_boss_laser+0x108>)
 80017ca:	6819      	ldr	r1, [r3, #0]
 80017cc:	4826      	ldr	r0, [pc, #152]	@ (8001868 <fire_boss_laser+0x104>)
 80017ce:	4613      	mov	r3, r2
 80017d0:	005b      	lsls	r3, r3, #1
 80017d2:	4413      	add	r3, r2
 80017d4:	009b      	lsls	r3, r3, #2
 80017d6:	4403      	add	r3, r0
 80017d8:	6019      	str	r1, [r3, #0]
			boss_bullets[i + 1].y = boss.y;
 80017da:	687b      	ldr	r3, [r7, #4]
 80017dc:	1c5a      	adds	r2, r3, #1
 80017de:	4b23      	ldr	r3, [pc, #140]	@ (800186c <fire_boss_laser+0x108>)
 80017e0:	6859      	ldr	r1, [r3, #4]
 80017e2:	4821      	ldr	r0, [pc, #132]	@ (8001868 <fire_boss_laser+0x104>)
 80017e4:	4613      	mov	r3, r2
 80017e6:	005b      	lsls	r3, r3, #1
 80017e8:	4413      	add	r3, r2
 80017ea:	009b      	lsls	r3, r3, #2
 80017ec:	4403      	add	r3, r0
 80017ee:	3304      	adds	r3, #4
 80017f0:	6019      	str	r1, [r3, #0]
			boss_bullets[i + 1].active = 1;
 80017f2:	687b      	ldr	r3, [r7, #4]
 80017f4:	1c5a      	adds	r2, r3, #1
 80017f6:	491c      	ldr	r1, [pc, #112]	@ (8001868 <fire_boss_laser+0x104>)
 80017f8:	4613      	mov	r3, r2
 80017fa:	005b      	lsls	r3, r3, #1
 80017fc:	4413      	add	r3, r2
 80017fe:	009b      	lsls	r3, r3, #2
 8001800:	440b      	add	r3, r1
 8001802:	3308      	adds	r3, #8
 8001804:	2201      	movs	r2, #1
 8001806:	601a      	str	r2, [r3, #0]

			boss_bullets[i + 2].x = boss.x;
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	1c9a      	adds	r2, r3, #2
 800180c:	4b17      	ldr	r3, [pc, #92]	@ (800186c <fire_boss_laser+0x108>)
 800180e:	6819      	ldr	r1, [r3, #0]
 8001810:	4815      	ldr	r0, [pc, #84]	@ (8001868 <fire_boss_laser+0x104>)
 8001812:	4613      	mov	r3, r2
 8001814:	005b      	lsls	r3, r3, #1
 8001816:	4413      	add	r3, r2
 8001818:	009b      	lsls	r3, r3, #2
 800181a:	4403      	add	r3, r0
 800181c:	6019      	str	r1, [r3, #0]
			boss_bullets[i + 2].y = boss.y;
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	1c9a      	adds	r2, r3, #2
 8001822:	4b12      	ldr	r3, [pc, #72]	@ (800186c <fire_boss_laser+0x108>)
 8001824:	6859      	ldr	r1, [r3, #4]
 8001826:	4810      	ldr	r0, [pc, #64]	@ (8001868 <fire_boss_laser+0x104>)
 8001828:	4613      	mov	r3, r2
 800182a:	005b      	lsls	r3, r3, #1
 800182c:	4413      	add	r3, r2
 800182e:	009b      	lsls	r3, r3, #2
 8001830:	4403      	add	r3, r0
 8001832:	3304      	adds	r3, #4
 8001834:	6019      	str	r1, [r3, #0]
			boss_bullets[i + 2].active = 1;
 8001836:	687b      	ldr	r3, [r7, #4]
 8001838:	1c9a      	adds	r2, r3, #2
 800183a:	490b      	ldr	r1, [pc, #44]	@ (8001868 <fire_boss_laser+0x104>)
 800183c:	4613      	mov	r3, r2
 800183e:	005b      	lsls	r3, r3, #1
 8001840:	4413      	add	r3, r2
 8001842:	009b      	lsls	r3, r3, #2
 8001844:	440b      	add	r3, r1
 8001846:	3308      	adds	r3, #8
 8001848:	2201      	movs	r2, #1
 800184a:	601a      	str	r2, [r3, #0]
			break;
 800184c:	e006      	b.n	800185c <fire_boss_laser+0xf8>
	for (int i = 0; i < MAX_BOSS_BULLETS; i += 3) {
 800184e:	687b      	ldr	r3, [r7, #4]
 8001850:	3303      	adds	r3, #3
 8001852:	607b      	str	r3, [r7, #4]
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	2b31      	cmp	r3, #49	@ 0x31
 8001858:	dd8a      	ble.n	8001770 <fire_boss_laser+0xc>
		}
	}
}
 800185a:	bf00      	nop
 800185c:	bf00      	nop
 800185e:	370c      	adds	r7, #12
 8001860:	46bd      	mov	sp, r7
 8001862:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001866:	4770      	bx	lr
 8001868:	20000278 	.word	0x20000278
 800186c:	20000264 	.word	0x20000264

08001870 <boss_shotgun>:

void boss_shotgun(int i) {
 8001870:	b580      	push	{r7, lr}
 8001872:	b084      	sub	sp, #16
 8001874:	af02      	add	r7, sp, #8
 8001876:	6078      	str	r0, [r7, #4]
	// Xóa viên đạn cũ
	ILI9341_DrawRectangle(boss_bullets[i].x, boss_bullets[i].y,
 8001878:	4985      	ldr	r1, [pc, #532]	@ (8001a90 <boss_shotgun+0x220>)
 800187a:	687a      	ldr	r2, [r7, #4]
 800187c:	4613      	mov	r3, r2
 800187e:	005b      	lsls	r3, r3, #1
 8001880:	4413      	add	r3, r2
 8001882:	009b      	lsls	r3, r3, #2
 8001884:	440b      	add	r3, r1
 8001886:	681b      	ldr	r3, [r3, #0]
 8001888:	b298      	uxth	r0, r3
 800188a:	4981      	ldr	r1, [pc, #516]	@ (8001a90 <boss_shotgun+0x220>)
 800188c:	687a      	ldr	r2, [r7, #4]
 800188e:	4613      	mov	r3, r2
 8001890:	005b      	lsls	r3, r3, #1
 8001892:	4413      	add	r3, r2
 8001894:	009b      	lsls	r3, r3, #2
 8001896:	440b      	add	r3, r1
 8001898:	3304      	adds	r3, #4
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	b299      	uxth	r1, r3
 800189e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80018a2:	9300      	str	r3, [sp, #0]
 80018a4:	2304      	movs	r3, #4
 80018a6:	2208      	movs	r2, #8
 80018a8:	f7ff fc24 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, WHITE);
	ILI9341_DrawRectangle(boss_bullets[i + 1].x, boss_bullets[i + 1].y,
 80018ac:	687b      	ldr	r3, [r7, #4]
 80018ae:	1c5a      	adds	r2, r3, #1
 80018b0:	4977      	ldr	r1, [pc, #476]	@ (8001a90 <boss_shotgun+0x220>)
 80018b2:	4613      	mov	r3, r2
 80018b4:	005b      	lsls	r3, r3, #1
 80018b6:	4413      	add	r3, r2
 80018b8:	009b      	lsls	r3, r3, #2
 80018ba:	440b      	add	r3, r1
 80018bc:	681b      	ldr	r3, [r3, #0]
 80018be:	b298      	uxth	r0, r3
 80018c0:	687b      	ldr	r3, [r7, #4]
 80018c2:	1c5a      	adds	r2, r3, #1
 80018c4:	4972      	ldr	r1, [pc, #456]	@ (8001a90 <boss_shotgun+0x220>)
 80018c6:	4613      	mov	r3, r2
 80018c8:	005b      	lsls	r3, r3, #1
 80018ca:	4413      	add	r3, r2
 80018cc:	009b      	lsls	r3, r3, #2
 80018ce:	440b      	add	r3, r1
 80018d0:	3304      	adds	r3, #4
 80018d2:	681b      	ldr	r3, [r3, #0]
 80018d4:	b299      	uxth	r1, r3
 80018d6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80018da:	9300      	str	r3, [sp, #0]
 80018dc:	2304      	movs	r3, #4
 80018de:	2208      	movs	r2, #8
 80018e0:	f7ff fc08 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, WHITE);
	ILI9341_DrawRectangle(boss_bullets[i + 2].x, boss_bullets[i + 2].y,
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	1c9a      	adds	r2, r3, #2
 80018e8:	4969      	ldr	r1, [pc, #420]	@ (8001a90 <boss_shotgun+0x220>)
 80018ea:	4613      	mov	r3, r2
 80018ec:	005b      	lsls	r3, r3, #1
 80018ee:	4413      	add	r3, r2
 80018f0:	009b      	lsls	r3, r3, #2
 80018f2:	440b      	add	r3, r1
 80018f4:	681b      	ldr	r3, [r3, #0]
 80018f6:	b298      	uxth	r0, r3
 80018f8:	687b      	ldr	r3, [r7, #4]
 80018fa:	1c9a      	adds	r2, r3, #2
 80018fc:	4964      	ldr	r1, [pc, #400]	@ (8001a90 <boss_shotgun+0x220>)
 80018fe:	4613      	mov	r3, r2
 8001900:	005b      	lsls	r3, r3, #1
 8001902:	4413      	add	r3, r2
 8001904:	009b      	lsls	r3, r3, #2
 8001906:	440b      	add	r3, r1
 8001908:	3304      	adds	r3, #4
 800190a:	681b      	ldr	r3, [r3, #0]
 800190c:	b299      	uxth	r1, r3
 800190e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001912:	9300      	str	r3, [sp, #0]
 8001914:	2304      	movs	r3, #4
 8001916:	2208      	movs	r2, #8
 8001918:	f7ff fbec 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, WHITE);

	// Di chuyển đạn xuống
	boss_bullets[i].x -= 2;
 800191c:	495c      	ldr	r1, [pc, #368]	@ (8001a90 <boss_shotgun+0x220>)
 800191e:	687a      	ldr	r2, [r7, #4]
 8001920:	4613      	mov	r3, r2
 8001922:	005b      	lsls	r3, r3, #1
 8001924:	4413      	add	r3, r2
 8001926:	009b      	lsls	r3, r3, #2
 8001928:	440b      	add	r3, r1
 800192a:	681b      	ldr	r3, [r3, #0]
 800192c:	1e99      	subs	r1, r3, #2
 800192e:	4858      	ldr	r0, [pc, #352]	@ (8001a90 <boss_shotgun+0x220>)
 8001930:	687a      	ldr	r2, [r7, #4]
 8001932:	4613      	mov	r3, r2
 8001934:	005b      	lsls	r3, r3, #1
 8001936:	4413      	add	r3, r2
 8001938:	009b      	lsls	r3, r3, #2
 800193a:	4403      	add	r3, r0
 800193c:	6019      	str	r1, [r3, #0]

	boss_bullets[i + 1].x -= 2;
 800193e:	687b      	ldr	r3, [r7, #4]
 8001940:	1c5a      	adds	r2, r3, #1
 8001942:	4953      	ldr	r1, [pc, #332]	@ (8001a90 <boss_shotgun+0x220>)
 8001944:	4613      	mov	r3, r2
 8001946:	005b      	lsls	r3, r3, #1
 8001948:	4413      	add	r3, r2
 800194a:	009b      	lsls	r3, r3, #2
 800194c:	440b      	add	r3, r1
 800194e:	681b      	ldr	r3, [r3, #0]
 8001950:	687a      	ldr	r2, [r7, #4]
 8001952:	3201      	adds	r2, #1
 8001954:	1e99      	subs	r1, r3, #2
 8001956:	484e      	ldr	r0, [pc, #312]	@ (8001a90 <boss_shotgun+0x220>)
 8001958:	4613      	mov	r3, r2
 800195a:	005b      	lsls	r3, r3, #1
 800195c:	4413      	add	r3, r2
 800195e:	009b      	lsls	r3, r3, #2
 8001960:	4403      	add	r3, r0
 8001962:	6019      	str	r1, [r3, #0]
	boss_bullets[i + 1].y += 1;
 8001964:	687b      	ldr	r3, [r7, #4]
 8001966:	1c5a      	adds	r2, r3, #1
 8001968:	4949      	ldr	r1, [pc, #292]	@ (8001a90 <boss_shotgun+0x220>)
 800196a:	4613      	mov	r3, r2
 800196c:	005b      	lsls	r3, r3, #1
 800196e:	4413      	add	r3, r2
 8001970:	009b      	lsls	r3, r3, #2
 8001972:	440b      	add	r3, r1
 8001974:	3304      	adds	r3, #4
 8001976:	681b      	ldr	r3, [r3, #0]
 8001978:	687a      	ldr	r2, [r7, #4]
 800197a:	3201      	adds	r2, #1
 800197c:	1c59      	adds	r1, r3, #1
 800197e:	4844      	ldr	r0, [pc, #272]	@ (8001a90 <boss_shotgun+0x220>)
 8001980:	4613      	mov	r3, r2
 8001982:	005b      	lsls	r3, r3, #1
 8001984:	4413      	add	r3, r2
 8001986:	009b      	lsls	r3, r3, #2
 8001988:	4403      	add	r3, r0
 800198a:	3304      	adds	r3, #4
 800198c:	6019      	str	r1, [r3, #0]

	boss_bullets[i + 2].x -= 2;
 800198e:	687b      	ldr	r3, [r7, #4]
 8001990:	1c9a      	adds	r2, r3, #2
 8001992:	493f      	ldr	r1, [pc, #252]	@ (8001a90 <boss_shotgun+0x220>)
 8001994:	4613      	mov	r3, r2
 8001996:	005b      	lsls	r3, r3, #1
 8001998:	4413      	add	r3, r2
 800199a:	009b      	lsls	r3, r3, #2
 800199c:	440b      	add	r3, r1
 800199e:	681b      	ldr	r3, [r3, #0]
 80019a0:	687a      	ldr	r2, [r7, #4]
 80019a2:	3202      	adds	r2, #2
 80019a4:	1e99      	subs	r1, r3, #2
 80019a6:	483a      	ldr	r0, [pc, #232]	@ (8001a90 <boss_shotgun+0x220>)
 80019a8:	4613      	mov	r3, r2
 80019aa:	005b      	lsls	r3, r3, #1
 80019ac:	4413      	add	r3, r2
 80019ae:	009b      	lsls	r3, r3, #2
 80019b0:	4403      	add	r3, r0
 80019b2:	6019      	str	r1, [r3, #0]
	boss_bullets[i + 2].y -= 1;
 80019b4:	687b      	ldr	r3, [r7, #4]
 80019b6:	1c9a      	adds	r2, r3, #2
 80019b8:	4935      	ldr	r1, [pc, #212]	@ (8001a90 <boss_shotgun+0x220>)
 80019ba:	4613      	mov	r3, r2
 80019bc:	005b      	lsls	r3, r3, #1
 80019be:	4413      	add	r3, r2
 80019c0:	009b      	lsls	r3, r3, #2
 80019c2:	440b      	add	r3, r1
 80019c4:	3304      	adds	r3, #4
 80019c6:	681b      	ldr	r3, [r3, #0]
 80019c8:	687a      	ldr	r2, [r7, #4]
 80019ca:	3202      	adds	r2, #2
 80019cc:	1e59      	subs	r1, r3, #1
 80019ce:	4830      	ldr	r0, [pc, #192]	@ (8001a90 <boss_shotgun+0x220>)
 80019d0:	4613      	mov	r3, r2
 80019d2:	005b      	lsls	r3, r3, #1
 80019d4:	4413      	add	r3, r2
 80019d6:	009b      	lsls	r3, r3, #2
 80019d8:	4403      	add	r3, r0
 80019da:	3304      	adds	r3, #4
 80019dc:	6019      	str	r1, [r3, #0]
//		boss_bullets[i + 2].active = 0;
//		return;
//	}

	// Vẽ lại viên đạn mới
	ILI9341_DrawRectangle(boss_bullets[i].x, boss_bullets[i].y,
 80019de:	492c      	ldr	r1, [pc, #176]	@ (8001a90 <boss_shotgun+0x220>)
 80019e0:	687a      	ldr	r2, [r7, #4]
 80019e2:	4613      	mov	r3, r2
 80019e4:	005b      	lsls	r3, r3, #1
 80019e6:	4413      	add	r3, r2
 80019e8:	009b      	lsls	r3, r3, #2
 80019ea:	440b      	add	r3, r1
 80019ec:	681b      	ldr	r3, [r3, #0]
 80019ee:	b298      	uxth	r0, r3
 80019f0:	4927      	ldr	r1, [pc, #156]	@ (8001a90 <boss_shotgun+0x220>)
 80019f2:	687a      	ldr	r2, [r7, #4]
 80019f4:	4613      	mov	r3, r2
 80019f6:	005b      	lsls	r3, r3, #1
 80019f8:	4413      	add	r3, r2
 80019fa:	009b      	lsls	r3, r3, #2
 80019fc:	440b      	add	r3, r1
 80019fe:	3304      	adds	r3, #4
 8001a00:	681b      	ldr	r3, [r3, #0]
 8001a02:	b299      	uxth	r1, r3
 8001a04:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001a08:	9300      	str	r3, [sp, #0]
 8001a0a:	2304      	movs	r3, #4
 8001a0c:	2208      	movs	r2, #8
 8001a0e:	f7ff fb71 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, RED);

	ILI9341_DrawRectangle(boss_bullets[i + 1].x, boss_bullets[i + 1].y,
 8001a12:	687b      	ldr	r3, [r7, #4]
 8001a14:	1c5a      	adds	r2, r3, #1
 8001a16:	491e      	ldr	r1, [pc, #120]	@ (8001a90 <boss_shotgun+0x220>)
 8001a18:	4613      	mov	r3, r2
 8001a1a:	005b      	lsls	r3, r3, #1
 8001a1c:	4413      	add	r3, r2
 8001a1e:	009b      	lsls	r3, r3, #2
 8001a20:	440b      	add	r3, r1
 8001a22:	681b      	ldr	r3, [r3, #0]
 8001a24:	b298      	uxth	r0, r3
 8001a26:	687b      	ldr	r3, [r7, #4]
 8001a28:	1c5a      	adds	r2, r3, #1
 8001a2a:	4919      	ldr	r1, [pc, #100]	@ (8001a90 <boss_shotgun+0x220>)
 8001a2c:	4613      	mov	r3, r2
 8001a2e:	005b      	lsls	r3, r3, #1
 8001a30:	4413      	add	r3, r2
 8001a32:	009b      	lsls	r3, r3, #2
 8001a34:	440b      	add	r3, r1
 8001a36:	3304      	adds	r3, #4
 8001a38:	681b      	ldr	r3, [r3, #0]
 8001a3a:	b299      	uxth	r1, r3
 8001a3c:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001a40:	9300      	str	r3, [sp, #0]
 8001a42:	2304      	movs	r3, #4
 8001a44:	2208      	movs	r2, #8
 8001a46:	f7ff fb55 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, RED);

	ILI9341_DrawRectangle(boss_bullets[i + 2].x, boss_bullets[i + 2].y,
 8001a4a:	687b      	ldr	r3, [r7, #4]
 8001a4c:	1c9a      	adds	r2, r3, #2
 8001a4e:	4910      	ldr	r1, [pc, #64]	@ (8001a90 <boss_shotgun+0x220>)
 8001a50:	4613      	mov	r3, r2
 8001a52:	005b      	lsls	r3, r3, #1
 8001a54:	4413      	add	r3, r2
 8001a56:	009b      	lsls	r3, r3, #2
 8001a58:	440b      	add	r3, r1
 8001a5a:	681b      	ldr	r3, [r3, #0]
 8001a5c:	b298      	uxth	r0, r3
 8001a5e:	687b      	ldr	r3, [r7, #4]
 8001a60:	1c9a      	adds	r2, r3, #2
 8001a62:	490b      	ldr	r1, [pc, #44]	@ (8001a90 <boss_shotgun+0x220>)
 8001a64:	4613      	mov	r3, r2
 8001a66:	005b      	lsls	r3, r3, #1
 8001a68:	4413      	add	r3, r2
 8001a6a:	009b      	lsls	r3, r3, #2
 8001a6c:	440b      	add	r3, r1
 8001a6e:	3304      	adds	r3, #4
 8001a70:	681b      	ldr	r3, [r3, #0]
 8001a72:	b299      	uxth	r1, r3
 8001a74:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001a78:	9300      	str	r3, [sp, #0]
 8001a7a:	2304      	movs	r3, #4
 8001a7c:	2208      	movs	r2, #8
 8001a7e:	f7ff fb39 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, RED);

	check_lose(i);
 8001a82:	6878      	ldr	r0, [r7, #4]
 8001a84:	f000 fa5e 	bl	8001f44 <check_lose>
}
 8001a88:	bf00      	nop
 8001a8a:	3708      	adds	r7, #8
 8001a8c:	46bd      	mov	sp, r7
 8001a8e:	bd80      	pop	{r7, pc}
 8001a90:	20000278 	.word	0x20000278

08001a94 <boss_burst>:

void boss_burst(int i) {
 8001a94:	b580      	push	{r7, lr}
 8001a96:	b084      	sub	sp, #16
 8001a98:	af02      	add	r7, sp, #8
 8001a9a:	6078      	str	r0, [r7, #4]
	// Xóa viên đạn cũ
	ILI9341_DrawRectangle(boss_bullets[i].x, boss_bullets[i].y,
 8001a9c:	4970      	ldr	r1, [pc, #448]	@ (8001c60 <boss_burst+0x1cc>)
 8001a9e:	687a      	ldr	r2, [r7, #4]
 8001aa0:	4613      	mov	r3, r2
 8001aa2:	005b      	lsls	r3, r3, #1
 8001aa4:	4413      	add	r3, r2
 8001aa6:	009b      	lsls	r3, r3, #2
 8001aa8:	440b      	add	r3, r1
 8001aaa:	681b      	ldr	r3, [r3, #0]
 8001aac:	b298      	uxth	r0, r3
 8001aae:	496c      	ldr	r1, [pc, #432]	@ (8001c60 <boss_burst+0x1cc>)
 8001ab0:	687a      	ldr	r2, [r7, #4]
 8001ab2:	4613      	mov	r3, r2
 8001ab4:	005b      	lsls	r3, r3, #1
 8001ab6:	4413      	add	r3, r2
 8001ab8:	009b      	lsls	r3, r3, #2
 8001aba:	440b      	add	r3, r1
 8001abc:	3304      	adds	r3, #4
 8001abe:	681b      	ldr	r3, [r3, #0]
 8001ac0:	b299      	uxth	r1, r3
 8001ac2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001ac6:	9300      	str	r3, [sp, #0]
 8001ac8:	2304      	movs	r3, #4
 8001aca:	2208      	movs	r2, #8
 8001acc:	f7ff fb12 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, WHITE);
	ILI9341_DrawRectangle(boss_bullets[i + 1].x, boss_bullets[i + 1].y,
 8001ad0:	687b      	ldr	r3, [r7, #4]
 8001ad2:	1c5a      	adds	r2, r3, #1
 8001ad4:	4962      	ldr	r1, [pc, #392]	@ (8001c60 <boss_burst+0x1cc>)
 8001ad6:	4613      	mov	r3, r2
 8001ad8:	005b      	lsls	r3, r3, #1
 8001ada:	4413      	add	r3, r2
 8001adc:	009b      	lsls	r3, r3, #2
 8001ade:	440b      	add	r3, r1
 8001ae0:	681b      	ldr	r3, [r3, #0]
 8001ae2:	b298      	uxth	r0, r3
 8001ae4:	687b      	ldr	r3, [r7, #4]
 8001ae6:	1c5a      	adds	r2, r3, #1
 8001ae8:	495d      	ldr	r1, [pc, #372]	@ (8001c60 <boss_burst+0x1cc>)
 8001aea:	4613      	mov	r3, r2
 8001aec:	005b      	lsls	r3, r3, #1
 8001aee:	4413      	add	r3, r2
 8001af0:	009b      	lsls	r3, r3, #2
 8001af2:	440b      	add	r3, r1
 8001af4:	3304      	adds	r3, #4
 8001af6:	681b      	ldr	r3, [r3, #0]
 8001af8:	b299      	uxth	r1, r3
 8001afa:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001afe:	9300      	str	r3, [sp, #0]
 8001b00:	2304      	movs	r3, #4
 8001b02:	2208      	movs	r2, #8
 8001b04:	f7ff faf6 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, WHITE);
	ILI9341_DrawRectangle(boss_bullets[i + 2].x, boss_bullets[i + 2].y,
 8001b08:	687b      	ldr	r3, [r7, #4]
 8001b0a:	1c9a      	adds	r2, r3, #2
 8001b0c:	4954      	ldr	r1, [pc, #336]	@ (8001c60 <boss_burst+0x1cc>)
 8001b0e:	4613      	mov	r3, r2
 8001b10:	005b      	lsls	r3, r3, #1
 8001b12:	4413      	add	r3, r2
 8001b14:	009b      	lsls	r3, r3, #2
 8001b16:	440b      	add	r3, r1
 8001b18:	681b      	ldr	r3, [r3, #0]
 8001b1a:	b298      	uxth	r0, r3
 8001b1c:	687b      	ldr	r3, [r7, #4]
 8001b1e:	1c9a      	adds	r2, r3, #2
 8001b20:	494f      	ldr	r1, [pc, #316]	@ (8001c60 <boss_burst+0x1cc>)
 8001b22:	4613      	mov	r3, r2
 8001b24:	005b      	lsls	r3, r3, #1
 8001b26:	4413      	add	r3, r2
 8001b28:	009b      	lsls	r3, r3, #2
 8001b2a:	440b      	add	r3, r1
 8001b2c:	3304      	adds	r3, #4
 8001b2e:	681b      	ldr	r3, [r3, #0]
 8001b30:	b299      	uxth	r1, r3
 8001b32:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001b36:	9300      	str	r3, [sp, #0]
 8001b38:	2304      	movs	r3, #4
 8001b3a:	2208      	movs	r2, #8
 8001b3c:	f7ff fada 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, WHITE);

	// Di chuyển đạn xuống
	boss_bullets[i].x -= 2;
 8001b40:	4947      	ldr	r1, [pc, #284]	@ (8001c60 <boss_burst+0x1cc>)
 8001b42:	687a      	ldr	r2, [r7, #4]
 8001b44:	4613      	mov	r3, r2
 8001b46:	005b      	lsls	r3, r3, #1
 8001b48:	4413      	add	r3, r2
 8001b4a:	009b      	lsls	r3, r3, #2
 8001b4c:	440b      	add	r3, r1
 8001b4e:	681b      	ldr	r3, [r3, #0]
 8001b50:	1e99      	subs	r1, r3, #2
 8001b52:	4843      	ldr	r0, [pc, #268]	@ (8001c60 <boss_burst+0x1cc>)
 8001b54:	687a      	ldr	r2, [r7, #4]
 8001b56:	4613      	mov	r3, r2
 8001b58:	005b      	lsls	r3, r3, #1
 8001b5a:	4413      	add	r3, r2
 8001b5c:	009b      	lsls	r3, r3, #2
 8001b5e:	4403      	add	r3, r0
 8001b60:	6019      	str	r1, [r3, #0]

	boss_bullets[i + 1].x = boss_bullets[i].x + 32;
 8001b62:	493f      	ldr	r1, [pc, #252]	@ (8001c60 <boss_burst+0x1cc>)
 8001b64:	687a      	ldr	r2, [r7, #4]
 8001b66:	4613      	mov	r3, r2
 8001b68:	005b      	lsls	r3, r3, #1
 8001b6a:	4413      	add	r3, r2
 8001b6c:	009b      	lsls	r3, r3, #2
 8001b6e:	440b      	add	r3, r1
 8001b70:	681b      	ldr	r3, [r3, #0]
 8001b72:	687a      	ldr	r2, [r7, #4]
 8001b74:	3201      	adds	r2, #1
 8001b76:	f103 0120 	add.w	r1, r3, #32
 8001b7a:	4839      	ldr	r0, [pc, #228]	@ (8001c60 <boss_burst+0x1cc>)
 8001b7c:	4613      	mov	r3, r2
 8001b7e:	005b      	lsls	r3, r3, #1
 8001b80:	4413      	add	r3, r2
 8001b82:	009b      	lsls	r3, r3, #2
 8001b84:	4403      	add	r3, r0
 8001b86:	6019      	str	r1, [r3, #0]

	boss_bullets[i + 2].x = boss_bullets[i].x + 64;
 8001b88:	4935      	ldr	r1, [pc, #212]	@ (8001c60 <boss_burst+0x1cc>)
 8001b8a:	687a      	ldr	r2, [r7, #4]
 8001b8c:	4613      	mov	r3, r2
 8001b8e:	005b      	lsls	r3, r3, #1
 8001b90:	4413      	add	r3, r2
 8001b92:	009b      	lsls	r3, r3, #2
 8001b94:	440b      	add	r3, r1
 8001b96:	681b      	ldr	r3, [r3, #0]
 8001b98:	687a      	ldr	r2, [r7, #4]
 8001b9a:	3202      	adds	r2, #2
 8001b9c:	f103 0140 	add.w	r1, r3, #64	@ 0x40
 8001ba0:	482f      	ldr	r0, [pc, #188]	@ (8001c60 <boss_burst+0x1cc>)
 8001ba2:	4613      	mov	r3, r2
 8001ba4:	005b      	lsls	r3, r3, #1
 8001ba6:	4413      	add	r3, r2
 8001ba8:	009b      	lsls	r3, r3, #2
 8001baa:	4403      	add	r3, r0
 8001bac:	6019      	str	r1, [r3, #0]
//		boss_bullets[i + 2].active = 0;
//		return;
//	}

	// Vẽ lại viên đạn mới
	ILI9341_DrawRectangle(boss_bullets[i].x, boss_bullets[i].y,
 8001bae:	492c      	ldr	r1, [pc, #176]	@ (8001c60 <boss_burst+0x1cc>)
 8001bb0:	687a      	ldr	r2, [r7, #4]
 8001bb2:	4613      	mov	r3, r2
 8001bb4:	005b      	lsls	r3, r3, #1
 8001bb6:	4413      	add	r3, r2
 8001bb8:	009b      	lsls	r3, r3, #2
 8001bba:	440b      	add	r3, r1
 8001bbc:	681b      	ldr	r3, [r3, #0]
 8001bbe:	b298      	uxth	r0, r3
 8001bc0:	4927      	ldr	r1, [pc, #156]	@ (8001c60 <boss_burst+0x1cc>)
 8001bc2:	687a      	ldr	r2, [r7, #4]
 8001bc4:	4613      	mov	r3, r2
 8001bc6:	005b      	lsls	r3, r3, #1
 8001bc8:	4413      	add	r3, r2
 8001bca:	009b      	lsls	r3, r3, #2
 8001bcc:	440b      	add	r3, r1
 8001bce:	3304      	adds	r3, #4
 8001bd0:	681b      	ldr	r3, [r3, #0]
 8001bd2:	b299      	uxth	r1, r3
 8001bd4:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001bd8:	9300      	str	r3, [sp, #0]
 8001bda:	2304      	movs	r3, #4
 8001bdc:	2208      	movs	r2, #8
 8001bde:	f7ff fa89 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, RED);

	ILI9341_DrawRectangle(boss_bullets[i + 1].x, boss_bullets[i + 1].y,
 8001be2:	687b      	ldr	r3, [r7, #4]
 8001be4:	1c5a      	adds	r2, r3, #1
 8001be6:	491e      	ldr	r1, [pc, #120]	@ (8001c60 <boss_burst+0x1cc>)
 8001be8:	4613      	mov	r3, r2
 8001bea:	005b      	lsls	r3, r3, #1
 8001bec:	4413      	add	r3, r2
 8001bee:	009b      	lsls	r3, r3, #2
 8001bf0:	440b      	add	r3, r1
 8001bf2:	681b      	ldr	r3, [r3, #0]
 8001bf4:	b298      	uxth	r0, r3
 8001bf6:	687b      	ldr	r3, [r7, #4]
 8001bf8:	1c5a      	adds	r2, r3, #1
 8001bfa:	4919      	ldr	r1, [pc, #100]	@ (8001c60 <boss_burst+0x1cc>)
 8001bfc:	4613      	mov	r3, r2
 8001bfe:	005b      	lsls	r3, r3, #1
 8001c00:	4413      	add	r3, r2
 8001c02:	009b      	lsls	r3, r3, #2
 8001c04:	440b      	add	r3, r1
 8001c06:	3304      	adds	r3, #4
 8001c08:	681b      	ldr	r3, [r3, #0]
 8001c0a:	b299      	uxth	r1, r3
 8001c0c:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001c10:	9300      	str	r3, [sp, #0]
 8001c12:	2304      	movs	r3, #4
 8001c14:	2208      	movs	r2, #8
 8001c16:	f7ff fa6d 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, RED);

	ILI9341_DrawRectangle(boss_bullets[i + 2].x, boss_bullets[i + 2].y,
 8001c1a:	687b      	ldr	r3, [r7, #4]
 8001c1c:	1c9a      	adds	r2, r3, #2
 8001c1e:	4910      	ldr	r1, [pc, #64]	@ (8001c60 <boss_burst+0x1cc>)
 8001c20:	4613      	mov	r3, r2
 8001c22:	005b      	lsls	r3, r3, #1
 8001c24:	4413      	add	r3, r2
 8001c26:	009b      	lsls	r3, r3, #2
 8001c28:	440b      	add	r3, r1
 8001c2a:	681b      	ldr	r3, [r3, #0]
 8001c2c:	b298      	uxth	r0, r3
 8001c2e:	687b      	ldr	r3, [r7, #4]
 8001c30:	1c9a      	adds	r2, r3, #2
 8001c32:	490b      	ldr	r1, [pc, #44]	@ (8001c60 <boss_burst+0x1cc>)
 8001c34:	4613      	mov	r3, r2
 8001c36:	005b      	lsls	r3, r3, #1
 8001c38:	4413      	add	r3, r2
 8001c3a:	009b      	lsls	r3, r3, #2
 8001c3c:	440b      	add	r3, r1
 8001c3e:	3304      	adds	r3, #4
 8001c40:	681b      	ldr	r3, [r3, #0]
 8001c42:	b299      	uxth	r1, r3
 8001c44:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001c48:	9300      	str	r3, [sp, #0]
 8001c4a:	2304      	movs	r3, #4
 8001c4c:	2208      	movs	r2, #8
 8001c4e:	f7ff fa51 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, RED);

	check_lose(i);
 8001c52:	6878      	ldr	r0, [r7, #4]
 8001c54:	f000 f976 	bl	8001f44 <check_lose>
}
 8001c58:	bf00      	nop
 8001c5a:	3708      	adds	r7, #8
 8001c5c:	46bd      	mov	sp, r7
 8001c5e:	bd80      	pop	{r7, pc}
 8001c60:	20000278 	.word	0x20000278

08001c64 <boss_wave>:

void boss_wave(int i) {
 8001c64:	b580      	push	{r7, lr}
 8001c66:	b084      	sub	sp, #16
 8001c68:	af02      	add	r7, sp, #8
 8001c6a:	6078      	str	r0, [r7, #4]
	// Xóa viên đạn cũ
	ILI9341_DrawRectangle(boss_bullets[i].x, boss_bullets[i].y,
 8001c6c:	4985      	ldr	r1, [pc, #532]	@ (8001e84 <boss_wave+0x220>)
 8001c6e:	687a      	ldr	r2, [r7, #4]
 8001c70:	4613      	mov	r3, r2
 8001c72:	005b      	lsls	r3, r3, #1
 8001c74:	4413      	add	r3, r2
 8001c76:	009b      	lsls	r3, r3, #2
 8001c78:	440b      	add	r3, r1
 8001c7a:	681b      	ldr	r3, [r3, #0]
 8001c7c:	b298      	uxth	r0, r3
 8001c7e:	4981      	ldr	r1, [pc, #516]	@ (8001e84 <boss_wave+0x220>)
 8001c80:	687a      	ldr	r2, [r7, #4]
 8001c82:	4613      	mov	r3, r2
 8001c84:	005b      	lsls	r3, r3, #1
 8001c86:	4413      	add	r3, r2
 8001c88:	009b      	lsls	r3, r3, #2
 8001c8a:	440b      	add	r3, r1
 8001c8c:	3304      	adds	r3, #4
 8001c8e:	681b      	ldr	r3, [r3, #0]
 8001c90:	b299      	uxth	r1, r3
 8001c92:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001c96:	9300      	str	r3, [sp, #0]
 8001c98:	2304      	movs	r3, #4
 8001c9a:	2208      	movs	r2, #8
 8001c9c:	f7ff fa2a 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, WHITE);
	ILI9341_DrawRectangle(boss_bullets[i + 1].x, boss_bullets[i + 1].y,
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	1c5a      	adds	r2, r3, #1
 8001ca4:	4977      	ldr	r1, [pc, #476]	@ (8001e84 <boss_wave+0x220>)
 8001ca6:	4613      	mov	r3, r2
 8001ca8:	005b      	lsls	r3, r3, #1
 8001caa:	4413      	add	r3, r2
 8001cac:	009b      	lsls	r3, r3, #2
 8001cae:	440b      	add	r3, r1
 8001cb0:	681b      	ldr	r3, [r3, #0]
 8001cb2:	b298      	uxth	r0, r3
 8001cb4:	687b      	ldr	r3, [r7, #4]
 8001cb6:	1c5a      	adds	r2, r3, #1
 8001cb8:	4972      	ldr	r1, [pc, #456]	@ (8001e84 <boss_wave+0x220>)
 8001cba:	4613      	mov	r3, r2
 8001cbc:	005b      	lsls	r3, r3, #1
 8001cbe:	4413      	add	r3, r2
 8001cc0:	009b      	lsls	r3, r3, #2
 8001cc2:	440b      	add	r3, r1
 8001cc4:	3304      	adds	r3, #4
 8001cc6:	681b      	ldr	r3, [r3, #0]
 8001cc8:	b299      	uxth	r1, r3
 8001cca:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001cce:	9300      	str	r3, [sp, #0]
 8001cd0:	2304      	movs	r3, #4
 8001cd2:	2208      	movs	r2, #8
 8001cd4:	f7ff fa0e 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, WHITE);
	ILI9341_DrawRectangle(boss_bullets[i + 2].x, boss_bullets[i + 2].y,
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	1c9a      	adds	r2, r3, #2
 8001cdc:	4969      	ldr	r1, [pc, #420]	@ (8001e84 <boss_wave+0x220>)
 8001cde:	4613      	mov	r3, r2
 8001ce0:	005b      	lsls	r3, r3, #1
 8001ce2:	4413      	add	r3, r2
 8001ce4:	009b      	lsls	r3, r3, #2
 8001ce6:	440b      	add	r3, r1
 8001ce8:	681b      	ldr	r3, [r3, #0]
 8001cea:	b298      	uxth	r0, r3
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	1c9a      	adds	r2, r3, #2
 8001cf0:	4964      	ldr	r1, [pc, #400]	@ (8001e84 <boss_wave+0x220>)
 8001cf2:	4613      	mov	r3, r2
 8001cf4:	005b      	lsls	r3, r3, #1
 8001cf6:	4413      	add	r3, r2
 8001cf8:	009b      	lsls	r3, r3, #2
 8001cfa:	440b      	add	r3, r1
 8001cfc:	3304      	adds	r3, #4
 8001cfe:	681b      	ldr	r3, [r3, #0]
 8001d00:	b299      	uxth	r1, r3
 8001d02:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001d06:	9300      	str	r3, [sp, #0]
 8001d08:	2304      	movs	r3, #4
 8001d0a:	2208      	movs	r2, #8
 8001d0c:	f7ff f9f2 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, WHITE);

	// Di chuyển đạn xuống
	boss_bullets[i].x -= 2;
 8001d10:	495c      	ldr	r1, [pc, #368]	@ (8001e84 <boss_wave+0x220>)
 8001d12:	687a      	ldr	r2, [r7, #4]
 8001d14:	4613      	mov	r3, r2
 8001d16:	005b      	lsls	r3, r3, #1
 8001d18:	4413      	add	r3, r2
 8001d1a:	009b      	lsls	r3, r3, #2
 8001d1c:	440b      	add	r3, r1
 8001d1e:	681b      	ldr	r3, [r3, #0]
 8001d20:	1e99      	subs	r1, r3, #2
 8001d22:	4858      	ldr	r0, [pc, #352]	@ (8001e84 <boss_wave+0x220>)
 8001d24:	687a      	ldr	r2, [r7, #4]
 8001d26:	4613      	mov	r3, r2
 8001d28:	005b      	lsls	r3, r3, #1
 8001d2a:	4413      	add	r3, r2
 8001d2c:	009b      	lsls	r3, r3, #2
 8001d2e:	4403      	add	r3, r0
 8001d30:	6019      	str	r1, [r3, #0]

	boss_bullets[i + 1].x = boss_bullets[i].x + 16;
 8001d32:	4954      	ldr	r1, [pc, #336]	@ (8001e84 <boss_wave+0x220>)
 8001d34:	687a      	ldr	r2, [r7, #4]
 8001d36:	4613      	mov	r3, r2
 8001d38:	005b      	lsls	r3, r3, #1
 8001d3a:	4413      	add	r3, r2
 8001d3c:	009b      	lsls	r3, r3, #2
 8001d3e:	440b      	add	r3, r1
 8001d40:	681b      	ldr	r3, [r3, #0]
 8001d42:	687a      	ldr	r2, [r7, #4]
 8001d44:	3201      	adds	r2, #1
 8001d46:	f103 0110 	add.w	r1, r3, #16
 8001d4a:	484e      	ldr	r0, [pc, #312]	@ (8001e84 <boss_wave+0x220>)
 8001d4c:	4613      	mov	r3, r2
 8001d4e:	005b      	lsls	r3, r3, #1
 8001d50:	4413      	add	r3, r2
 8001d52:	009b      	lsls	r3, r3, #2
 8001d54:	4403      	add	r3, r0
 8001d56:	6019      	str	r1, [r3, #0]
	boss_bullets[i + 1].y = boss_bullets[i].y + 16;
 8001d58:	494a      	ldr	r1, [pc, #296]	@ (8001e84 <boss_wave+0x220>)
 8001d5a:	687a      	ldr	r2, [r7, #4]
 8001d5c:	4613      	mov	r3, r2
 8001d5e:	005b      	lsls	r3, r3, #1
 8001d60:	4413      	add	r3, r2
 8001d62:	009b      	lsls	r3, r3, #2
 8001d64:	440b      	add	r3, r1
 8001d66:	3304      	adds	r3, #4
 8001d68:	681b      	ldr	r3, [r3, #0]
 8001d6a:	687a      	ldr	r2, [r7, #4]
 8001d6c:	3201      	adds	r2, #1
 8001d6e:	f103 0110 	add.w	r1, r3, #16
 8001d72:	4844      	ldr	r0, [pc, #272]	@ (8001e84 <boss_wave+0x220>)
 8001d74:	4613      	mov	r3, r2
 8001d76:	005b      	lsls	r3, r3, #1
 8001d78:	4413      	add	r3, r2
 8001d7a:	009b      	lsls	r3, r3, #2
 8001d7c:	4403      	add	r3, r0
 8001d7e:	3304      	adds	r3, #4
 8001d80:	6019      	str	r1, [r3, #0]

	boss_bullets[i + 2].x = boss_bullets[i].x + 16;
 8001d82:	4940      	ldr	r1, [pc, #256]	@ (8001e84 <boss_wave+0x220>)
 8001d84:	687a      	ldr	r2, [r7, #4]
 8001d86:	4613      	mov	r3, r2
 8001d88:	005b      	lsls	r3, r3, #1
 8001d8a:	4413      	add	r3, r2
 8001d8c:	009b      	lsls	r3, r3, #2
 8001d8e:	440b      	add	r3, r1
 8001d90:	681b      	ldr	r3, [r3, #0]
 8001d92:	687a      	ldr	r2, [r7, #4]
 8001d94:	3202      	adds	r2, #2
 8001d96:	f103 0110 	add.w	r1, r3, #16
 8001d9a:	483a      	ldr	r0, [pc, #232]	@ (8001e84 <boss_wave+0x220>)
 8001d9c:	4613      	mov	r3, r2
 8001d9e:	005b      	lsls	r3, r3, #1
 8001da0:	4413      	add	r3, r2
 8001da2:	009b      	lsls	r3, r3, #2
 8001da4:	4403      	add	r3, r0
 8001da6:	6019      	str	r1, [r3, #0]
	boss_bullets[i + 2].y = boss_bullets[i].y - 16;
 8001da8:	4936      	ldr	r1, [pc, #216]	@ (8001e84 <boss_wave+0x220>)
 8001daa:	687a      	ldr	r2, [r7, #4]
 8001dac:	4613      	mov	r3, r2
 8001dae:	005b      	lsls	r3, r3, #1
 8001db0:	4413      	add	r3, r2
 8001db2:	009b      	lsls	r3, r3, #2
 8001db4:	440b      	add	r3, r1
 8001db6:	3304      	adds	r3, #4
 8001db8:	681b      	ldr	r3, [r3, #0]
 8001dba:	687a      	ldr	r2, [r7, #4]
 8001dbc:	3202      	adds	r2, #2
 8001dbe:	f1a3 0110 	sub.w	r1, r3, #16
 8001dc2:	4830      	ldr	r0, [pc, #192]	@ (8001e84 <boss_wave+0x220>)
 8001dc4:	4613      	mov	r3, r2
 8001dc6:	005b      	lsls	r3, r3, #1
 8001dc8:	4413      	add	r3, r2
 8001dca:	009b      	lsls	r3, r3, #2
 8001dcc:	4403      	add	r3, r0
 8001dce:	3304      	adds	r3, #4
 8001dd0:	6019      	str	r1, [r3, #0]
//		boss_bullets[i + 2].active = 0;
//		return;
//	}

	// Vẽ lại viên đạn mới
	ILI9341_DrawRectangle(boss_bullets[i].x, boss_bullets[i].y,
 8001dd2:	492c      	ldr	r1, [pc, #176]	@ (8001e84 <boss_wave+0x220>)
 8001dd4:	687a      	ldr	r2, [r7, #4]
 8001dd6:	4613      	mov	r3, r2
 8001dd8:	005b      	lsls	r3, r3, #1
 8001dda:	4413      	add	r3, r2
 8001ddc:	009b      	lsls	r3, r3, #2
 8001dde:	440b      	add	r3, r1
 8001de0:	681b      	ldr	r3, [r3, #0]
 8001de2:	b298      	uxth	r0, r3
 8001de4:	4927      	ldr	r1, [pc, #156]	@ (8001e84 <boss_wave+0x220>)
 8001de6:	687a      	ldr	r2, [r7, #4]
 8001de8:	4613      	mov	r3, r2
 8001dea:	005b      	lsls	r3, r3, #1
 8001dec:	4413      	add	r3, r2
 8001dee:	009b      	lsls	r3, r3, #2
 8001df0:	440b      	add	r3, r1
 8001df2:	3304      	adds	r3, #4
 8001df4:	681b      	ldr	r3, [r3, #0]
 8001df6:	b299      	uxth	r1, r3
 8001df8:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001dfc:	9300      	str	r3, [sp, #0]
 8001dfe:	2304      	movs	r3, #4
 8001e00:	2208      	movs	r2, #8
 8001e02:	f7ff f977 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, RED);

	ILI9341_DrawRectangle(boss_bullets[i + 1].x, boss_bullets[i + 1].y,
 8001e06:	687b      	ldr	r3, [r7, #4]
 8001e08:	1c5a      	adds	r2, r3, #1
 8001e0a:	491e      	ldr	r1, [pc, #120]	@ (8001e84 <boss_wave+0x220>)
 8001e0c:	4613      	mov	r3, r2
 8001e0e:	005b      	lsls	r3, r3, #1
 8001e10:	4413      	add	r3, r2
 8001e12:	009b      	lsls	r3, r3, #2
 8001e14:	440b      	add	r3, r1
 8001e16:	681b      	ldr	r3, [r3, #0]
 8001e18:	b298      	uxth	r0, r3
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	1c5a      	adds	r2, r3, #1
 8001e1e:	4919      	ldr	r1, [pc, #100]	@ (8001e84 <boss_wave+0x220>)
 8001e20:	4613      	mov	r3, r2
 8001e22:	005b      	lsls	r3, r3, #1
 8001e24:	4413      	add	r3, r2
 8001e26:	009b      	lsls	r3, r3, #2
 8001e28:	440b      	add	r3, r1
 8001e2a:	3304      	adds	r3, #4
 8001e2c:	681b      	ldr	r3, [r3, #0]
 8001e2e:	b299      	uxth	r1, r3
 8001e30:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001e34:	9300      	str	r3, [sp, #0]
 8001e36:	2304      	movs	r3, #4
 8001e38:	2208      	movs	r2, #8
 8001e3a:	f7ff f95b 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, RED);

	ILI9341_DrawRectangle(boss_bullets[i + 2].x, boss_bullets[i + 2].y,
 8001e3e:	687b      	ldr	r3, [r7, #4]
 8001e40:	1c9a      	adds	r2, r3, #2
 8001e42:	4910      	ldr	r1, [pc, #64]	@ (8001e84 <boss_wave+0x220>)
 8001e44:	4613      	mov	r3, r2
 8001e46:	005b      	lsls	r3, r3, #1
 8001e48:	4413      	add	r3, r2
 8001e4a:	009b      	lsls	r3, r3, #2
 8001e4c:	440b      	add	r3, r1
 8001e4e:	681b      	ldr	r3, [r3, #0]
 8001e50:	b298      	uxth	r0, r3
 8001e52:	687b      	ldr	r3, [r7, #4]
 8001e54:	1c9a      	adds	r2, r3, #2
 8001e56:	490b      	ldr	r1, [pc, #44]	@ (8001e84 <boss_wave+0x220>)
 8001e58:	4613      	mov	r3, r2
 8001e5a:	005b      	lsls	r3, r3, #1
 8001e5c:	4413      	add	r3, r2
 8001e5e:	009b      	lsls	r3, r3, #2
 8001e60:	440b      	add	r3, r1
 8001e62:	3304      	adds	r3, #4
 8001e64:	681b      	ldr	r3, [r3, #0]
 8001e66:	b299      	uxth	r1, r3
 8001e68:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8001e6c:	9300      	str	r3, [sp, #0]
 8001e6e:	2304      	movs	r3, #4
 8001e70:	2208      	movs	r2, #8
 8001e72:	f7ff f93f 	bl	80010f4 <ILI9341_DrawRectangle>
	BULLET_HEIGHT, BULLET_WIDTH, RED);

	check_lose(i);
 8001e76:	6878      	ldr	r0, [r7, #4]
 8001e78:	f000 f864 	bl	8001f44 <check_lose>
}
 8001e7c:	bf00      	nop
 8001e7e:	3708      	adds	r7, #8
 8001e80:	46bd      	mov	sp, r7
 8001e82:	bd80      	pop	{r7, pc}
 8001e84:	20000278 	.word	0x20000278

08001e88 <update_boss_bullets>:

void update_boss_bullets() { // hàm cập nhật tình trạng đạn của boss
 8001e88:	b580      	push	{r7, lr}
 8001e8a:	b082      	sub	sp, #8
 8001e8c:	af00      	add	r7, sp, #0
	//nếu viên đạn được active, vẽ lại đường đạn đi xuống, nếu va chạm vào máy bay thì thua
	for (int i = 0; i < MAX_BOSS_BULLETS; i += 3) {
 8001e8e:	2300      	movs	r3, #0
 8001e90:	607b      	str	r3, [r7, #4]
 8001e92:	e04b      	b.n	8001f2c <update_boss_bullets+0xa4>
		if (boss_bullets[i].active) {
 8001e94:	4929      	ldr	r1, [pc, #164]	@ (8001f3c <update_boss_bullets+0xb4>)
 8001e96:	687a      	ldr	r2, [r7, #4]
 8001e98:	4613      	mov	r3, r2
 8001e9a:	005b      	lsls	r3, r3, #1
 8001e9c:	4413      	add	r3, r2
 8001e9e:	009b      	lsls	r3, r3, #2
 8001ea0:	440b      	add	r3, r1
 8001ea2:	3308      	adds	r3, #8
 8001ea4:	681b      	ldr	r3, [r3, #0]
 8001ea6:	2b00      	cmp	r3, #0
 8001ea8:	d03d      	beq.n	8001f26 <update_boss_bullets+0x9e>
			if ((i / 3) % 3 == 0) {
 8001eaa:	687b      	ldr	r3, [r7, #4]
 8001eac:	4a24      	ldr	r2, [pc, #144]	@ (8001f40 <update_boss_bullets+0xb8>)
 8001eae:	fb82 1203 	smull	r1, r2, r2, r3
 8001eb2:	17db      	asrs	r3, r3, #31
 8001eb4:	1ad1      	subs	r1, r2, r3
 8001eb6:	4b22      	ldr	r3, [pc, #136]	@ (8001f40 <update_boss_bullets+0xb8>)
 8001eb8:	fb83 3201 	smull	r3, r2, r3, r1
 8001ebc:	17cb      	asrs	r3, r1, #31
 8001ebe:	1ad2      	subs	r2, r2, r3
 8001ec0:	4613      	mov	r3, r2
 8001ec2:	005b      	lsls	r3, r3, #1
 8001ec4:	4413      	add	r3, r2
 8001ec6:	1aca      	subs	r2, r1, r3
 8001ec8:	2a00      	cmp	r2, #0
 8001eca:	d103      	bne.n	8001ed4 <update_boss_bullets+0x4c>
				boss_shotgun(i);
 8001ecc:	6878      	ldr	r0, [r7, #4]
 8001ece:	f7ff fccf 	bl	8001870 <boss_shotgun>
 8001ed2:	e028      	b.n	8001f26 <update_boss_bullets+0x9e>
			} else if ((i / 3) % 3 == 1) {
 8001ed4:	687b      	ldr	r3, [r7, #4]
 8001ed6:	4a1a      	ldr	r2, [pc, #104]	@ (8001f40 <update_boss_bullets+0xb8>)
 8001ed8:	fb82 1203 	smull	r1, r2, r2, r3
 8001edc:	17db      	asrs	r3, r3, #31
 8001ede:	1ad1      	subs	r1, r2, r3
 8001ee0:	4b17      	ldr	r3, [pc, #92]	@ (8001f40 <update_boss_bullets+0xb8>)
 8001ee2:	fb83 3201 	smull	r3, r2, r3, r1
 8001ee6:	17cb      	asrs	r3, r1, #31
 8001ee8:	1ad2      	subs	r2, r2, r3
 8001eea:	4613      	mov	r3, r2
 8001eec:	005b      	lsls	r3, r3, #1
 8001eee:	4413      	add	r3, r2
 8001ef0:	1aca      	subs	r2, r1, r3
 8001ef2:	2a01      	cmp	r2, #1
 8001ef4:	d103      	bne.n	8001efe <update_boss_bullets+0x76>
				boss_burst(i);
 8001ef6:	6878      	ldr	r0, [r7, #4]
 8001ef8:	f7ff fdcc 	bl	8001a94 <boss_burst>
 8001efc:	e013      	b.n	8001f26 <update_boss_bullets+0x9e>
			} else if ((i / 3) % 3 == 2) {
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	4a0f      	ldr	r2, [pc, #60]	@ (8001f40 <update_boss_bullets+0xb8>)
 8001f02:	fb82 1203 	smull	r1, r2, r2, r3
 8001f06:	17db      	asrs	r3, r3, #31
 8001f08:	1ad1      	subs	r1, r2, r3
 8001f0a:	4b0d      	ldr	r3, [pc, #52]	@ (8001f40 <update_boss_bullets+0xb8>)
 8001f0c:	fb83 3201 	smull	r3, r2, r3, r1
 8001f10:	17cb      	asrs	r3, r1, #31
 8001f12:	1ad2      	subs	r2, r2, r3
 8001f14:	4613      	mov	r3, r2
 8001f16:	005b      	lsls	r3, r3, #1
 8001f18:	4413      	add	r3, r2
 8001f1a:	1aca      	subs	r2, r1, r3
 8001f1c:	2a02      	cmp	r2, #2
 8001f1e:	d102      	bne.n	8001f26 <update_boss_bullets+0x9e>
				boss_wave(i);
 8001f20:	6878      	ldr	r0, [r7, #4]
 8001f22:	f7ff fe9f 	bl	8001c64 <boss_wave>
	for (int i = 0; i < MAX_BOSS_BULLETS; i += 3) {
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	3303      	adds	r3, #3
 8001f2a:	607b      	str	r3, [r7, #4]
 8001f2c:	687b      	ldr	r3, [r7, #4]
 8001f2e:	2b31      	cmp	r3, #49	@ 0x31
 8001f30:	ddb0      	ble.n	8001e94 <update_boss_bullets+0xc>
			}
		}
	}
}
 8001f32:	bf00      	nop
 8001f34:	bf00      	nop
 8001f36:	3708      	adds	r7, #8
 8001f38:	46bd      	mov	sp, r7
 8001f3a:	bd80      	pop	{r7, pc}
 8001f3c:	20000278 	.word	0x20000278
 8001f40:	55555556 	.word	0x55555556

08001f44 <check_lose>:
void check_lose(int i) {
 8001f44:	b580      	push	{r7, lr}
 8001f46:	b084      	sub	sp, #16
 8001f48:	af00      	add	r7, sp, #0
 8001f4a:	6078      	str	r0, [r7, #4]
// Kiểm tra va chạm với máy bay người chơi
	for (int j = i; j < i + 3; j++) {
 8001f4c:	687b      	ldr	r3, [r7, #4]
 8001f4e:	60fb      	str	r3, [r7, #12]
 8001f50:	e03f      	b.n	8001fd2 <check_lose+0x8e>
		if (boss_bullets[j].x + 4 <= plane_x
 8001f52:	4925      	ldr	r1, [pc, #148]	@ (8001fe8 <check_lose+0xa4>)
 8001f54:	68fa      	ldr	r2, [r7, #12]
 8001f56:	4613      	mov	r3, r2
 8001f58:	005b      	lsls	r3, r3, #1
 8001f5a:	4413      	add	r3, r2
 8001f5c:	009b      	lsls	r3, r3, #2
 8001f5e:	440b      	add	r3, r1
 8001f60:	681b      	ldr	r3, [r3, #0]
 8001f62:	1cda      	adds	r2, r3, #3
 8001f64:	4b21      	ldr	r3, [pc, #132]	@ (8001fec <check_lose+0xa8>)
 8001f66:	681b      	ldr	r3, [r3, #0]
 8001f68:	429a      	cmp	r2, r3
 8001f6a:	db2f      	blt.n	8001fcc <check_lose+0x88>
				|| boss_bullets[j].x >= plane_x + PLANE_WIDTH
 8001f6c:	4b1f      	ldr	r3, [pc, #124]	@ (8001fec <check_lose+0xa8>)
 8001f6e:	681b      	ldr	r3, [r3, #0]
 8001f70:	f103 0113 	add.w	r1, r3, #19
 8001f74:	481c      	ldr	r0, [pc, #112]	@ (8001fe8 <check_lose+0xa4>)
 8001f76:	68fa      	ldr	r2, [r7, #12]
 8001f78:	4613      	mov	r3, r2
 8001f7a:	005b      	lsls	r3, r3, #1
 8001f7c:	4413      	add	r3, r2
 8001f7e:	009b      	lsls	r3, r3, #2
 8001f80:	4403      	add	r3, r0
 8001f82:	681b      	ldr	r3, [r3, #0]
 8001f84:	4299      	cmp	r1, r3
 8001f86:	db21      	blt.n	8001fcc <check_lose+0x88>
				|| boss_bullets[j].y + 4 <= plane_y - PLANE_WIDTH / 2
 8001f88:	4917      	ldr	r1, [pc, #92]	@ (8001fe8 <check_lose+0xa4>)
 8001f8a:	68fa      	ldr	r2, [r7, #12]
 8001f8c:	4613      	mov	r3, r2
 8001f8e:	005b      	lsls	r3, r3, #1
 8001f90:	4413      	add	r3, r2
 8001f92:	009b      	lsls	r3, r3, #2
 8001f94:	440b      	add	r3, r1
 8001f96:	3304      	adds	r3, #4
 8001f98:	681b      	ldr	r3, [r3, #0]
 8001f9a:	1cda      	adds	r2, r3, #3
 8001f9c:	4b14      	ldr	r3, [pc, #80]	@ (8001ff0 <check_lose+0xac>)
 8001f9e:	681b      	ldr	r3, [r3, #0]
 8001fa0:	3b0a      	subs	r3, #10
 8001fa2:	429a      	cmp	r2, r3
 8001fa4:	db12      	blt.n	8001fcc <check_lose+0x88>
				|| boss_bullets[j].y >= plane_y + PLANE_HEIGHT / 2) {
 8001fa6:	4b12      	ldr	r3, [pc, #72]	@ (8001ff0 <check_lose+0xac>)
 8001fa8:	681b      	ldr	r3, [r3, #0]
 8001faa:	f103 0109 	add.w	r1, r3, #9
 8001fae:	480e      	ldr	r0, [pc, #56]	@ (8001fe8 <check_lose+0xa4>)
 8001fb0:	68fa      	ldr	r2, [r7, #12]
 8001fb2:	4613      	mov	r3, r2
 8001fb4:	005b      	lsls	r3, r3, #1
 8001fb6:	4413      	add	r3, r2
 8001fb8:	009b      	lsls	r3, r3, #2
 8001fba:	4403      	add	r3, r0
 8001fbc:	3304      	adds	r3, #4
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	4299      	cmp	r1, r3
 8001fc2:	db03      	blt.n	8001fcc <check_lose+0x88>
		} else {
			show_game_over_screen();
 8001fc4:	f000 f94c 	bl	8002260 <show_game_over_screen>
			while (1)
 8001fc8:	bf00      	nop
 8001fca:	e7fd      	b.n	8001fc8 <check_lose+0x84>
	for (int j = i; j < i + 3; j++) {
 8001fcc:	68fb      	ldr	r3, [r7, #12]
 8001fce:	3301      	adds	r3, #1
 8001fd0:	60fb      	str	r3, [r7, #12]
 8001fd2:	687b      	ldr	r3, [r7, #4]
 8001fd4:	3302      	adds	r3, #2
 8001fd6:	68fa      	ldr	r2, [r7, #12]
 8001fd8:	429a      	cmp	r2, r3
 8001fda:	ddba      	ble.n	8001f52 <check_lose+0xe>
				; // Dừng game tại đây
		}
	}
}
 8001fdc:	bf00      	nop
 8001fde:	bf00      	nop
 8001fe0:	3710      	adds	r7, #16
 8001fe2:	46bd      	mov	sp, r7
 8001fe4:	bd80      	pop	{r7, pc}
 8001fe6:	bf00      	nop
 8001fe8:	20000278 	.word	0x20000278
 8001fec:	20000004 	.word	0x20000004
 8001ff0:	20000008 	.word	0x20000008

08001ff4 <update_boss>:

void update_boss() {
 8001ff4:	b580      	push	{r7, lr}
 8001ff6:	af00      	add	r7, sp, #0
//hàm cập nhật tình trạng của boss, boss di chuyển qua lại màn hình, sau 100 chu kì sẽ bắn đạn 1 lần
	if (!boss.active)
 8001ff8:	4b1d      	ldr	r3, [pc, #116]	@ (8002070 <update_boss+0x7c>)
 8001ffa:	68db      	ldr	r3, [r3, #12]
 8001ffc:	2b00      	cmp	r3, #0
 8001ffe:	d035      	beq.n	800206c <update_boss+0x78>
		return;
	erase_boss(boss.x, boss.y);
 8002000:	4b1b      	ldr	r3, [pc, #108]	@ (8002070 <update_boss+0x7c>)
 8002002:	681b      	ldr	r3, [r3, #0]
 8002004:	4a1a      	ldr	r2, [pc, #104]	@ (8002070 <update_boss+0x7c>)
 8002006:	6852      	ldr	r2, [r2, #4]
 8002008:	4611      	mov	r1, r2
 800200a:	4618      	mov	r0, r3
 800200c:	f7ff fb96 	bl	800173c <erase_boss>
	if (boss.y <= 0)
 8002010:	4b17      	ldr	r3, [pc, #92]	@ (8002070 <update_boss+0x7c>)
 8002012:	685b      	ldr	r3, [r3, #4]
 8002014:	2b00      	cmp	r3, #0
 8002016:	dc03      	bgt.n	8002020 <update_boss+0x2c>
		a = 1;
 8002018:	4b16      	ldr	r3, [pc, #88]	@ (8002074 <update_boss+0x80>)
 800201a:	2201      	movs	r2, #1
 800201c:	601a      	str	r2, [r3, #0]
 800201e:	e007      	b.n	8002030 <update_boss+0x3c>
	else if (boss.y >= 210)
 8002020:	4b13      	ldr	r3, [pc, #76]	@ (8002070 <update_boss+0x7c>)
 8002022:	685b      	ldr	r3, [r3, #4]
 8002024:	2bd1      	cmp	r3, #209	@ 0xd1
 8002026:	dd03      	ble.n	8002030 <update_boss+0x3c>
		a = -1; // Di chuyển lại từ phải sang trái
 8002028:	4b12      	ldr	r3, [pc, #72]	@ (8002074 <update_boss+0x80>)
 800202a:	f04f 32ff 	mov.w	r2, #4294967295
 800202e:	601a      	str	r2, [r3, #0]
	boss.y += a;
 8002030:	4b0f      	ldr	r3, [pc, #60]	@ (8002070 <update_boss+0x7c>)
 8002032:	685a      	ldr	r2, [r3, #4]
 8002034:	4b0f      	ldr	r3, [pc, #60]	@ (8002074 <update_boss+0x80>)
 8002036:	681b      	ldr	r3, [r3, #0]
 8002038:	4413      	add	r3, r2
 800203a:	4a0d      	ldr	r2, [pc, #52]	@ (8002070 <update_boss+0x7c>)
 800203c:	6053      	str	r3, [r2, #4]

	draw_boss(boss.x, boss.y);
 800203e:	4b0c      	ldr	r3, [pc, #48]	@ (8002070 <update_boss+0x7c>)
 8002040:	681b      	ldr	r3, [r3, #0]
 8002042:	4a0b      	ldr	r2, [pc, #44]	@ (8002070 <update_boss+0x7c>)
 8002044:	6852      	ldr	r2, [r2, #4]
 8002046:	4611      	mov	r1, r2
 8002048:	4618      	mov	r0, r3
 800204a:	f7ff fb63 	bl	8001714 <draw_boss>

	boss.laser_timer++;
 800204e:	4b08      	ldr	r3, [pc, #32]	@ (8002070 <update_boss+0x7c>)
 8002050:	691b      	ldr	r3, [r3, #16]
 8002052:	3301      	adds	r3, #1
 8002054:	4a06      	ldr	r2, [pc, #24]	@ (8002070 <update_boss+0x7c>)
 8002056:	6113      	str	r3, [r2, #16]
	if (boss.laser_timer >= 100) { // Bắn laser sau mỗi 100 chu kỳ
 8002058:	4b05      	ldr	r3, [pc, #20]	@ (8002070 <update_boss+0x7c>)
 800205a:	691b      	ldr	r3, [r3, #16]
 800205c:	2b63      	cmp	r3, #99	@ 0x63
 800205e:	dd06      	ble.n	800206e <update_boss+0x7a>
		fire_boss_laser();
 8002060:	f7ff fb80 	bl	8001764 <fire_boss_laser>
		boss.laser_timer = 0;
 8002064:	4b02      	ldr	r3, [pc, #8]	@ (8002070 <update_boss+0x7c>)
 8002066:	2200      	movs	r2, #0
 8002068:	611a      	str	r2, [r3, #16]
 800206a:	e000      	b.n	800206e <update_boss+0x7a>
		return;
 800206c:	bf00      	nop
	}
}
 800206e:	bd80      	pop	{r7, pc}
 8002070:	20000264 	.word	0x20000264
 8002074:	20000014 	.word	0x20000014

08002078 <check_bullet_boss_collision>:

int check_bullet_boss_collision() {
 8002078:	b580      	push	{r7, lr}
 800207a:	b084      	sub	sp, #16
 800207c:	af02      	add	r7, sp, #8
// hàm check va chạm boss với đạn, nếu bắn boss đủ số lượng đạn, boss sẽ chết
	if (!boss.active)
 800207e:	4b49      	ldr	r3, [pc, #292]	@ (80021a4 <check_bullet_boss_collision+0x12c>)
 8002080:	68db      	ldr	r3, [r3, #12]
 8002082:	2b00      	cmp	r3, #0
 8002084:	d101      	bne.n	800208a <check_bullet_boss_collision+0x12>
		return 0;
 8002086:	2300      	movs	r3, #0
 8002088:	e088      	b.n	800219c <check_bullet_boss_collision+0x124>

	for (int i = 0; i < MAX_BULLETS; i++) {
 800208a:	2300      	movs	r3, #0
 800208c:	607b      	str	r3, [r7, #4]
 800208e:	e080      	b.n	8002192 <check_bullet_boss_collision+0x11a>
		if (!bullets[i].active)
 8002090:	4945      	ldr	r1, [pc, #276]	@ (80021a8 <check_bullet_boss_collision+0x130>)
 8002092:	687a      	ldr	r2, [r7, #4]
 8002094:	4613      	mov	r3, r2
 8002096:	005b      	lsls	r3, r3, #1
 8002098:	4413      	add	r3, r2
 800209a:	009b      	lsls	r3, r3, #2
 800209c:	440b      	add	r3, r1
 800209e:	3308      	adds	r3, #8
 80020a0:	681b      	ldr	r3, [r3, #0]
 80020a2:	2b00      	cmp	r3, #0
 80020a4:	d071      	beq.n	800218a <check_bullet_boss_collision+0x112>
			continue;

		if (bullets[i].x + BULLET_HEIGHT > boss.x&&
 80020a6:	4940      	ldr	r1, [pc, #256]	@ (80021a8 <check_bullet_boss_collision+0x130>)
 80020a8:	687a      	ldr	r2, [r7, #4]
 80020aa:	4613      	mov	r3, r2
 80020ac:	005b      	lsls	r3, r3, #1
 80020ae:	4413      	add	r3, r2
 80020b0:	009b      	lsls	r3, r3, #2
 80020b2:	440b      	add	r3, r1
 80020b4:	681b      	ldr	r3, [r3, #0]
 80020b6:	1dda      	adds	r2, r3, #7
 80020b8:	4b3a      	ldr	r3, [pc, #232]	@ (80021a4 <check_bullet_boss_collision+0x12c>)
 80020ba:	681b      	ldr	r3, [r3, #0]
 80020bc:	429a      	cmp	r2, r3
 80020be:	db65      	blt.n	800218c <check_bullet_boss_collision+0x114>
		bullets[i].x < boss.x + BOSS_WIDTH &&
 80020c0:	4b38      	ldr	r3, [pc, #224]	@ (80021a4 <check_bullet_boss_collision+0x12c>)
 80020c2:	681b      	ldr	r3, [r3, #0]
 80020c4:	f103 0127 	add.w	r1, r3, #39	@ 0x27
 80020c8:	4837      	ldr	r0, [pc, #220]	@ (80021a8 <check_bullet_boss_collision+0x130>)
 80020ca:	687a      	ldr	r2, [r7, #4]
 80020cc:	4613      	mov	r3, r2
 80020ce:	005b      	lsls	r3, r3, #1
 80020d0:	4413      	add	r3, r2
 80020d2:	009b      	lsls	r3, r3, #2
 80020d4:	4403      	add	r3, r0
 80020d6:	681b      	ldr	r3, [r3, #0]
		if (bullets[i].x + BULLET_HEIGHT > boss.x&&
 80020d8:	4299      	cmp	r1, r3
 80020da:	db57      	blt.n	800218c <check_bullet_boss_collision+0x114>
		bullets[i].y + BULLET_WIDTH > boss.y &&
 80020dc:	4932      	ldr	r1, [pc, #200]	@ (80021a8 <check_bullet_boss_collision+0x130>)
 80020de:	687a      	ldr	r2, [r7, #4]
 80020e0:	4613      	mov	r3, r2
 80020e2:	005b      	lsls	r3, r3, #1
 80020e4:	4413      	add	r3, r2
 80020e6:	009b      	lsls	r3, r3, #2
 80020e8:	440b      	add	r3, r1
 80020ea:	3304      	adds	r3, #4
 80020ec:	681b      	ldr	r3, [r3, #0]
 80020ee:	1cda      	adds	r2, r3, #3
 80020f0:	4b2c      	ldr	r3, [pc, #176]	@ (80021a4 <check_bullet_boss_collision+0x12c>)
 80020f2:	685b      	ldr	r3, [r3, #4]
		bullets[i].x < boss.x + BOSS_WIDTH &&
 80020f4:	429a      	cmp	r2, r3
 80020f6:	db49      	blt.n	800218c <check_bullet_boss_collision+0x114>
		bullets[i].y < boss.y + BOSS_HEIGHT) {
 80020f8:	4b2a      	ldr	r3, [pc, #168]	@ (80021a4 <check_bullet_boss_collision+0x12c>)
 80020fa:	685b      	ldr	r3, [r3, #4]
 80020fc:	f103 011d 	add.w	r1, r3, #29
 8002100:	4829      	ldr	r0, [pc, #164]	@ (80021a8 <check_bullet_boss_collision+0x130>)
 8002102:	687a      	ldr	r2, [r7, #4]
 8002104:	4613      	mov	r3, r2
 8002106:	005b      	lsls	r3, r3, #1
 8002108:	4413      	add	r3, r2
 800210a:	009b      	lsls	r3, r3, #2
 800210c:	4403      	add	r3, r0
 800210e:	3304      	adds	r3, #4
 8002110:	681b      	ldr	r3, [r3, #0]
		bullets[i].y + BULLET_WIDTH > boss.y &&
 8002112:	4299      	cmp	r1, r3
 8002114:	db3a      	blt.n	800218c <check_bullet_boss_collision+0x114>

			bullets[i].active = 0;
 8002116:	4924      	ldr	r1, [pc, #144]	@ (80021a8 <check_bullet_boss_collision+0x130>)
 8002118:	687a      	ldr	r2, [r7, #4]
 800211a:	4613      	mov	r3, r2
 800211c:	005b      	lsls	r3, r3, #1
 800211e:	4413      	add	r3, r2
 8002120:	009b      	lsls	r3, r3, #2
 8002122:	440b      	add	r3, r1
 8002124:	3308      	adds	r3, #8
 8002126:	2200      	movs	r2, #0
 8002128:	601a      	str	r2, [r3, #0]
			ILI9341_DrawRectangle(bullets[i].x, bullets[i].y,
 800212a:	491f      	ldr	r1, [pc, #124]	@ (80021a8 <check_bullet_boss_collision+0x130>)
 800212c:	687a      	ldr	r2, [r7, #4]
 800212e:	4613      	mov	r3, r2
 8002130:	005b      	lsls	r3, r3, #1
 8002132:	4413      	add	r3, r2
 8002134:	009b      	lsls	r3, r3, #2
 8002136:	440b      	add	r3, r1
 8002138:	681b      	ldr	r3, [r3, #0]
 800213a:	b298      	uxth	r0, r3
 800213c:	491a      	ldr	r1, [pc, #104]	@ (80021a8 <check_bullet_boss_collision+0x130>)
 800213e:	687a      	ldr	r2, [r7, #4]
 8002140:	4613      	mov	r3, r2
 8002142:	005b      	lsls	r3, r3, #1
 8002144:	4413      	add	r3, r2
 8002146:	009b      	lsls	r3, r3, #2
 8002148:	440b      	add	r3, r1
 800214a:	3304      	adds	r3, #4
 800214c:	681b      	ldr	r3, [r3, #0]
 800214e:	b299      	uxth	r1, r3
 8002150:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002154:	9300      	str	r3, [sp, #0]
 8002156:	2304      	movs	r3, #4
 8002158:	2208      	movs	r2, #8
 800215a:	f7fe ffcb 	bl	80010f4 <ILI9341_DrawRectangle>
			BULLET_HEIGHT, BULLET_WIDTH, WHITE);

			boss.hp--;
 800215e:	4b11      	ldr	r3, [pc, #68]	@ (80021a4 <check_bullet_boss_collision+0x12c>)
 8002160:	689b      	ldr	r3, [r3, #8]
 8002162:	3b01      	subs	r3, #1
 8002164:	4a0f      	ldr	r2, [pc, #60]	@ (80021a4 <check_bullet_boss_collision+0x12c>)
 8002166:	6093      	str	r3, [r2, #8]
			if (boss.hp <= 0) {
 8002168:	4b0e      	ldr	r3, [pc, #56]	@ (80021a4 <check_bullet_boss_collision+0x12c>)
 800216a:	689b      	ldr	r3, [r3, #8]
 800216c:	2b00      	cmp	r3, #0
 800216e:	dc0d      	bgt.n	800218c <check_bullet_boss_collision+0x114>
				erase_boss(boss.x, boss.y);
 8002170:	4b0c      	ldr	r3, [pc, #48]	@ (80021a4 <check_bullet_boss_collision+0x12c>)
 8002172:	681b      	ldr	r3, [r3, #0]
 8002174:	4a0b      	ldr	r2, [pc, #44]	@ (80021a4 <check_bullet_boss_collision+0x12c>)
 8002176:	6852      	ldr	r2, [r2, #4]
 8002178:	4611      	mov	r1, r2
 800217a:	4618      	mov	r0, r3
 800217c:	f7ff fade 	bl	800173c <erase_boss>
				boss.active = 0;
 8002180:	4b08      	ldr	r3, [pc, #32]	@ (80021a4 <check_bullet_boss_collision+0x12c>)
 8002182:	2200      	movs	r2, #0
 8002184:	60da      	str	r2, [r3, #12]
				return 1;
 8002186:	2301      	movs	r3, #1
 8002188:	e008      	b.n	800219c <check_bullet_boss_collision+0x124>
			continue;
 800218a:	bf00      	nop
	for (int i = 0; i < MAX_BULLETS; i++) {
 800218c:	687b      	ldr	r3, [r7, #4]
 800218e:	3301      	adds	r3, #1
 8002190:	607b      	str	r3, [r7, #4]
 8002192:	687b      	ldr	r3, [r7, #4]
 8002194:	2b04      	cmp	r3, #4
 8002196:	f77f af7b 	ble.w	8002090 <check_bullet_boss_collision+0x18>
			}
		}
	}
	return 0;
 800219a:	2300      	movs	r3, #0
}
 800219c:	4618      	mov	r0, r3
 800219e:	3708      	adds	r7, #8
 80021a0:	46bd      	mov	sp, r7
 80021a2:	bd80      	pop	{r7, pc}
 80021a4:	20000264 	.word	0x20000264
 80021a8:	20000228 	.word	0x20000228

080021ac <show_victory_screen>:

void show_victory_screen() { //màn hình chiến thắng
 80021ac:	b580      	push	{r7, lr}
 80021ae:	b084      	sub	sp, #16
 80021b0:	af02      	add	r7, sp, #8
	ILI9341_FillScreen(BLACK);
 80021b2:	2000      	movs	r0, #0
 80021b4:	f7fe ff12 	bl	8000fdc <ILI9341_FillScreen>

// Hiệu ứng "pháo hoa" đơn giản
	for (int r = 0; r < 60; r += 4) {
 80021b8:	2300      	movs	r3, #0
 80021ba:	607b      	str	r3, [r7, #4]
 80021bc:	e01d      	b.n	80021fa <show_victory_screen+0x4e>
		ILI9341_DrawHollowCircle(80, 80, r, YELLOW);
 80021be:	687b      	ldr	r3, [r7, #4]
 80021c0:	b29a      	uxth	r2, r3
 80021c2:	f64f 73e0 	movw	r3, #65504	@ 0xffe0
 80021c6:	2150      	movs	r1, #80	@ 0x50
 80021c8:	2050      	movs	r0, #80	@ 0x50
 80021ca:	f7fe f9f7 	bl	80005bc <ILI9341_DrawHollowCircle>
		ILI9341_DrawHollowCircle(240, 100, r, GREEN);
 80021ce:	687b      	ldr	r3, [r7, #4]
 80021d0:	b29a      	uxth	r2, r3
 80021d2:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 80021d6:	2164      	movs	r1, #100	@ 0x64
 80021d8:	20f0      	movs	r0, #240	@ 0xf0
 80021da:	f7fe f9ef 	bl	80005bc <ILI9341_DrawHollowCircle>
		ILI9341_DrawHollowCircle(160, 160, r, RED);
 80021de:	687b      	ldr	r3, [r7, #4]
 80021e0:	b29a      	uxth	r2, r3
 80021e2:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 80021e6:	21a0      	movs	r1, #160	@ 0xa0
 80021e8:	20a0      	movs	r0, #160	@ 0xa0
 80021ea:	f7fe f9e7 	bl	80005bc <ILI9341_DrawHollowCircle>
		HAL_Delay(30);
 80021ee:	201e      	movs	r0, #30
 80021f0:	f001 f92a 	bl	8003448 <HAL_Delay>
	for (int r = 0; r < 60; r += 4) {
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	3304      	adds	r3, #4
 80021f8:	607b      	str	r3, [r7, #4]
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	2b3b      	cmp	r3, #59	@ 0x3b
 80021fe:	ddde      	ble.n	80021be <show_victory_screen+0x12>
	}

// Tiêu đề chiến thắng
	ILI9341_DrawText("YOU WIN!", FONT3, 90, 100, GREEN, BLACK);
 8002200:	2300      	movs	r3, #0
 8002202:	9301      	str	r3, [sp, #4]
 8002204:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 8002208:	9300      	str	r3, [sp, #0]
 800220a:	2364      	movs	r3, #100	@ 0x64
 800220c:	225a      	movs	r2, #90	@ 0x5a
 800220e:	490f      	ldr	r1, [pc, #60]	@ (800224c <show_victory_screen+0xa0>)
 8002210:	480f      	ldr	r0, [pc, #60]	@ (8002250 <show_victory_screen+0xa4>)
 8002212:	f7fe fb89 	bl	8000928 <ILI9341_DrawText>
	ILI9341_DrawText("Congratulations", FONT3, 60, 160, WHITE, BLACK);
 8002216:	2300      	movs	r3, #0
 8002218:	9301      	str	r3, [sp, #4]
 800221a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800221e:	9300      	str	r3, [sp, #0]
 8002220:	23a0      	movs	r3, #160	@ 0xa0
 8002222:	223c      	movs	r2, #60	@ 0x3c
 8002224:	4909      	ldr	r1, [pc, #36]	@ (800224c <show_victory_screen+0xa0>)
 8002226:	480b      	ldr	r0, [pc, #44]	@ (8002254 <show_victory_screen+0xa8>)
 8002228:	f7fe fb7e 	bl	8000928 <ILI9341_DrawText>
	ILI9341_DrawText("Press RESET to play again", FONT2, 30, 270, CYAN, BLACK);
 800222c:	2300      	movs	r3, #0
 800222e:	9301      	str	r3, [sp, #4]
 8002230:	f240 73ff 	movw	r3, #2047	@ 0x7ff
 8002234:	9300      	str	r3, [sp, #0]
 8002236:	f44f 7387 	mov.w	r3, #270	@ 0x10e
 800223a:	221e      	movs	r2, #30
 800223c:	4906      	ldr	r1, [pc, #24]	@ (8002258 <show_victory_screen+0xac>)
 800223e:	4807      	ldr	r0, [pc, #28]	@ (800225c <show_victory_screen+0xb0>)
 8002240:	f7fe fb72 	bl	8000928 <ILI9341_DrawText>
}
 8002244:	bf00      	nop
 8002246:	3708      	adds	r7, #8
 8002248:	46bd      	mov	sp, r7
 800224a:	bd80      	pop	{r7, pc}
 800224c:	08007b48 	.word	0x08007b48
 8002250:	08006c84 	.word	0x08006c84
 8002254:	08006c90 	.word	0x08006c90
 8002258:	08007364 	.word	0x08007364
 800225c:	08006ca0 	.word	0x08006ca0

08002260 <show_game_over_screen>:

void show_game_over_screen() {
 8002260:	b580      	push	{r7, lr}
 8002262:	b084      	sub	sp, #16
 8002264:	af02      	add	r7, sp, #8
	ILI9341_FillScreen(BLACK);
 8002266:	2000      	movs	r0, #0
 8002268:	f7fe feb8 	bl	8000fdc <ILI9341_FillScreen>

	ILI9341_DrawText("GAME OVER", FONT3, 80, 80, RED, BLACK);
 800226c:	2300      	movs	r3, #0
 800226e:	9301      	str	r3, [sp, #4]
 8002270:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8002274:	9300      	str	r3, [sp, #0]
 8002276:	2350      	movs	r3, #80	@ 0x50
 8002278:	2250      	movs	r2, #80	@ 0x50
 800227a:	4919      	ldr	r1, [pc, #100]	@ (80022e0 <show_game_over_screen+0x80>)
 800227c:	4819      	ldr	r0, [pc, #100]	@ (80022e4 <show_game_over_screen+0x84>)
 800227e:	f7fe fb53 	bl	8000928 <ILI9341_DrawText>
	ILI9341_DrawText("Thanks for playing!", FONT3, 60, 140, WHITE, BLACK);
 8002282:	2300      	movs	r3, #0
 8002284:	9301      	str	r3, [sp, #4]
 8002286:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800228a:	9300      	str	r3, [sp, #0]
 800228c:	238c      	movs	r3, #140	@ 0x8c
 800228e:	223c      	movs	r2, #60	@ 0x3c
 8002290:	4913      	ldr	r1, [pc, #76]	@ (80022e0 <show_game_over_screen+0x80>)
 8002292:	4815      	ldr	r0, [pc, #84]	@ (80022e8 <show_game_over_screen+0x88>)
 8002294:	f7fe fb48 	bl	8000928 <ILI9341_DrawText>

	for (int r = 0; r < 50; r += 5) {
 8002298:	2300      	movs	r3, #0
 800229a:	607b      	str	r3, [r7, #4]
 800229c:	e00d      	b.n	80022ba <show_game_over_screen+0x5a>
		ILI9341_DrawFilledCircle(160, 240, r, YELLOW);
 800229e:	687b      	ldr	r3, [r7, #4]
 80022a0:	b29a      	uxth	r2, r3
 80022a2:	f64f 73e0 	movw	r3, #65504	@ 0xffe0
 80022a6:	21f0      	movs	r1, #240	@ 0xf0
 80022a8:	20a0      	movs	r0, #160	@ 0xa0
 80022aa:	f7fe fa3d 	bl	8000728 <ILI9341_DrawFilledCircle>
		HAL_Delay(30);
 80022ae:	201e      	movs	r0, #30
 80022b0:	f001 f8ca 	bl	8003448 <HAL_Delay>
	for (int r = 0; r < 50; r += 5) {
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	3305      	adds	r3, #5
 80022b8:	607b      	str	r3, [r7, #4]
 80022ba:	687b      	ldr	r3, [r7, #4]
 80022bc:	2b31      	cmp	r3, #49	@ 0x31
 80022be:	ddee      	ble.n	800229e <show_game_over_screen+0x3e>
	}

	ILI9341_DrawText("Press RESET to play again", FONT2, 40, 270, BLUE, BLACK);
 80022c0:	2300      	movs	r3, #0
 80022c2:	9301      	str	r3, [sp, #4]
 80022c4:	231f      	movs	r3, #31
 80022c6:	9300      	str	r3, [sp, #0]
 80022c8:	f44f 7387 	mov.w	r3, #270	@ 0x10e
 80022cc:	2228      	movs	r2, #40	@ 0x28
 80022ce:	4907      	ldr	r1, [pc, #28]	@ (80022ec <show_game_over_screen+0x8c>)
 80022d0:	4807      	ldr	r0, [pc, #28]	@ (80022f0 <show_game_over_screen+0x90>)
 80022d2:	f7fe fb29 	bl	8000928 <ILI9341_DrawText>
}
 80022d6:	bf00      	nop
 80022d8:	3708      	adds	r7, #8
 80022da:	46bd      	mov	sp, r7
 80022dc:	bd80      	pop	{r7, pc}
 80022de:	bf00      	nop
 80022e0:	08007b48 	.word	0x08007b48
 80022e4:	08006cbc 	.word	0x08006cbc
 80022e8:	08006cc8 	.word	0x08006cc8
 80022ec:	08007364 	.word	0x08007364
 80022f0:	08006ca0 	.word	0x08006ca0

080022f4 <draw_bullet>:
//				; // Dừng game tại đây
//		}
//	}
//}

void draw_bullet(Bullet *b) {
 80022f4:	b580      	push	{r7, lr}
 80022f6:	b084      	sub	sp, #16
 80022f8:	af02      	add	r7, sp, #8
 80022fa:	6078      	str	r0, [r7, #4]
	ILI9341_DrawRectangle(b->x, b->y, BULLET_HEIGHT, BULLET_WIDTH, RED);
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	681b      	ldr	r3, [r3, #0]
 8002300:	b298      	uxth	r0, r3
 8002302:	687b      	ldr	r3, [r7, #4]
 8002304:	685b      	ldr	r3, [r3, #4]
 8002306:	b299      	uxth	r1, r3
 8002308:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 800230c:	9300      	str	r3, [sp, #0]
 800230e:	2304      	movs	r3, #4
 8002310:	2208      	movs	r2, #8
 8002312:	f7fe feef 	bl	80010f4 <ILI9341_DrawRectangle>
}
 8002316:	bf00      	nop
 8002318:	3708      	adds	r7, #8
 800231a:	46bd      	mov	sp, r7
 800231c:	bd80      	pop	{r7, pc}

0800231e <erase_bullet>:

void erase_bullet(Bullet *b) {
 800231e:	b580      	push	{r7, lr}
 8002320:	b084      	sub	sp, #16
 8002322:	af02      	add	r7, sp, #8
 8002324:	6078      	str	r0, [r7, #4]
	ILI9341_DrawRectangle(b->x, b->y, BULLET_HEIGHT, BULLET_WIDTH, WHITE);
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	681b      	ldr	r3, [r3, #0]
 800232a:	b298      	uxth	r0, r3
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	685b      	ldr	r3, [r3, #4]
 8002330:	b299      	uxth	r1, r3
 8002332:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002336:	9300      	str	r3, [sp, #0]
 8002338:	2304      	movs	r3, #4
 800233a:	2208      	movs	r2, #8
 800233c:	f7fe feda 	bl	80010f4 <ILI9341_DrawRectangle>
}
 8002340:	bf00      	nop
 8002342:	3708      	adds	r7, #8
 8002344:	46bd      	mov	sp, r7
 8002346:	bd80      	pop	{r7, pc}

08002348 <shoot_bullet>:

void shoot_bullet() {
 8002348:	b480      	push	{r7}
 800234a:	b083      	sub	sp, #12
 800234c:	af00      	add	r7, sp, #0
	//hàm khởi tạo đạn của máy bay
	for (int i = 0; i < MAX_BULLETS; i++) {
 800234e:	2300      	movs	r3, #0
 8002350:	607b      	str	r3, [r7, #4]
 8002352:	e02f      	b.n	80023b4 <shoot_bullet+0x6c>
		if (!bullets[i].active) {
 8002354:	491c      	ldr	r1, [pc, #112]	@ (80023c8 <shoot_bullet+0x80>)
 8002356:	687a      	ldr	r2, [r7, #4]
 8002358:	4613      	mov	r3, r2
 800235a:	005b      	lsls	r3, r3, #1
 800235c:	4413      	add	r3, r2
 800235e:	009b      	lsls	r3, r3, #2
 8002360:	440b      	add	r3, r1
 8002362:	3308      	adds	r3, #8
 8002364:	681b      	ldr	r3, [r3, #0]
 8002366:	2b00      	cmp	r3, #0
 8002368:	d121      	bne.n	80023ae <shoot_bullet+0x66>
			bullets[i].x = plane_x + PLANE_WIDTH;
 800236a:	4b18      	ldr	r3, [pc, #96]	@ (80023cc <shoot_bullet+0x84>)
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	f103 0114 	add.w	r1, r3, #20
 8002372:	4815      	ldr	r0, [pc, #84]	@ (80023c8 <shoot_bullet+0x80>)
 8002374:	687a      	ldr	r2, [r7, #4]
 8002376:	4613      	mov	r3, r2
 8002378:	005b      	lsls	r3, r3, #1
 800237a:	4413      	add	r3, r2
 800237c:	009b      	lsls	r3, r3, #2
 800237e:	4403      	add	r3, r0
 8002380:	6019      	str	r1, [r3, #0]
			bullets[i].y = plane_y;
 8002382:	4b13      	ldr	r3, [pc, #76]	@ (80023d0 <shoot_bullet+0x88>)
 8002384:	6819      	ldr	r1, [r3, #0]
 8002386:	4810      	ldr	r0, [pc, #64]	@ (80023c8 <shoot_bullet+0x80>)
 8002388:	687a      	ldr	r2, [r7, #4]
 800238a:	4613      	mov	r3, r2
 800238c:	005b      	lsls	r3, r3, #1
 800238e:	4413      	add	r3, r2
 8002390:	009b      	lsls	r3, r3, #2
 8002392:	4403      	add	r3, r0
 8002394:	3304      	adds	r3, #4
 8002396:	6019      	str	r1, [r3, #0]
			bullets[i].active = 1;
 8002398:	490b      	ldr	r1, [pc, #44]	@ (80023c8 <shoot_bullet+0x80>)
 800239a:	687a      	ldr	r2, [r7, #4]
 800239c:	4613      	mov	r3, r2
 800239e:	005b      	lsls	r3, r3, #1
 80023a0:	4413      	add	r3, r2
 80023a2:	009b      	lsls	r3, r3, #2
 80023a4:	440b      	add	r3, r1
 80023a6:	3308      	adds	r3, #8
 80023a8:	2201      	movs	r2, #1
 80023aa:	601a      	str	r2, [r3, #0]
			break;
 80023ac:	e006      	b.n	80023bc <shoot_bullet+0x74>
	for (int i = 0; i < MAX_BULLETS; i++) {
 80023ae:	687b      	ldr	r3, [r7, #4]
 80023b0:	3301      	adds	r3, #1
 80023b2:	607b      	str	r3, [r7, #4]
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	2b04      	cmp	r3, #4
 80023b8:	ddcc      	ble.n	8002354 <shoot_bullet+0xc>
		}
	}
}
 80023ba:	bf00      	nop
 80023bc:	bf00      	nop
 80023be:	370c      	adds	r7, #12
 80023c0:	46bd      	mov	sp, r7
 80023c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023c6:	4770      	bx	lr
 80023c8:	20000228 	.word	0x20000228
 80023cc:	20000004 	.word	0x20000004
 80023d0:	20000008 	.word	0x20000008

080023d4 <update_bullets>:

void update_bullets() {
 80023d4:	b580      	push	{r7, lr}
 80023d6:	b082      	sub	sp, #8
 80023d8:	af00      	add	r7, sp, #0
	//hàm cập nhật tình trạng đạn, nếu viên đạn active thì sẽ di chuyển lên
	for (int i = 0; i < MAX_BULLETS; i++) {
 80023da:	2300      	movs	r3, #0
 80023dc:	607b      	str	r3, [r7, #4]
 80023de:	e048      	b.n	8002472 <update_bullets+0x9e>
		if (bullets[i].active) {
 80023e0:	4928      	ldr	r1, [pc, #160]	@ (8002484 <update_bullets+0xb0>)
 80023e2:	687a      	ldr	r2, [r7, #4]
 80023e4:	4613      	mov	r3, r2
 80023e6:	005b      	lsls	r3, r3, #1
 80023e8:	4413      	add	r3, r2
 80023ea:	009b      	lsls	r3, r3, #2
 80023ec:	440b      	add	r3, r1
 80023ee:	3308      	adds	r3, #8
 80023f0:	681b      	ldr	r3, [r3, #0]
 80023f2:	2b00      	cmp	r3, #0
 80023f4:	d03a      	beq.n	800246c <update_bullets+0x98>
			erase_bullet(&bullets[i]);
 80023f6:	687a      	ldr	r2, [r7, #4]
 80023f8:	4613      	mov	r3, r2
 80023fa:	005b      	lsls	r3, r3, #1
 80023fc:	4413      	add	r3, r2
 80023fe:	009b      	lsls	r3, r3, #2
 8002400:	4a20      	ldr	r2, [pc, #128]	@ (8002484 <update_bullets+0xb0>)
 8002402:	4413      	add	r3, r2
 8002404:	4618      	mov	r0, r3
 8002406:	f7ff ff8a 	bl	800231e <erase_bullet>
			bullets[i].x += 5;
 800240a:	491e      	ldr	r1, [pc, #120]	@ (8002484 <update_bullets+0xb0>)
 800240c:	687a      	ldr	r2, [r7, #4]
 800240e:	4613      	mov	r3, r2
 8002410:	005b      	lsls	r3, r3, #1
 8002412:	4413      	add	r3, r2
 8002414:	009b      	lsls	r3, r3, #2
 8002416:	440b      	add	r3, r1
 8002418:	681b      	ldr	r3, [r3, #0]
 800241a:	1d59      	adds	r1, r3, #5
 800241c:	4819      	ldr	r0, [pc, #100]	@ (8002484 <update_bullets+0xb0>)
 800241e:	687a      	ldr	r2, [r7, #4]
 8002420:	4613      	mov	r3, r2
 8002422:	005b      	lsls	r3, r3, #1
 8002424:	4413      	add	r3, r2
 8002426:	009b      	lsls	r3, r3, #2
 8002428:	4403      	add	r3, r0
 800242a:	6019      	str	r1, [r3, #0]
			if (bullets[i].x >= 320) {
 800242c:	4915      	ldr	r1, [pc, #84]	@ (8002484 <update_bullets+0xb0>)
 800242e:	687a      	ldr	r2, [r7, #4]
 8002430:	4613      	mov	r3, r2
 8002432:	005b      	lsls	r3, r3, #1
 8002434:	4413      	add	r3, r2
 8002436:	009b      	lsls	r3, r3, #2
 8002438:	440b      	add	r3, r1
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 8002440:	db0a      	blt.n	8002458 <update_bullets+0x84>
				bullets[i].active = 0;
 8002442:	4910      	ldr	r1, [pc, #64]	@ (8002484 <update_bullets+0xb0>)
 8002444:	687a      	ldr	r2, [r7, #4]
 8002446:	4613      	mov	r3, r2
 8002448:	005b      	lsls	r3, r3, #1
 800244a:	4413      	add	r3, r2
 800244c:	009b      	lsls	r3, r3, #2
 800244e:	440b      	add	r3, r1
 8002450:	3308      	adds	r3, #8
 8002452:	2200      	movs	r2, #0
 8002454:	601a      	str	r2, [r3, #0]
 8002456:	e009      	b.n	800246c <update_bullets+0x98>
			} else {
				draw_bullet(&bullets[i]);
 8002458:	687a      	ldr	r2, [r7, #4]
 800245a:	4613      	mov	r3, r2
 800245c:	005b      	lsls	r3, r3, #1
 800245e:	4413      	add	r3, r2
 8002460:	009b      	lsls	r3, r3, #2
 8002462:	4a08      	ldr	r2, [pc, #32]	@ (8002484 <update_bullets+0xb0>)
 8002464:	4413      	add	r3, r2
 8002466:	4618      	mov	r0, r3
 8002468:	f7ff ff44 	bl	80022f4 <draw_bullet>
	for (int i = 0; i < MAX_BULLETS; i++) {
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	3301      	adds	r3, #1
 8002470:	607b      	str	r3, [r7, #4]
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	2b04      	cmp	r3, #4
 8002476:	ddb3      	ble.n	80023e0 <update_bullets+0xc>
			}
		}
	}
}
 8002478:	bf00      	nop
 800247a:	bf00      	nop
 800247c:	3708      	adds	r7, #8
 800247e:	46bd      	mov	sp, r7
 8002480:	bd80      	pop	{r7, pc}
 8002482:	bf00      	nop
 8002484:	20000228 	.word	0x20000228

08002488 <draw_score>:

void draw_score(int point) {
 8002488:	b580      	push	{r7, lr}
 800248a:	b08a      	sub	sp, #40	@ 0x28
 800248c:	af02      	add	r7, sp, #8
 800248e:	6078      	str	r0, [r7, #4]
	char buffer[20];
	sprintf(buffer, "Score: %d", point);
 8002490:	f107 030c 	add.w	r3, r7, #12
 8002494:	687a      	ldr	r2, [r7, #4]
 8002496:	490e      	ldr	r1, [pc, #56]	@ (80024d0 <draw_score+0x48>)
 8002498:	4618      	mov	r0, r3
 800249a:	f003 fafd 	bl	8005a98 <siprintf>

	// Xóa vùng cũ (giả sử vùng rộng 120px, cao 18px)
	ILI9341_DrawRectangle(0, 0, 120, 18, WHITE);
 800249e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80024a2:	9300      	str	r3, [sp, #0]
 80024a4:	2312      	movs	r3, #18
 80024a6:	2278      	movs	r2, #120	@ 0x78
 80024a8:	2100      	movs	r1, #0
 80024aa:	2000      	movs	r0, #0
 80024ac:	f7fe fe22 	bl	80010f4 <ILI9341_DrawRectangle>

	// Vẽ chuỗi mới (x=0, y=0), dùng font 11x18
	ILI9341_DrawText(buffer, Arial_Narrow8x12, 0, 0, BLACK, WHITE);
 80024b0:	f107 000c 	add.w	r0, r7, #12
 80024b4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80024b8:	9301      	str	r3, [sp, #4]
 80024ba:	2300      	movs	r3, #0
 80024bc:	9300      	str	r3, [sp, #0]
 80024be:	2300      	movs	r3, #0
 80024c0:	2200      	movs	r2, #0
 80024c2:	4904      	ldr	r1, [pc, #16]	@ (80024d4 <draw_score+0x4c>)
 80024c4:	f7fe fa30 	bl	8000928 <ILI9341_DrawText>
}
 80024c8:	bf00      	nop
 80024ca:	3720      	adds	r7, #32
 80024cc:	46bd      	mov	sp, r7
 80024ce:	bd80      	pop	{r7, pc}
 80024d0:	08006cdc 	.word	0x08006cdc
 80024d4:	08006d00 	.word	0x08006d00

080024d8 <check_bullet_enemy_collision>:

void check_bullet_enemy_collision() { //hàm check máy bay địch chạm đạn
 80024d8:	b580      	push	{r7, lr}
 80024da:	b082      	sub	sp, #8
 80024dc:	af00      	add	r7, sp, #0
	for (int i = 0; i < MAX_BULLETS; i++) {
 80024de:	2300      	movs	r3, #0
 80024e0:	607b      	str	r3, [r7, #4]
 80024e2:	e0df      	b.n	80026a4 <check_bullet_enemy_collision+0x1cc>
		if (!bullets[i].active)
 80024e4:	4974      	ldr	r1, [pc, #464]	@ (80026b8 <check_bullet_enemy_collision+0x1e0>)
 80024e6:	687a      	ldr	r2, [r7, #4]
 80024e8:	4613      	mov	r3, r2
 80024ea:	005b      	lsls	r3, r3, #1
 80024ec:	4413      	add	r3, r2
 80024ee:	009b      	lsls	r3, r3, #2
 80024f0:	440b      	add	r3, r1
 80024f2:	3308      	adds	r3, #8
 80024f4:	681b      	ldr	r3, [r3, #0]
 80024f6:	2b00      	cmp	r3, #0
 80024f8:	f000 80d0 	beq.w	800269c <check_bullet_enemy_collision+0x1c4>
			continue;
		for (int j = 0; j < current_enemy_count; j++) {
 80024fc:	2300      	movs	r3, #0
 80024fe:	603b      	str	r3, [r7, #0]
 8002500:	e0c5      	b.n	800268e <check_bullet_enemy_collision+0x1b6>
			if (!enemies[j].active)
 8002502:	496e      	ldr	r1, [pc, #440]	@ (80026bc <check_bullet_enemy_collision+0x1e4>)
 8002504:	683a      	ldr	r2, [r7, #0]
 8002506:	4613      	mov	r3, r2
 8002508:	005b      	lsls	r3, r3, #1
 800250a:	4413      	add	r3, r2
 800250c:	009b      	lsls	r3, r3, #2
 800250e:	440b      	add	r3, r1
 8002510:	3308      	adds	r3, #8
 8002512:	681b      	ldr	r3, [r3, #0]
 8002514:	2b00      	cmp	r3, #0
 8002516:	f000 80b6 	beq.w	8002686 <check_bullet_enemy_collision+0x1ae>
				continue;

			// Kiểm tra va chạm hình chữ nhật
			if (bullets[i].x + BULLET_HEIGHT > enemies[j].x&&
 800251a:	4967      	ldr	r1, [pc, #412]	@ (80026b8 <check_bullet_enemy_collision+0x1e0>)
 800251c:	687a      	ldr	r2, [r7, #4]
 800251e:	4613      	mov	r3, r2
 8002520:	005b      	lsls	r3, r3, #1
 8002522:	4413      	add	r3, r2
 8002524:	009b      	lsls	r3, r3, #2
 8002526:	440b      	add	r3, r1
 8002528:	681b      	ldr	r3, [r3, #0]
 800252a:	1dd9      	adds	r1, r3, #7
 800252c:	4863      	ldr	r0, [pc, #396]	@ (80026bc <check_bullet_enemy_collision+0x1e4>)
 800252e:	683a      	ldr	r2, [r7, #0]
 8002530:	4613      	mov	r3, r2
 8002532:	005b      	lsls	r3, r3, #1
 8002534:	4413      	add	r3, r2
 8002536:	009b      	lsls	r3, r3, #2
 8002538:	4403      	add	r3, r0
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	4299      	cmp	r1, r3
 800253e:	f2c0 80a3 	blt.w	8002688 <check_bullet_enemy_collision+0x1b0>
			bullets[i].x < enemies[j].x + PLANE_WIDTH &&
 8002542:	495e      	ldr	r1, [pc, #376]	@ (80026bc <check_bullet_enemy_collision+0x1e4>)
 8002544:	683a      	ldr	r2, [r7, #0]
 8002546:	4613      	mov	r3, r2
 8002548:	005b      	lsls	r3, r3, #1
 800254a:	4413      	add	r3, r2
 800254c:	009b      	lsls	r3, r3, #2
 800254e:	440b      	add	r3, r1
 8002550:	681b      	ldr	r3, [r3, #0]
 8002552:	f103 0113 	add.w	r1, r3, #19
 8002556:	4858      	ldr	r0, [pc, #352]	@ (80026b8 <check_bullet_enemy_collision+0x1e0>)
 8002558:	687a      	ldr	r2, [r7, #4]
 800255a:	4613      	mov	r3, r2
 800255c:	005b      	lsls	r3, r3, #1
 800255e:	4413      	add	r3, r2
 8002560:	009b      	lsls	r3, r3, #2
 8002562:	4403      	add	r3, r0
 8002564:	681b      	ldr	r3, [r3, #0]
			if (bullets[i].x + BULLET_HEIGHT > enemies[j].x&&
 8002566:	4299      	cmp	r1, r3
 8002568:	f2c0 808e 	blt.w	8002688 <check_bullet_enemy_collision+0x1b0>
			bullets[i].y + BULLET_WIDTH > enemies[j].y &&
 800256c:	4952      	ldr	r1, [pc, #328]	@ (80026b8 <check_bullet_enemy_collision+0x1e0>)
 800256e:	687a      	ldr	r2, [r7, #4]
 8002570:	4613      	mov	r3, r2
 8002572:	005b      	lsls	r3, r3, #1
 8002574:	4413      	add	r3, r2
 8002576:	009b      	lsls	r3, r3, #2
 8002578:	440b      	add	r3, r1
 800257a:	3304      	adds	r3, #4
 800257c:	681b      	ldr	r3, [r3, #0]
 800257e:	1cd9      	adds	r1, r3, #3
 8002580:	484e      	ldr	r0, [pc, #312]	@ (80026bc <check_bullet_enemy_collision+0x1e4>)
 8002582:	683a      	ldr	r2, [r7, #0]
 8002584:	4613      	mov	r3, r2
 8002586:	005b      	lsls	r3, r3, #1
 8002588:	4413      	add	r3, r2
 800258a:	009b      	lsls	r3, r3, #2
 800258c:	4403      	add	r3, r0
 800258e:	3304      	adds	r3, #4
 8002590:	681b      	ldr	r3, [r3, #0]
			bullets[i].x < enemies[j].x + PLANE_WIDTH &&
 8002592:	4299      	cmp	r1, r3
 8002594:	db78      	blt.n	8002688 <check_bullet_enemy_collision+0x1b0>
			bullets[i].y < enemies[j].y + PLANE_HEIGHT) {
 8002596:	4949      	ldr	r1, [pc, #292]	@ (80026bc <check_bullet_enemy_collision+0x1e4>)
 8002598:	683a      	ldr	r2, [r7, #0]
 800259a:	4613      	mov	r3, r2
 800259c:	005b      	lsls	r3, r3, #1
 800259e:	4413      	add	r3, r2
 80025a0:	009b      	lsls	r3, r3, #2
 80025a2:	440b      	add	r3, r1
 80025a4:	3304      	adds	r3, #4
 80025a6:	681b      	ldr	r3, [r3, #0]
 80025a8:	f103 0113 	add.w	r1, r3, #19
 80025ac:	4842      	ldr	r0, [pc, #264]	@ (80026b8 <check_bullet_enemy_collision+0x1e0>)
 80025ae:	687a      	ldr	r2, [r7, #4]
 80025b0:	4613      	mov	r3, r2
 80025b2:	005b      	lsls	r3, r3, #1
 80025b4:	4413      	add	r3, r2
 80025b6:	009b      	lsls	r3, r3, #2
 80025b8:	4403      	add	r3, r0
 80025ba:	3304      	adds	r3, #4
 80025bc:	681b      	ldr	r3, [r3, #0]
			bullets[i].y + BULLET_WIDTH > enemies[j].y &&
 80025be:	4299      	cmp	r1, r3
 80025c0:	db62      	blt.n	8002688 <check_bullet_enemy_collision+0x1b0>

				// Xóa máy bay địch và đạn
				erase_enemies(enemies[j].x, enemies[j].y);
 80025c2:	493e      	ldr	r1, [pc, #248]	@ (80026bc <check_bullet_enemy_collision+0x1e4>)
 80025c4:	683a      	ldr	r2, [r7, #0]
 80025c6:	4613      	mov	r3, r2
 80025c8:	005b      	lsls	r3, r3, #1
 80025ca:	4413      	add	r3, r2
 80025cc:	009b      	lsls	r3, r3, #2
 80025ce:	440b      	add	r3, r1
 80025d0:	6818      	ldr	r0, [r3, #0]
 80025d2:	493a      	ldr	r1, [pc, #232]	@ (80026bc <check_bullet_enemy_collision+0x1e4>)
 80025d4:	683a      	ldr	r2, [r7, #0]
 80025d6:	4613      	mov	r3, r2
 80025d8:	005b      	lsls	r3, r3, #1
 80025da:	4413      	add	r3, r2
 80025dc:	009b      	lsls	r3, r3, #2
 80025de:	440b      	add	r3, r1
 80025e0:	3304      	adds	r3, #4
 80025e2:	681b      	ldr	r3, [r3, #0]
 80025e4:	4619      	mov	r1, r3
 80025e6:	f7fe ffbf 	bl	8001568 <erase_enemies>
				erase_bullet(&bullets[i]);
 80025ea:	687a      	ldr	r2, [r7, #4]
 80025ec:	4613      	mov	r3, r2
 80025ee:	005b      	lsls	r3, r3, #1
 80025f0:	4413      	add	r3, r2
 80025f2:	009b      	lsls	r3, r3, #2
 80025f4:	4a30      	ldr	r2, [pc, #192]	@ (80026b8 <check_bullet_enemy_collision+0x1e0>)
 80025f6:	4413      	add	r3, r2
 80025f8:	4618      	mov	r0, r3
 80025fa:	f7ff fe90 	bl	800231e <erase_bullet>
				bullets[i].active = 0;
 80025fe:	492e      	ldr	r1, [pc, #184]	@ (80026b8 <check_bullet_enemy_collision+0x1e0>)
 8002600:	687a      	ldr	r2, [r7, #4]
 8002602:	4613      	mov	r3, r2
 8002604:	005b      	lsls	r3, r3, #1
 8002606:	4413      	add	r3, r2
 8002608:	009b      	lsls	r3, r3, #2
 800260a:	440b      	add	r3, r1
 800260c:	3308      	adds	r3, #8
 800260e:	2200      	movs	r2, #0
 8002610:	601a      	str	r2, [r3, #0]
				enemies[j].active = 0;
 8002612:	492a      	ldr	r1, [pc, #168]	@ (80026bc <check_bullet_enemy_collision+0x1e4>)
 8002614:	683a      	ldr	r2, [r7, #0]
 8002616:	4613      	mov	r3, r2
 8002618:	005b      	lsls	r3, r3, #1
 800261a:	4413      	add	r3, r2
 800261c:	009b      	lsls	r3, r3, #2
 800261e:	440b      	add	r3, r1
 8002620:	3308      	adds	r3, #8
 8002622:	2200      	movs	r2, #0
 8002624:	601a      	str	r2, [r3, #0]

				// (Tùy chọn) Reset lại địch sau khi bị bắn( đảm bảo màn hình luốn đủ số lượng địch)
				enemies[j].x = 320;
 8002626:	4925      	ldr	r1, [pc, #148]	@ (80026bc <check_bullet_enemy_collision+0x1e4>)
 8002628:	683a      	ldr	r2, [r7, #0]
 800262a:	4613      	mov	r3, r2
 800262c:	005b      	lsls	r3, r3, #1
 800262e:	4413      	add	r3, r2
 8002630:	009b      	lsls	r3, r3, #2
 8002632:	440b      	add	r3, r1
 8002634:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002638:	601a      	str	r2, [r3, #0]
				enemies[j].y = rand() % 100; // rand chạy từ 0 -> 32767
 800263a:	f003 f92d 	bl	8005898 <rand>
 800263e:	4603      	mov	r3, r0
 8002640:	4a1f      	ldr	r2, [pc, #124]	@ (80026c0 <check_bullet_enemy_collision+0x1e8>)
 8002642:	fb82 1203 	smull	r1, r2, r2, r3
 8002646:	1151      	asrs	r1, r2, #5
 8002648:	17da      	asrs	r2, r3, #31
 800264a:	1a8a      	subs	r2, r1, r2
 800264c:	2164      	movs	r1, #100	@ 0x64
 800264e:	fb01 f202 	mul.w	r2, r1, r2
 8002652:	1a9a      	subs	r2, r3, r2
 8002654:	4819      	ldr	r0, [pc, #100]	@ (80026bc <check_bullet_enemy_collision+0x1e4>)
 8002656:	6839      	ldr	r1, [r7, #0]
 8002658:	460b      	mov	r3, r1
 800265a:	005b      	lsls	r3, r3, #1
 800265c:	440b      	add	r3, r1
 800265e:	009b      	lsls	r3, r3, #2
 8002660:	4403      	add	r3, r0
 8002662:	3304      	adds	r3, #4
 8002664:	601a      	str	r2, [r3, #0]
				enemies[j].active = 1;
 8002666:	4915      	ldr	r1, [pc, #84]	@ (80026bc <check_bullet_enemy_collision+0x1e4>)
 8002668:	683a      	ldr	r2, [r7, #0]
 800266a:	4613      	mov	r3, r2
 800266c:	005b      	lsls	r3, r3, #1
 800266e:	4413      	add	r3, r2
 8002670:	009b      	lsls	r3, r3, #2
 8002672:	440b      	add	r3, r1
 8002674:	3308      	adds	r3, #8
 8002676:	2201      	movs	r2, #1
 8002678:	601a      	str	r2, [r3, #0]

				//cộng điểm
				point += 10;
 800267a:	4b12      	ldr	r3, [pc, #72]	@ (80026c4 <check_bullet_enemy_collision+0x1ec>)
 800267c:	681b      	ldr	r3, [r3, #0]
 800267e:	330a      	adds	r3, #10
 8002680:	4a10      	ldr	r2, [pc, #64]	@ (80026c4 <check_bullet_enemy_collision+0x1ec>)
 8002682:	6013      	str	r3, [r2, #0]
 8002684:	e000      	b.n	8002688 <check_bullet_enemy_collision+0x1b0>
				continue;
 8002686:	bf00      	nop
		for (int j = 0; j < current_enemy_count; j++) {
 8002688:	683b      	ldr	r3, [r7, #0]
 800268a:	3301      	adds	r3, #1
 800268c:	603b      	str	r3, [r7, #0]
 800268e:	4b0e      	ldr	r3, [pc, #56]	@ (80026c8 <check_bullet_enemy_collision+0x1f0>)
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	683a      	ldr	r2, [r7, #0]
 8002694:	429a      	cmp	r2, r3
 8002696:	f6ff af34 	blt.w	8002502 <check_bullet_enemy_collision+0x2a>
 800269a:	e000      	b.n	800269e <check_bullet_enemy_collision+0x1c6>
			continue;
 800269c:	bf00      	nop
	for (int i = 0; i < MAX_BULLETS; i++) {
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	3301      	adds	r3, #1
 80026a2:	607b      	str	r3, [r7, #4]
 80026a4:	687b      	ldr	r3, [r7, #4]
 80026a6:	2b04      	cmp	r3, #4
 80026a8:	f77f af1c 	ble.w	80024e4 <check_bullet_enemy_collision+0xc>

			}
		}
	}
}
 80026ac:	bf00      	nop
 80026ae:	bf00      	nop
 80026b0:	3708      	adds	r7, #8
 80026b2:	46bd      	mov	sp, r7
 80026b4:	bd80      	pop	{r7, pc}
 80026b6:	bf00      	nop
 80026b8:	20000228 	.word	0x20000228
 80026bc:	20000174 	.word	0x20000174
 80026c0:	51eb851f 	.word	0x51eb851f
 80026c4:	200004dc 	.word	0x200004dc
 80026c8:	2000000c 	.word	0x2000000c

080026cc <check_collision>:

int check_collision(int x1, int y1, int w1, int h1, int x2, int y2, int w2,
		int h2)
// hàm check va chạm máy bay ta với địch
{
 80026cc:	b480      	push	{r7}
 80026ce:	b085      	sub	sp, #20
 80026d0:	af00      	add	r7, sp, #0
 80026d2:	60f8      	str	r0, [r7, #12]
 80026d4:	60b9      	str	r1, [r7, #8]
 80026d6:	607a      	str	r2, [r7, #4]
 80026d8:	603b      	str	r3, [r7, #0]
	return !(x1 + w1 <= x2 ||  // máy bay ta ở hoàn toàn ở dưới máy bay địch
 80026da:	68fa      	ldr	r2, [r7, #12]
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	4413      	add	r3, r2
 80026e0:	69ba      	ldr	r2, [r7, #24]
 80026e2:	429a      	cmp	r2, r3
 80026e4:	da1e      	bge.n	8002724 <check_collision+0x58>
			x2 + w2 <= x1 ||  // máy bay địch hoàn toàn ở dưới máy bay ta
 80026e6:	69ba      	ldr	r2, [r7, #24]
 80026e8:	6a3b      	ldr	r3, [r7, #32]
 80026ea:	4413      	add	r3, r2
	return !(x1 + w1 <= x2 ||  // máy bay ta ở hoàn toàn ở dưới máy bay địch
 80026ec:	68fa      	ldr	r2, [r7, #12]
 80026ee:	429a      	cmp	r2, r3
 80026f0:	da18      	bge.n	8002724 <check_collision+0x58>
			y1 + h1 / 2 <= y2 ||  // máy bay ta hoàn toàn bên phải máy bay đich
 80026f2:	683b      	ldr	r3, [r7, #0]
 80026f4:	0fda      	lsrs	r2, r3, #31
 80026f6:	4413      	add	r3, r2
 80026f8:	105b      	asrs	r3, r3, #1
 80026fa:	461a      	mov	r2, r3
 80026fc:	68bb      	ldr	r3, [r7, #8]
 80026fe:	4413      	add	r3, r2
			x2 + w2 <= x1 ||  // máy bay địch hoàn toàn ở dưới máy bay ta
 8002700:	69fa      	ldr	r2, [r7, #28]
 8002702:	429a      	cmp	r2, r3
 8002704:	da0e      	bge.n	8002724 <check_collision+0x58>
			y1 - h1 / 2 >= y2 + h2); // máy bay địch ở hoàn toàn bên phải máy bay ta
 8002706:	683b      	ldr	r3, [r7, #0]
 8002708:	0fda      	lsrs	r2, r3, #31
 800270a:	4413      	add	r3, r2
 800270c:	105b      	asrs	r3, r3, #1
 800270e:	425b      	negs	r3, r3
 8002710:	461a      	mov	r2, r3
 8002712:	68bb      	ldr	r3, [r7, #8]
 8002714:	441a      	add	r2, r3
 8002716:	69f9      	ldr	r1, [r7, #28]
 8002718:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800271a:	440b      	add	r3, r1
	return !(x1 + w1 <= x2 ||  // máy bay ta ở hoàn toàn ở dưới máy bay địch
 800271c:	429a      	cmp	r2, r3
 800271e:	da01      	bge.n	8002724 <check_collision+0x58>
 8002720:	2301      	movs	r3, #1
 8002722:	e000      	b.n	8002726 <check_collision+0x5a>
 8002724:	2300      	movs	r3, #0
}
 8002726:	4618      	mov	r0, r3
 8002728:	3714      	adds	r7, #20
 800272a:	46bd      	mov	sp, r7
 800272c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002730:	4770      	bx	lr
	...

08002734 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 8002734:	b5b0      	push	{r4, r5, r7, lr}
 8002736:	b09c      	sub	sp, #112	@ 0x70
 8002738:	af04      	add	r7, sp, #16
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 800273a:	f000 fe13 	bl	8003364 <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 800273e:	f000 f9ef 	bl	8002b20 <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 8002742:	f000 fadb 	bl	8002cfc <MX_GPIO_Init>
	MX_DMA_Init();
 8002746:	f000 fab9 	bl	8002cbc <MX_DMA_Init>
	MX_RTC_Init();
 800274a:	f000 fa5b 	bl	8002c04 <MX_RTC_Init>
	MX_SPI5_Init();
 800274e:	f000 fa7f 	bl	8002c50 <MX_SPI5_Init>
	/* USER CODE BEGIN 2 */
	ILI9341_Init();
 8002752:	f7fe fa4b 	bl	8000bec <ILI9341_Init>
	ILI9341_FillScreen(WHITE); //xóa màn hình cũ
 8002756:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800275a:	f7fe fc3f 	bl	8000fdc <ILI9341_FillScreen>
	ILI9341_SetRotation(SCREEN_HORIZONTAL_2); // khởi tạo trục Oxy
 800275e:	2003      	movs	r0, #3
 8002760:	f7fe fb4e 	bl	8000e00 <ILI9341_SetRotation>

	srand(time(NULL)); // lệnh này khởi tạo "seed" (hạt giống) cho bộ sinh số ngẫu nhiên rand()
 8002764:	2000      	movs	r0, #0
 8002766:	f003 fa05 	bl	8005b74 <time>
 800276a:	4602      	mov	r2, r0
 800276c:	460b      	mov	r3, r1
 800276e:	4613      	mov	r3, r2
 8002770:	4618      	mov	r0, r3
 8002772:	f003 f863 	bl	800583c <srand>
	while (1) {
		/* USER CODE END WHILE */

		/* USER CODE BEGIN 3 */
		/* Infinite loop */
		for (int i = 0; i < MAX_BULLETS; i++)
 8002776:	2300      	movs	r3, #0
 8002778:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800277a:	e00c      	b.n	8002796 <main+0x62>
			bullets[i].active = 0;
 800277c:	49a6      	ldr	r1, [pc, #664]	@ (8002a18 <main+0x2e4>)
 800277e:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8002780:	4613      	mov	r3, r2
 8002782:	005b      	lsls	r3, r3, #1
 8002784:	4413      	add	r3, r2
 8002786:	009b      	lsls	r3, r3, #2
 8002788:	440b      	add	r3, r1
 800278a:	3308      	adds	r3, #8
 800278c:	2200      	movs	r2, #0
 800278e:	601a      	str	r2, [r3, #0]
		for (int i = 0; i < MAX_BULLETS; i++)
 8002790:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8002792:	3301      	adds	r3, #1
 8002794:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8002796:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8002798:	2b04      	cmp	r3, #4
 800279a:	ddef      	ble.n	800277c <main+0x48>

		draw_plane(plane_x, plane_y);
 800279c:	4b9f      	ldr	r3, [pc, #636]	@ (8002a1c <main+0x2e8>)
 800279e:	681b      	ldr	r3, [r3, #0]
 80027a0:	4a9f      	ldr	r2, [pc, #636]	@ (8002a20 <main+0x2ec>)
 80027a2:	6812      	ldr	r2, [r2, #0]
 80027a4:	4611      	mov	r1, r2
 80027a6:	4618      	mov	r0, r3
 80027a8:	f7fe fd65 	bl	8001276 <draw_plane>
		init_enemies(); // ← Thêm dòng này
 80027ac:	f7fe fe94 	bl	80014d8 <init_enemies>
		draw_score(point);
 80027b0:	4b9c      	ldr	r3, [pc, #624]	@ (8002a24 <main+0x2f0>)
 80027b2:	681b      	ldr	r3, [r3, #0]
 80027b4:	4618      	mov	r0, r3
 80027b6:	f7ff fe67 	bl	8002488 <draw_score>

		while (1) {

			draw_score(point);
 80027ba:	4b9a      	ldr	r3, [pc, #616]	@ (8002a24 <main+0x2f0>)
 80027bc:	681b      	ldr	r3, [r3, #0]
 80027be:	4618      	mov	r0, r3
 80027c0:	f7ff fe62 	bl	8002488 <draw_score>
			update_bullets();
 80027c4:	f7ff fe06 	bl	80023d4 <update_bullets>
			if (level <= 2) {
 80027c8:	4b97      	ldr	r3, [pc, #604]	@ (8002a28 <main+0x2f4>)
 80027ca:	681b      	ldr	r3, [r3, #0]
 80027cc:	2b02      	cmp	r3, #2
 80027ce:	f300 80d4 	bgt.w	800297a <main+0x246>
				update_enemies(); // ← Thêm dòng này
 80027d2:	f7fe fedd 	bl	8001590 <update_enemies>
				for (int i = 0; i < current_enemy_count; i++) {
 80027d6:	2300      	movs	r3, #0
 80027d8:	65bb      	str	r3, [r7, #88]	@ 0x58
 80027da:	e034      	b.n	8002846 <main+0x112>
					if (enemies[i].active
 80027dc:	4993      	ldr	r1, [pc, #588]	@ (8002a2c <main+0x2f8>)
 80027de:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80027e0:	4613      	mov	r3, r2
 80027e2:	005b      	lsls	r3, r3, #1
 80027e4:	4413      	add	r3, r2
 80027e6:	009b      	lsls	r3, r3, #2
 80027e8:	440b      	add	r3, r1
 80027ea:	3308      	adds	r3, #8
 80027ec:	681b      	ldr	r3, [r3, #0]
 80027ee:	2b00      	cmp	r3, #0
 80027f0:	d026      	beq.n	8002840 <main+0x10c>
							&& check_collision(plane_x, plane_y, PLANE_WIDTH,
 80027f2:	4b8a      	ldr	r3, [pc, #552]	@ (8002a1c <main+0x2e8>)
 80027f4:	6818      	ldr	r0, [r3, #0]
 80027f6:	4b8a      	ldr	r3, [pc, #552]	@ (8002a20 <main+0x2ec>)
 80027f8:	681c      	ldr	r4, [r3, #0]
 80027fa:	498c      	ldr	r1, [pc, #560]	@ (8002a2c <main+0x2f8>)
 80027fc:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80027fe:	4613      	mov	r3, r2
 8002800:	005b      	lsls	r3, r3, #1
 8002802:	4413      	add	r3, r2
 8002804:	009b      	lsls	r3, r3, #2
 8002806:	440b      	add	r3, r1
 8002808:	6819      	ldr	r1, [r3, #0]
 800280a:	4d88      	ldr	r5, [pc, #544]	@ (8002a2c <main+0x2f8>)
 800280c:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800280e:	4613      	mov	r3, r2
 8002810:	005b      	lsls	r3, r3, #1
 8002812:	4413      	add	r3, r2
 8002814:	009b      	lsls	r3, r3, #2
 8002816:	442b      	add	r3, r5
 8002818:	3304      	adds	r3, #4
 800281a:	681b      	ldr	r3, [r3, #0]
 800281c:	2214      	movs	r2, #20
 800281e:	9203      	str	r2, [sp, #12]
 8002820:	2214      	movs	r2, #20
 8002822:	9202      	str	r2, [sp, #8]
 8002824:	9301      	str	r3, [sp, #4]
 8002826:	9100      	str	r1, [sp, #0]
 8002828:	2314      	movs	r3, #20
 800282a:	2214      	movs	r2, #20
 800282c:	4621      	mov	r1, r4
 800282e:	f7ff ff4d 	bl	80026cc <check_collision>
 8002832:	4603      	mov	r3, r0
 8002834:	2b00      	cmp	r3, #0
 8002836:	d003      	beq.n	8002840 <main+0x10c>
							PLANE_HEIGHT, enemies[i].x, enemies[i].y,
							PLANE_WIDTH, PLANE_HEIGHT)) {
						// Hiển thị "Game Over"
						show_game_over_screen();
 8002838:	f7ff fd12 	bl	8002260 <show_game_over_screen>
						while (1)
 800283c:	bf00      	nop
 800283e:	e7fd      	b.n	800283c <main+0x108>
				for (int i = 0; i < current_enemy_count; i++) {
 8002840:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8002842:	3301      	adds	r3, #1
 8002844:	65bb      	str	r3, [r7, #88]	@ 0x58
 8002846:	4b7a      	ldr	r3, [pc, #488]	@ (8002a30 <main+0x2fc>)
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800284c:	429a      	cmp	r2, r3
 800284e:	dbc5      	blt.n	80027dc <main+0xa8>
							; // Dừng game tại đây
					}
				}

				check_bullet_enemy_collision();
 8002850:	f7ff fe42 	bl	80024d8 <check_bullet_enemy_collision>
//				plane_y = (plane_y + 5) % 220;
//				erase_plane(plane_x, old_y);
//				draw_plane(plane_x, plane_y);
//				shoot_bullet();
//			}
				if (plane_move_flag) {
 8002854:	4b77      	ldr	r3, [pc, #476]	@ (8002a34 <main+0x300>)
 8002856:	681b      	ldr	r3, [r3, #0]
 8002858:	2b00      	cmp	r3, #0
 800285a:	d004      	beq.n	8002866 <main+0x132>
					plane_move_flag = 0;
 800285c:	4b75      	ldr	r3, [pc, #468]	@ (8002a34 <main+0x300>)
 800285e:	2200      	movs	r2, #0
 8002860:	601a      	str	r2, [r3, #0]
					shoot_bullet();  // chỉ bắn, không di chuyển
 8002862:	f7ff fd71 	bl	8002348 <shoot_bullet>
				}

				if (plane_move_left_flag) {
 8002866:	4b74      	ldr	r3, [pc, #464]	@ (8002a38 <main+0x304>)
 8002868:	681b      	ldr	r3, [r3, #0]
 800286a:	2b00      	cmp	r3, #0
 800286c:	d023      	beq.n	80028b6 <main+0x182>
					plane_move_left_flag = 0;
 800286e:	4b72      	ldr	r3, [pc, #456]	@ (8002a38 <main+0x304>)
 8002870:	2200      	movs	r2, #0
 8002872:	601a      	str	r2, [r3, #0]
//				int old_x = plane_x;
//				plane_x -= 5;
//				if (plane_x < 0) plane_x = 0;
//				erase_plane(old_x, plane_y);
//				draw_plane(plane_x, plane_y);
					int old_y = plane_y;
 8002874:	4b6a      	ldr	r3, [pc, #424]	@ (8002a20 <main+0x2ec>)
 8002876:	681b      	ldr	r3, [r3, #0]
 8002878:	64bb      	str	r3, [r7, #72]	@ 0x48
					plane_y = (plane_y + 10) % 220;
 800287a:	4b69      	ldr	r3, [pc, #420]	@ (8002a20 <main+0x2ec>)
 800287c:	681b      	ldr	r3, [r3, #0]
 800287e:	f103 020a 	add.w	r2, r3, #10
 8002882:	4b6e      	ldr	r3, [pc, #440]	@ (8002a3c <main+0x308>)
 8002884:	fb83 1302 	smull	r1, r3, r3, r2
 8002888:	10d9      	asrs	r1, r3, #3
 800288a:	17d3      	asrs	r3, r2, #31
 800288c:	1acb      	subs	r3, r1, r3
 800288e:	21dc      	movs	r1, #220	@ 0xdc
 8002890:	fb01 f303 	mul.w	r3, r1, r3
 8002894:	1ad3      	subs	r3, r2, r3
 8002896:	4a62      	ldr	r2, [pc, #392]	@ (8002a20 <main+0x2ec>)
 8002898:	6013      	str	r3, [r2, #0]
					erase_plane(plane_x, old_y);
 800289a:	4b60      	ldr	r3, [pc, #384]	@ (8002a1c <main+0x2e8>)
 800289c:	681b      	ldr	r3, [r3, #0]
 800289e:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 80028a0:	4618      	mov	r0, r3
 80028a2:	f7fe fd75 	bl	8001390 <erase_plane>
					draw_plane(plane_x, plane_y);
 80028a6:	4b5d      	ldr	r3, [pc, #372]	@ (8002a1c <main+0x2e8>)
 80028a8:	681b      	ldr	r3, [r3, #0]
 80028aa:	4a5d      	ldr	r2, [pc, #372]	@ (8002a20 <main+0x2ec>)
 80028ac:	6812      	ldr	r2, [r2, #0]
 80028ae:	4611      	mov	r1, r2
 80028b0:	4618      	mov	r0, r3
 80028b2:	f7fe fce0 	bl	8001276 <draw_plane>
				}

				if (plane_move_right_flag) {
 80028b6:	4b62      	ldr	r3, [pc, #392]	@ (8002a40 <main+0x30c>)
 80028b8:	681b      	ldr	r3, [r3, #0]
 80028ba:	2b00      	cmp	r3, #0
 80028bc:	d023      	beq.n	8002906 <main+0x1d2>
					plane_move_right_flag = 0;
 80028be:	4b60      	ldr	r3, [pc, #384]	@ (8002a40 <main+0x30c>)
 80028c0:	2200      	movs	r2, #0
 80028c2:	601a      	str	r2, [r3, #0]
					int old_y = plane_y;
 80028c4:	4b56      	ldr	r3, [pc, #344]	@ (8002a20 <main+0x2ec>)
 80028c6:	681b      	ldr	r3, [r3, #0]
 80028c8:	647b      	str	r3, [r7, #68]	@ 0x44
					plane_y = (plane_y - 10) % 220;
 80028ca:	4b55      	ldr	r3, [pc, #340]	@ (8002a20 <main+0x2ec>)
 80028cc:	681b      	ldr	r3, [r3, #0]
 80028ce:	f1a3 020a 	sub.w	r2, r3, #10
 80028d2:	4b5a      	ldr	r3, [pc, #360]	@ (8002a3c <main+0x308>)
 80028d4:	fb83 1302 	smull	r1, r3, r3, r2
 80028d8:	10d9      	asrs	r1, r3, #3
 80028da:	17d3      	asrs	r3, r2, #31
 80028dc:	1acb      	subs	r3, r1, r3
 80028de:	21dc      	movs	r1, #220	@ 0xdc
 80028e0:	fb01 f303 	mul.w	r3, r1, r3
 80028e4:	1ad3      	subs	r3, r2, r3
 80028e6:	4a4e      	ldr	r2, [pc, #312]	@ (8002a20 <main+0x2ec>)
 80028e8:	6013      	str	r3, [r2, #0]
					erase_plane(plane_x, old_y);
 80028ea:	4b4c      	ldr	r3, [pc, #304]	@ (8002a1c <main+0x2e8>)
 80028ec:	681b      	ldr	r3, [r3, #0]
 80028ee:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 80028f0:	4618      	mov	r0, r3
 80028f2:	f7fe fd4d 	bl	8001390 <erase_plane>
					draw_plane(plane_x, plane_y);
 80028f6:	4b49      	ldr	r3, [pc, #292]	@ (8002a1c <main+0x2e8>)
 80028f8:	681b      	ldr	r3, [r3, #0]
 80028fa:	4a49      	ldr	r2, [pc, #292]	@ (8002a20 <main+0x2ec>)
 80028fc:	6812      	ldr	r2, [r2, #0]
 80028fe:	4611      	mov	r1, r2
 8002900:	4618      	mov	r0, r3
 8002902:	f7fe fcb8 	bl	8001276 <draw_plane>
				}
				if (point >= level * 100) {
 8002906:	4b48      	ldr	r3, [pc, #288]	@ (8002a28 <main+0x2f4>)
 8002908:	681b      	ldr	r3, [r3, #0]
 800290a:	2264      	movs	r2, #100	@ 0x64
 800290c:	fb03 f202 	mul.w	r2, r3, r2
 8002910:	4b44      	ldr	r3, [pc, #272]	@ (8002a24 <main+0x2f0>)
 8002912:	681b      	ldr	r3, [r3, #0]
 8002914:	429a      	cmp	r2, r3
 8002916:	f73f af50 	bgt.w	80027ba <main+0x86>
					level++;
 800291a:	4b43      	ldr	r3, [pc, #268]	@ (8002a28 <main+0x2f4>)
 800291c:	681b      	ldr	r3, [r3, #0]
 800291e:	3301      	adds	r3, #1
 8002920:	4a41      	ldr	r2, [pc, #260]	@ (8002a28 <main+0x2f4>)
 8002922:	6013      	str	r3, [r2, #0]
					current_enemy_count += 2;
 8002924:	4b42      	ldr	r3, [pc, #264]	@ (8002a30 <main+0x2fc>)
 8002926:	681b      	ldr	r3, [r3, #0]
 8002928:	3302      	adds	r3, #2
 800292a:	4a41      	ldr	r2, [pc, #260]	@ (8002a30 <main+0x2fc>)
 800292c:	6013      	str	r3, [r2, #0]
					init_enemies();
 800292e:	f7fe fdd3 	bl	80014d8 <init_enemies>
					point = 0;
 8002932:	4b3c      	ldr	r3, [pc, #240]	@ (8002a24 <main+0x2f0>)
 8002934:	2200      	movs	r2, #0
 8002936:	601a      	str	r2, [r3, #0]

					// Hiển thị thông báo level up
					ILI9341_FillScreen(WHITE);
 8002938:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 800293c:	f7fe fb4e 	bl	8000fdc <ILI9341_FillScreen>
					char msg[30];
					sprintf(msg, "LEVEL %d", level);
 8002940:	4b39      	ldr	r3, [pc, #228]	@ (8002a28 <main+0x2f4>)
 8002942:	681a      	ldr	r2, [r3, #0]
 8002944:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002948:	493e      	ldr	r1, [pc, #248]	@ (8002a44 <main+0x310>)
 800294a:	4618      	mov	r0, r3
 800294c:	f003 f8a4 	bl	8005a98 <siprintf>
					ILI9341_DrawText(msg, FONT3, 50, 120, BLUE, WHITE);
 8002950:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 8002954:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002958:	9301      	str	r3, [sp, #4]
 800295a:	231f      	movs	r3, #31
 800295c:	9300      	str	r3, [sp, #0]
 800295e:	2378      	movs	r3, #120	@ 0x78
 8002960:	2232      	movs	r2, #50	@ 0x32
 8002962:	4939      	ldr	r1, [pc, #228]	@ (8002a48 <main+0x314>)
 8002964:	f7fd ffe0 	bl	8000928 <ILI9341_DrawText>
					HAL_Delay(1000);  // Hiển thị 1 giây
 8002968:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800296c:	f000 fd6c 	bl	8003448 <HAL_Delay>
					ILI9341_FillScreen(WHITE);  // Dọn lại màn hình
 8002970:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8002974:	f7fe fb32 	bl	8000fdc <ILI9341_FillScreen>
 8002978:	e71f      	b.n	80027ba <main+0x86>
				}
			} else if (level == 3) {
 800297a:	4b2b      	ldr	r3, [pc, #172]	@ (8002a28 <main+0x2f4>)
 800297c:	681b      	ldr	r3, [r3, #0]
 800297e:	2b03      	cmp	r3, #3
 8002980:	f47f af1b 	bne.w	80027ba <main+0x86>
				// Hiển thị thông báo level up

				ILI9341_FillScreen(WHITE);
 8002984:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8002988:	f7fe fb28 	bl	8000fdc <ILI9341_FillScreen>
				char msg[30];
				sprintf(msg, "FINAL BOSS", level);
 800298c:	4b26      	ldr	r3, [pc, #152]	@ (8002a28 <main+0x2f4>)
 800298e:	681a      	ldr	r2, [r3, #0]
 8002990:	1d3b      	adds	r3, r7, #4
 8002992:	492e      	ldr	r1, [pc, #184]	@ (8002a4c <main+0x318>)
 8002994:	4618      	mov	r0, r3
 8002996:	f003 f87f 	bl	8005a98 <siprintf>
				ILI9341_DrawText(msg, FONT3, 50, 120, BLUE, WHITE);
 800299a:	1d38      	adds	r0, r7, #4
 800299c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80029a0:	9301      	str	r3, [sp, #4]
 80029a2:	231f      	movs	r3, #31
 80029a4:	9300      	str	r3, [sp, #0]
 80029a6:	2378      	movs	r3, #120	@ 0x78
 80029a8:	2232      	movs	r2, #50	@ 0x32
 80029aa:	4927      	ldr	r1, [pc, #156]	@ (8002a48 <main+0x314>)
 80029ac:	f7fd ffbc 	bl	8000928 <ILI9341_DrawText>
				HAL_Delay(1000);  // Hiển thị 1 giây
 80029b0:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80029b4:	f000 fd48 	bl	8003448 <HAL_Delay>
				ILI9341_FillScreen(WHITE);
 80029b8:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80029bc:	f7fe fb0e 	bl	8000fdc <ILI9341_FillScreen>
				init_boss();
 80029c0:	f7fe fe8e 	bl	80016e0 <init_boss>
				draw_boss(boss.x, boss.y);
 80029c4:	4b22      	ldr	r3, [pc, #136]	@ (8002a50 <main+0x31c>)
 80029c6:	681b      	ldr	r3, [r3, #0]
 80029c8:	4a21      	ldr	r2, [pc, #132]	@ (8002a50 <main+0x31c>)
 80029ca:	6852      	ldr	r2, [r2, #4]
 80029cc:	4611      	mov	r1, r2
 80029ce:	4618      	mov	r0, r3
 80029d0:	f7fe fea0 	bl	8001714 <draw_boss>
				uint32_t now = HAL_GetTick(); // Lấy thời gian hiện tại (milis)
 80029d4:	f000 fd2c 	bl	8003430 <HAL_GetTick>
 80029d8:	6578      	str	r0, [r7, #84]	@ 0x54

				while (1) {
					if (now - last_boss_fire_time >= boss_fire_interval) {
 80029da:	4b1e      	ldr	r3, [pc, #120]	@ (8002a54 <main+0x320>)
 80029dc:	681b      	ldr	r3, [r3, #0]
 80029de:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 80029e0:	1ad3      	subs	r3, r2, r3
 80029e2:	f640 32b8 	movw	r2, #3000	@ 0xbb8
 80029e6:	4293      	cmp	r3, r2
 80029e8:	d304      	bcc.n	80029f4 <main+0x2c0>
						fire_boss_laser();
 80029ea:	f7fe febb 	bl	8001764 <fire_boss_laser>
						last_boss_fire_time = now;
 80029ee:	4a19      	ldr	r2, [pc, #100]	@ (8002a54 <main+0x320>)
 80029f0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80029f2:	6013      	str	r3, [r2, #0]
					}
					update_bullets();
 80029f4:	f7ff fcee 	bl	80023d4 <update_bullets>
					HAL_Delay(10);
 80029f8:	200a      	movs	r0, #10
 80029fa:	f000 fd25 	bl	8003448 <HAL_Delay>
					update_boss();
 80029fe:	f7ff faf9 	bl	8001ff4 <update_boss>
					update_boss_bullets();
 8002a02:	f7ff fa41 	bl	8001e88 <update_boss_bullets>
					if (check_bullet_boss_collision() == 1) {
 8002a06:	f7ff fb37 	bl	8002078 <check_bullet_boss_collision>
 8002a0a:	4603      	mov	r3, r0
 8002a0c:	2b01      	cmp	r3, #1
 8002a0e:	d123      	bne.n	8002a58 <main+0x324>
						show_victory_screen();
 8002a10:	f7ff fbcc 	bl	80021ac <show_victory_screen>
						while (1)
 8002a14:	bf00      	nop
 8002a16:	e7fd      	b.n	8002a14 <main+0x2e0>
 8002a18:	20000228 	.word	0x20000228
 8002a1c:	20000004 	.word	0x20000004
 8002a20:	20000008 	.word	0x20000008
 8002a24:	200004dc 	.word	0x200004dc
 8002a28:	20000010 	.word	0x20000010
 8002a2c:	20000174 	.word	0x20000174
 8002a30:	2000000c 	.word	0x2000000c
 8002a34:	200004d0 	.word	0x200004d0
 8002a38:	200004d4 	.word	0x200004d4
 8002a3c:	094f2095 	.word	0x094f2095
 8002a40:	200004d8 	.word	0x200004d8
 8002a44:	08006ce8 	.word	0x08006ce8
 8002a48:	08007b48 	.word	0x08007b48
 8002a4c:	08006cf4 	.word	0x08006cf4
 8002a50:	20000264 	.word	0x20000264
 8002a54:	200004e0 	.word	0x200004e0
//					plane_y = (plane_y + 5) % 220;
//					erase_plane(plane_x, old_y);
//					draw_plane(plane_x, plane_y);
//					shoot_bullet();
//				}
					if (plane_move_flag) {
 8002a58:	4b2b      	ldr	r3, [pc, #172]	@ (8002b08 <main+0x3d4>)
 8002a5a:	681b      	ldr	r3, [r3, #0]
 8002a5c:	2b00      	cmp	r3, #0
 8002a5e:	d004      	beq.n	8002a6a <main+0x336>
						plane_move_flag = 0;
 8002a60:	4b29      	ldr	r3, [pc, #164]	@ (8002b08 <main+0x3d4>)
 8002a62:	2200      	movs	r2, #0
 8002a64:	601a      	str	r2, [r3, #0]
						shoot_bullet();  // chỉ bắn, không di chuyển
 8002a66:	f7ff fc6f 	bl	8002348 <shoot_bullet>
					}

					if (plane_move_left_flag) {
 8002a6a:	4b28      	ldr	r3, [pc, #160]	@ (8002b0c <main+0x3d8>)
 8002a6c:	681b      	ldr	r3, [r3, #0]
 8002a6e:	2b00      	cmp	r3, #0
 8002a70:	d022      	beq.n	8002ab8 <main+0x384>
						plane_move_left_flag = 0;
 8002a72:	4b26      	ldr	r3, [pc, #152]	@ (8002b0c <main+0x3d8>)
 8002a74:	2200      	movs	r2, #0
 8002a76:	601a      	str	r2, [r3, #0]
						int old_y = plane_y;
 8002a78:	4b25      	ldr	r3, [pc, #148]	@ (8002b10 <main+0x3dc>)
 8002a7a:	681b      	ldr	r3, [r3, #0]
 8002a7c:	653b      	str	r3, [r7, #80]	@ 0x50
						plane_y = (plane_y + 5) % 220;
 8002a7e:	4b24      	ldr	r3, [pc, #144]	@ (8002b10 <main+0x3dc>)
 8002a80:	681b      	ldr	r3, [r3, #0]
 8002a82:	1d5a      	adds	r2, r3, #5
 8002a84:	4b23      	ldr	r3, [pc, #140]	@ (8002b14 <main+0x3e0>)
 8002a86:	fb83 1302 	smull	r1, r3, r3, r2
 8002a8a:	10d9      	asrs	r1, r3, #3
 8002a8c:	17d3      	asrs	r3, r2, #31
 8002a8e:	1acb      	subs	r3, r1, r3
 8002a90:	21dc      	movs	r1, #220	@ 0xdc
 8002a92:	fb01 f303 	mul.w	r3, r1, r3
 8002a96:	1ad3      	subs	r3, r2, r3
 8002a98:	4a1d      	ldr	r2, [pc, #116]	@ (8002b10 <main+0x3dc>)
 8002a9a:	6013      	str	r3, [r2, #0]
						erase_plane(plane_x, old_y);
 8002a9c:	4b1e      	ldr	r3, [pc, #120]	@ (8002b18 <main+0x3e4>)
 8002a9e:	681b      	ldr	r3, [r3, #0]
 8002aa0:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 8002aa2:	4618      	mov	r0, r3
 8002aa4:	f7fe fc74 	bl	8001390 <erase_plane>
						draw_plane(plane_x, plane_y);
 8002aa8:	4b1b      	ldr	r3, [pc, #108]	@ (8002b18 <main+0x3e4>)
 8002aaa:	681b      	ldr	r3, [r3, #0]
 8002aac:	4a18      	ldr	r2, [pc, #96]	@ (8002b10 <main+0x3dc>)
 8002aae:	6812      	ldr	r2, [r2, #0]
 8002ab0:	4611      	mov	r1, r2
 8002ab2:	4618      	mov	r0, r3
 8002ab4:	f7fe fbdf 	bl	8001276 <draw_plane>
					}

					if (plane_move_right_flag) {
 8002ab8:	4b18      	ldr	r3, [pc, #96]	@ (8002b1c <main+0x3e8>)
 8002aba:	681b      	ldr	r3, [r3, #0]
 8002abc:	2b00      	cmp	r3, #0
 8002abe:	d08c      	beq.n	80029da <main+0x2a6>
						plane_move_right_flag = 0;
 8002ac0:	4b16      	ldr	r3, [pc, #88]	@ (8002b1c <main+0x3e8>)
 8002ac2:	2200      	movs	r2, #0
 8002ac4:	601a      	str	r2, [r3, #0]
						int old_y = plane_y;
 8002ac6:	4b12      	ldr	r3, [pc, #72]	@ (8002b10 <main+0x3dc>)
 8002ac8:	681b      	ldr	r3, [r3, #0]
 8002aca:	64fb      	str	r3, [r7, #76]	@ 0x4c
						plane_y = (plane_y - 5) % 220;
 8002acc:	4b10      	ldr	r3, [pc, #64]	@ (8002b10 <main+0x3dc>)
 8002ace:	681b      	ldr	r3, [r3, #0]
 8002ad0:	1f5a      	subs	r2, r3, #5
 8002ad2:	4b10      	ldr	r3, [pc, #64]	@ (8002b14 <main+0x3e0>)
 8002ad4:	fb83 1302 	smull	r1, r3, r3, r2
 8002ad8:	10d9      	asrs	r1, r3, #3
 8002ada:	17d3      	asrs	r3, r2, #31
 8002adc:	1acb      	subs	r3, r1, r3
 8002ade:	21dc      	movs	r1, #220	@ 0xdc
 8002ae0:	fb01 f303 	mul.w	r3, r1, r3
 8002ae4:	1ad3      	subs	r3, r2, r3
 8002ae6:	4a0a      	ldr	r2, [pc, #40]	@ (8002b10 <main+0x3dc>)
 8002ae8:	6013      	str	r3, [r2, #0]
						erase_plane(plane_x, old_y);
 8002aea:	4b0b      	ldr	r3, [pc, #44]	@ (8002b18 <main+0x3e4>)
 8002aec:	681b      	ldr	r3, [r3, #0]
 8002aee:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
 8002af0:	4618      	mov	r0, r3
 8002af2:	f7fe fc4d 	bl	8001390 <erase_plane>
						draw_plane(plane_x, plane_y);
 8002af6:	4b08      	ldr	r3, [pc, #32]	@ (8002b18 <main+0x3e4>)
 8002af8:	681b      	ldr	r3, [r3, #0]
 8002afa:	4a05      	ldr	r2, [pc, #20]	@ (8002b10 <main+0x3dc>)
 8002afc:	6812      	ldr	r2, [r2, #0]
 8002afe:	4611      	mov	r1, r2
 8002b00:	4618      	mov	r0, r3
 8002b02:	f7fe fbb8 	bl	8001276 <draw_plane>
					if (now - last_boss_fire_time >= boss_fire_interval) {
 8002b06:	e768      	b.n	80029da <main+0x2a6>
 8002b08:	200004d0 	.word	0x200004d0
 8002b0c:	200004d4 	.word	0x200004d4
 8002b10:	20000008 	.word	0x20000008
 8002b14:	094f2095 	.word	0x094f2095
 8002b18:	20000004 	.word	0x20000004
 8002b1c:	200004d8 	.word	0x200004d8

08002b20 <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 8002b20:	b580      	push	{r7, lr}
 8002b22:	b094      	sub	sp, #80	@ 0x50
 8002b24:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8002b26:	f107 0320 	add.w	r3, r7, #32
 8002b2a:	2230      	movs	r2, #48	@ 0x30
 8002b2c:	2100      	movs	r1, #0
 8002b2e:	4618      	mov	r0, r3
 8002b30:	f003 f817 	bl	8005b62 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8002b34:	f107 030c 	add.w	r3, r7, #12
 8002b38:	2200      	movs	r2, #0
 8002b3a:	601a      	str	r2, [r3, #0]
 8002b3c:	605a      	str	r2, [r3, #4]
 8002b3e:	609a      	str	r2, [r3, #8]
 8002b40:	60da      	str	r2, [r3, #12]
 8002b42:	611a      	str	r2, [r3, #16]

	/** Configure the main internal regulator output voltage
	 */
	__HAL_RCC_PWR_CLK_ENABLE();
 8002b44:	2300      	movs	r3, #0
 8002b46:	60bb      	str	r3, [r7, #8]
 8002b48:	4b2c      	ldr	r3, [pc, #176]	@ (8002bfc <SystemClock_Config+0xdc>)
 8002b4a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b4c:	4a2b      	ldr	r2, [pc, #172]	@ (8002bfc <SystemClock_Config+0xdc>)
 8002b4e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002b52:	6413      	str	r3, [r2, #64]	@ 0x40
 8002b54:	4b29      	ldr	r3, [pc, #164]	@ (8002bfc <SystemClock_Config+0xdc>)
 8002b56:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b58:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002b5c:	60bb      	str	r3, [r7, #8]
 8002b5e:	68bb      	ldr	r3, [r7, #8]
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002b60:	2300      	movs	r3, #0
 8002b62:	607b      	str	r3, [r7, #4]
 8002b64:	4b26      	ldr	r3, [pc, #152]	@ (8002c00 <SystemClock_Config+0xe0>)
 8002b66:	681b      	ldr	r3, [r3, #0]
 8002b68:	4a25      	ldr	r2, [pc, #148]	@ (8002c00 <SystemClock_Config+0xe0>)
 8002b6a:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8002b6e:	6013      	str	r3, [r2, #0]
 8002b70:	4b23      	ldr	r3, [pc, #140]	@ (8002c00 <SystemClock_Config+0xe0>)
 8002b72:	681b      	ldr	r3, [r3, #0]
 8002b74:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8002b78:	607b      	str	r3, [r7, #4]
 8002b7a:	687b      	ldr	r3, [r7, #4]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI
 8002b7c:	2309      	movs	r3, #9
 8002b7e:	623b      	str	r3, [r7, #32]
			| RCC_OSCILLATORTYPE_HSE;
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002b80:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8002b84:	627b      	str	r3, [r7, #36]	@ 0x24
	RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 8002b86:	2301      	movs	r3, #1
 8002b88:	637b      	str	r3, [r7, #52]	@ 0x34
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002b8a:	2302      	movs	r3, #2
 8002b8c:	63bb      	str	r3, [r7, #56]	@ 0x38
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8002b8e:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8002b92:	63fb      	str	r3, [r7, #60]	@ 0x3c
	RCC_OscInitStruct.PLL.PLLM = 4;
 8002b94:	2304      	movs	r3, #4
 8002b96:	643b      	str	r3, [r7, #64]	@ 0x40
	RCC_OscInitStruct.PLL.PLLN = 180;
 8002b98:	23b4      	movs	r3, #180	@ 0xb4
 8002b9a:	647b      	str	r3, [r7, #68]	@ 0x44
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8002b9c:	2302      	movs	r3, #2
 8002b9e:	64bb      	str	r3, [r7, #72]	@ 0x48
	RCC_OscInitStruct.PLL.PLLQ = 4;
 8002ba0:	2304      	movs	r3, #4
 8002ba2:	64fb      	str	r3, [r7, #76]	@ 0x4c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8002ba4:	f107 0320 	add.w	r3, r7, #32
 8002ba8:	4618      	mov	r0, r3
 8002baa:	f001 fb2d 	bl	8004208 <HAL_RCC_OscConfig>
 8002bae:	4603      	mov	r3, r0
 8002bb0:	2b00      	cmp	r3, #0
 8002bb2:	d001      	beq.n	8002bb8 <SystemClock_Config+0x98>
		Error_Handler();
 8002bb4:	f000 f980 	bl	8002eb8 <Error_Handler>
	}

	/** Activate the Over-Drive mode
	 */
	if (HAL_PWREx_EnableOverDrive() != HAL_OK) {
 8002bb8:	f001 fad6 	bl	8004168 <HAL_PWREx_EnableOverDrive>
 8002bbc:	4603      	mov	r3, r0
 8002bbe:	2b00      	cmp	r3, #0
 8002bc0:	d001      	beq.n	8002bc6 <SystemClock_Config+0xa6>
		Error_Handler();
 8002bc2:	f000 f979 	bl	8002eb8 <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 8002bc6:	230f      	movs	r3, #15
 8002bc8:	60fb      	str	r3, [r7, #12]
			| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002bca:	2302      	movs	r3, #2
 8002bcc:	613b      	str	r3, [r7, #16]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002bce:	2300      	movs	r3, #0
 8002bd0:	617b      	str	r3, [r7, #20]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8002bd2:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8002bd6:	61bb      	str	r3, [r7, #24]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8002bd8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002bdc:	61fb      	str	r3, [r7, #28]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 8002bde:	f107 030c 	add.w	r3, r7, #12
 8002be2:	2105      	movs	r1, #5
 8002be4:	4618      	mov	r0, r3
 8002be6:	f001 fd87 	bl	80046f8 <HAL_RCC_ClockConfig>
 8002bea:	4603      	mov	r3, r0
 8002bec:	2b00      	cmp	r3, #0
 8002bee:	d001      	beq.n	8002bf4 <SystemClock_Config+0xd4>
		Error_Handler();
 8002bf0:	f000 f962 	bl	8002eb8 <Error_Handler>
	}
}
 8002bf4:	bf00      	nop
 8002bf6:	3750      	adds	r7, #80	@ 0x50
 8002bf8:	46bd      	mov	sp, r7
 8002bfa:	bd80      	pop	{r7, pc}
 8002bfc:	40023800 	.word	0x40023800
 8002c00:	40007000 	.word	0x40007000

08002c04 <MX_RTC_Init>:
/**
 * @brief RTC Initialization Function
 * @param None
 * @retval None
 */
static void MX_RTC_Init(void) {
 8002c04:	b580      	push	{r7, lr}
 8002c06:	af00      	add	r7, sp, #0

	/* USER CODE END RTC_Init 1 */

	/** Initialize RTC Only
	 */
	hrtc.Instance = RTC;
 8002c08:	4b0f      	ldr	r3, [pc, #60]	@ (8002c48 <MX_RTC_Init+0x44>)
 8002c0a:	4a10      	ldr	r2, [pc, #64]	@ (8002c4c <MX_RTC_Init+0x48>)
 8002c0c:	601a      	str	r2, [r3, #0]
	hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 8002c0e:	4b0e      	ldr	r3, [pc, #56]	@ (8002c48 <MX_RTC_Init+0x44>)
 8002c10:	2200      	movs	r2, #0
 8002c12:	605a      	str	r2, [r3, #4]
	hrtc.Init.AsynchPrediv = 127;
 8002c14:	4b0c      	ldr	r3, [pc, #48]	@ (8002c48 <MX_RTC_Init+0x44>)
 8002c16:	227f      	movs	r2, #127	@ 0x7f
 8002c18:	609a      	str	r2, [r3, #8]
	hrtc.Init.SynchPrediv = 255;
 8002c1a:	4b0b      	ldr	r3, [pc, #44]	@ (8002c48 <MX_RTC_Init+0x44>)
 8002c1c:	22ff      	movs	r2, #255	@ 0xff
 8002c1e:	60da      	str	r2, [r3, #12]
	hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 8002c20:	4b09      	ldr	r3, [pc, #36]	@ (8002c48 <MX_RTC_Init+0x44>)
 8002c22:	2200      	movs	r2, #0
 8002c24:	611a      	str	r2, [r3, #16]
	hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 8002c26:	4b08      	ldr	r3, [pc, #32]	@ (8002c48 <MX_RTC_Init+0x44>)
 8002c28:	2200      	movs	r2, #0
 8002c2a:	615a      	str	r2, [r3, #20]
	hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8002c2c:	4b06      	ldr	r3, [pc, #24]	@ (8002c48 <MX_RTC_Init+0x44>)
 8002c2e:	2200      	movs	r2, #0
 8002c30:	619a      	str	r2, [r3, #24]
	if (HAL_RTC_Init(&hrtc) != HAL_OK) {
 8002c32:	4805      	ldr	r0, [pc, #20]	@ (8002c48 <MX_RTC_Init+0x44>)
 8002c34:	f002 f90c 	bl	8004e50 <HAL_RTC_Init>
 8002c38:	4603      	mov	r3, r0
 8002c3a:	2b00      	cmp	r3, #0
 8002c3c:	d001      	beq.n	8002c42 <MX_RTC_Init+0x3e>
		Error_Handler();
 8002c3e:	f000 f93b 	bl	8002eb8 <Error_Handler>
	}
	/* USER CODE BEGIN RTC_Init 2 */

	/* USER CODE END RTC_Init 2 */

}
 8002c42:	bf00      	nop
 8002c44:	bd80      	pop	{r7, pc}
 8002c46:	bf00      	nop
 8002c48:	2000009c 	.word	0x2000009c
 8002c4c:	40002800 	.word	0x40002800

08002c50 <MX_SPI5_Init>:
/**
 * @brief SPI5 Initialization Function
 * @param None
 * @retval None
 */
static void MX_SPI5_Init(void) {
 8002c50:	b580      	push	{r7, lr}
 8002c52:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN SPI5_Init 1 */

	/* USER CODE END SPI5_Init 1 */
	/* SPI5 parameter configuration*/
	hspi5.Instance = SPI5;
 8002c54:	4b17      	ldr	r3, [pc, #92]	@ (8002cb4 <MX_SPI5_Init+0x64>)
 8002c56:	4a18      	ldr	r2, [pc, #96]	@ (8002cb8 <MX_SPI5_Init+0x68>)
 8002c58:	601a      	str	r2, [r3, #0]
	hspi5.Init.Mode = SPI_MODE_MASTER;
 8002c5a:	4b16      	ldr	r3, [pc, #88]	@ (8002cb4 <MX_SPI5_Init+0x64>)
 8002c5c:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8002c60:	605a      	str	r2, [r3, #4]
	hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 8002c62:	4b14      	ldr	r3, [pc, #80]	@ (8002cb4 <MX_SPI5_Init+0x64>)
 8002c64:	2200      	movs	r2, #0
 8002c66:	609a      	str	r2, [r3, #8]
	hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8002c68:	4b12      	ldr	r3, [pc, #72]	@ (8002cb4 <MX_SPI5_Init+0x64>)
 8002c6a:	2200      	movs	r2, #0
 8002c6c:	60da      	str	r2, [r3, #12]
	hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 8002c6e:	4b11      	ldr	r3, [pc, #68]	@ (8002cb4 <MX_SPI5_Init+0x64>)
 8002c70:	2200      	movs	r2, #0
 8002c72:	611a      	str	r2, [r3, #16]
	hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8002c74:	4b0f      	ldr	r3, [pc, #60]	@ (8002cb4 <MX_SPI5_Init+0x64>)
 8002c76:	2200      	movs	r2, #0
 8002c78:	615a      	str	r2, [r3, #20]
	hspi5.Init.NSS = SPI_NSS_SOFT;
 8002c7a:	4b0e      	ldr	r3, [pc, #56]	@ (8002cb4 <MX_SPI5_Init+0x64>)
 8002c7c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002c80:	619a      	str	r2, [r3, #24]
	hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 8002c82:	4b0c      	ldr	r3, [pc, #48]	@ (8002cb4 <MX_SPI5_Init+0x64>)
 8002c84:	2208      	movs	r2, #8
 8002c86:	61da      	str	r2, [r3, #28]
	hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002c88:	4b0a      	ldr	r3, [pc, #40]	@ (8002cb4 <MX_SPI5_Init+0x64>)
 8002c8a:	2200      	movs	r2, #0
 8002c8c:	621a      	str	r2, [r3, #32]
	hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8002c8e:	4b09      	ldr	r3, [pc, #36]	@ (8002cb4 <MX_SPI5_Init+0x64>)
 8002c90:	2200      	movs	r2, #0
 8002c92:	625a      	str	r2, [r3, #36]	@ 0x24
	hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002c94:	4b07      	ldr	r3, [pc, #28]	@ (8002cb4 <MX_SPI5_Init+0x64>)
 8002c96:	2200      	movs	r2, #0
 8002c98:	629a      	str	r2, [r3, #40]	@ 0x28
	hspi5.Init.CRCPolynomial = 10;
 8002c9a:	4b06      	ldr	r3, [pc, #24]	@ (8002cb4 <MX_SPI5_Init+0x64>)
 8002c9c:	220a      	movs	r2, #10
 8002c9e:	62da      	str	r2, [r3, #44]	@ 0x2c
	if (HAL_SPI_Init(&hspi5) != HAL_OK) {
 8002ca0:	4804      	ldr	r0, [pc, #16]	@ (8002cb4 <MX_SPI5_Init+0x64>)
 8002ca2:	f002 f9d9 	bl	8005058 <HAL_SPI_Init>
 8002ca6:	4603      	mov	r3, r0
 8002ca8:	2b00      	cmp	r3, #0
 8002caa:	d001      	beq.n	8002cb0 <MX_SPI5_Init+0x60>
		Error_Handler();
 8002cac:	f000 f904 	bl	8002eb8 <Error_Handler>
	}
	/* USER CODE BEGIN SPI5_Init 2 */

	/* USER CODE END SPI5_Init 2 */

}
 8002cb0:	bf00      	nop
 8002cb2:	bd80      	pop	{r7, pc}
 8002cb4:	200000bc 	.word	0x200000bc
 8002cb8:	40015000 	.word	0x40015000

08002cbc <MX_DMA_Init>:

/**
 * Enable DMA controller clock
 */
static void MX_DMA_Init(void) {
 8002cbc:	b580      	push	{r7, lr}
 8002cbe:	b082      	sub	sp, #8
 8002cc0:	af00      	add	r7, sp, #0

	/* DMA controller clock enable */
	__HAL_RCC_DMA2_CLK_ENABLE();
 8002cc2:	2300      	movs	r3, #0
 8002cc4:	607b      	str	r3, [r7, #4]
 8002cc6:	4b0c      	ldr	r3, [pc, #48]	@ (8002cf8 <MX_DMA_Init+0x3c>)
 8002cc8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002cca:	4a0b      	ldr	r2, [pc, #44]	@ (8002cf8 <MX_DMA_Init+0x3c>)
 8002ccc:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8002cd0:	6313      	str	r3, [r2, #48]	@ 0x30
 8002cd2:	4b09      	ldr	r3, [pc, #36]	@ (8002cf8 <MX_DMA_Init+0x3c>)
 8002cd4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002cd6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002cda:	607b      	str	r3, [r7, #4]
 8002cdc:	687b      	ldr	r3, [r7, #4]

	/* DMA interrupt init */
	/* DMA2_Stream4_IRQn interrupt configuration */
	HAL_NVIC_SetPriority(DMA2_Stream4_IRQn, 0, 0);
 8002cde:	2200      	movs	r2, #0
 8002ce0:	2100      	movs	r1, #0
 8002ce2:	203c      	movs	r0, #60	@ 0x3c
 8002ce4:	f000 fcaf 	bl	8003646 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(DMA2_Stream4_IRQn);
 8002ce8:	203c      	movs	r0, #60	@ 0x3c
 8002cea:	f000 fcc8 	bl	800367e <HAL_NVIC_EnableIRQ>

}
 8002cee:	bf00      	nop
 8002cf0:	3708      	adds	r7, #8
 8002cf2:	46bd      	mov	sp, r7
 8002cf4:	bd80      	pop	{r7, pc}
 8002cf6:	bf00      	nop
 8002cf8:	40023800 	.word	0x40023800

08002cfc <MX_GPIO_Init>:
/**
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void) {
 8002cfc:	b580      	push	{r7, lr}
 8002cfe:	b08c      	sub	sp, #48	@ 0x30
 8002d00:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 8002d02:	f107 031c 	add.w	r3, r7, #28
 8002d06:	2200      	movs	r2, #0
 8002d08:	601a      	str	r2, [r3, #0]
 8002d0a:	605a      	str	r2, [r3, #4]
 8002d0c:	609a      	str	r2, [r3, #8]
 8002d0e:	60da      	str	r2, [r3, #12]
 8002d10:	611a      	str	r2, [r3, #16]
	/* USER CODE BEGIN MX_GPIO_Init_1 */

	/* USER CODE END MX_GPIO_Init_1 */

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOC_CLK_ENABLE();
 8002d12:	2300      	movs	r3, #0
 8002d14:	61bb      	str	r3, [r7, #24]
 8002d16:	4b63      	ldr	r3, [pc, #396]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002d18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d1a:	4a62      	ldr	r2, [pc, #392]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002d1c:	f043 0304 	orr.w	r3, r3, #4
 8002d20:	6313      	str	r3, [r2, #48]	@ 0x30
 8002d22:	4b60      	ldr	r3, [pc, #384]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002d24:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d26:	f003 0304 	and.w	r3, r3, #4
 8002d2a:	61bb      	str	r3, [r7, #24]
 8002d2c:	69bb      	ldr	r3, [r7, #24]
	__HAL_RCC_GPIOF_CLK_ENABLE();
 8002d2e:	2300      	movs	r3, #0
 8002d30:	617b      	str	r3, [r7, #20]
 8002d32:	4b5c      	ldr	r3, [pc, #368]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002d34:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d36:	4a5b      	ldr	r2, [pc, #364]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002d38:	f043 0320 	orr.w	r3, r3, #32
 8002d3c:	6313      	str	r3, [r2, #48]	@ 0x30
 8002d3e:	4b59      	ldr	r3, [pc, #356]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002d40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d42:	f003 0320 	and.w	r3, r3, #32
 8002d46:	617b      	str	r3, [r7, #20]
 8002d48:	697b      	ldr	r3, [r7, #20]
	__HAL_RCC_GPIOH_CLK_ENABLE();
 8002d4a:	2300      	movs	r3, #0
 8002d4c:	613b      	str	r3, [r7, #16]
 8002d4e:	4b55      	ldr	r3, [pc, #340]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002d50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d52:	4a54      	ldr	r2, [pc, #336]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002d54:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002d58:	6313      	str	r3, [r2, #48]	@ 0x30
 8002d5a:	4b52      	ldr	r3, [pc, #328]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002d5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d5e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002d62:	613b      	str	r3, [r7, #16]
 8002d64:	693b      	ldr	r3, [r7, #16]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8002d66:	2300      	movs	r3, #0
 8002d68:	60fb      	str	r3, [r7, #12]
 8002d6a:	4b4e      	ldr	r3, [pc, #312]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002d6c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d6e:	4a4d      	ldr	r2, [pc, #308]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002d70:	f043 0301 	orr.w	r3, r3, #1
 8002d74:	6313      	str	r3, [r2, #48]	@ 0x30
 8002d76:	4b4b      	ldr	r3, [pc, #300]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002d78:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d7a:	f003 0301 	and.w	r3, r3, #1
 8002d7e:	60fb      	str	r3, [r7, #12]
 8002d80:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOD_CLK_ENABLE();
 8002d82:	2300      	movs	r3, #0
 8002d84:	60bb      	str	r3, [r7, #8]
 8002d86:	4b47      	ldr	r3, [pc, #284]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002d88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d8a:	4a46      	ldr	r2, [pc, #280]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002d8c:	f043 0308 	orr.w	r3, r3, #8
 8002d90:	6313      	str	r3, [r2, #48]	@ 0x30
 8002d92:	4b44      	ldr	r3, [pc, #272]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002d94:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d96:	f003 0308 	and.w	r3, r3, #8
 8002d9a:	60bb      	str	r3, [r7, #8]
 8002d9c:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOG_CLK_ENABLE();
 8002d9e:	2300      	movs	r3, #0
 8002da0:	607b      	str	r3, [r7, #4]
 8002da2:	4b40      	ldr	r3, [pc, #256]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002da4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002da6:	4a3f      	ldr	r2, [pc, #252]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002da8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8002dac:	6313      	str	r3, [r2, #48]	@ 0x30
 8002dae:	4b3d      	ldr	r3, [pc, #244]	@ (8002ea4 <MX_GPIO_Init+0x1a8>)
 8002db0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002db2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002db6:	607b      	str	r3, [r7, #4]
 8002db8:	687b      	ldr	r3, [r7, #4]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002dba:	2200      	movs	r2, #0
 8002dbc:	2104      	movs	r1, #4
 8002dbe:	483a      	ldr	r0, [pc, #232]	@ (8002ea8 <MX_GPIO_Init+0x1ac>)
 8002dc0:	f001 f994 	bl	80040ec <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12 | GPIO_PIN_13, GPIO_PIN_RESET);
 8002dc4:	2200      	movs	r2, #0
 8002dc6:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8002dca:	4838      	ldr	r0, [pc, #224]	@ (8002eac <MX_GPIO_Init+0x1b0>)
 8002dcc:	f001 f98e 	bl	80040ec <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 8002dd0:	2200      	movs	r2, #0
 8002dd2:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002dd6:	4836      	ldr	r0, [pc, #216]	@ (8002eb0 <MX_GPIO_Init+0x1b4>)
 8002dd8:	f001 f988 	bl	80040ec <HAL_GPIO_WritePin>

	/*Configure GPIO pin : PC2 */
	GPIO_InitStruct.Pin = GPIO_PIN_2;
 8002ddc:	2304      	movs	r3, #4
 8002dde:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002de0:	2301      	movs	r3, #1
 8002de2:	623b      	str	r3, [r7, #32]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002de4:	2300      	movs	r3, #0
 8002de6:	627b      	str	r3, [r7, #36]	@ 0x24
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002de8:	2300      	movs	r3, #0
 8002dea:	62bb      	str	r3, [r7, #40]	@ 0x28
	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002dec:	f107 031c 	add.w	r3, r7, #28
 8002df0:	4619      	mov	r1, r3
 8002df2:	482d      	ldr	r0, [pc, #180]	@ (8002ea8 <MX_GPIO_Init+0x1ac>)
 8002df4:	f000 ffce 	bl	8003d94 <HAL_GPIO_Init>

	/*Configure GPIO pin : PA0 */
	GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002df8:	2301      	movs	r3, #1
 8002dfa:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002dfc:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8002e00:	623b      	str	r3, [r7, #32]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002e02:	2300      	movs	r3, #0
 8002e04:	627b      	str	r3, [r7, #36]	@ 0x24
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002e06:	f107 031c 	add.w	r3, r7, #28
 8002e0a:	4619      	mov	r1, r3
 8002e0c:	4829      	ldr	r0, [pc, #164]	@ (8002eb4 <MX_GPIO_Init+0x1b8>)
 8002e0e:	f000 ffc1 	bl	8003d94 <HAL_GPIO_Init>

	/*Configure GPIO pins : PD8 PD10 */
	GPIO_InitStruct.Pin = GPIO_PIN_8 | GPIO_PIN_10;
 8002e12:	f44f 63a0 	mov.w	r3, #1280	@ 0x500
 8002e16:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8002e18:	f44f 1344 	mov.w	r3, #3211264	@ 0x310000
 8002e1c:	623b      	str	r3, [r7, #32]
	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8002e1e:	2302      	movs	r3, #2
 8002e20:	627b      	str	r3, [r7, #36]	@ 0x24
	HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002e22:	f107 031c 	add.w	r3, r7, #28
 8002e26:	4619      	mov	r1, r3
 8002e28:	4820      	ldr	r0, [pc, #128]	@ (8002eac <MX_GPIO_Init+0x1b0>)
 8002e2a:	f000 ffb3 	bl	8003d94 <HAL_GPIO_Init>

	/*Configure GPIO pins : PD12 PD13 */
	GPIO_InitStruct.Pin = GPIO_PIN_12 | GPIO_PIN_13;
 8002e2e:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 8002e32:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002e34:	2301      	movs	r3, #1
 8002e36:	623b      	str	r3, [r7, #32]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002e38:	2300      	movs	r3, #0
 8002e3a:	627b      	str	r3, [r7, #36]	@ 0x24
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002e3c:	2300      	movs	r3, #0
 8002e3e:	62bb      	str	r3, [r7, #40]	@ 0x28
	HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002e40:	f107 031c 	add.w	r3, r7, #28
 8002e44:	4619      	mov	r1, r3
 8002e46:	4819      	ldr	r0, [pc, #100]	@ (8002eac <MX_GPIO_Init+0x1b0>)
 8002e48:	f000 ffa4 	bl	8003d94 <HAL_GPIO_Init>

	/*Configure GPIO pin : PG13 */
	GPIO_InitStruct.Pin = GPIO_PIN_13;
 8002e4c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002e50:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002e52:	2301      	movs	r3, #1
 8002e54:	623b      	str	r3, [r7, #32]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002e56:	2300      	movs	r3, #0
 8002e58:	627b      	str	r3, [r7, #36]	@ 0x24
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002e5a:	2300      	movs	r3, #0
 8002e5c:	62bb      	str	r3, [r7, #40]	@ 0x28
	HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002e5e:	f107 031c 	add.w	r3, r7, #28
 8002e62:	4619      	mov	r1, r3
 8002e64:	4812      	ldr	r0, [pc, #72]	@ (8002eb0 <MX_GPIO_Init+0x1b4>)
 8002e66:	f000 ff95 	bl	8003d94 <HAL_GPIO_Init>

	/* EXTI interrupt init*/
	HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 8002e6a:	2200      	movs	r2, #0
 8002e6c:	2100      	movs	r1, #0
 8002e6e:	2006      	movs	r0, #6
 8002e70:	f000 fbe9 	bl	8003646 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8002e74:	2006      	movs	r0, #6
 8002e76:	f000 fc02 	bl	800367e <HAL_NVIC_EnableIRQ>

	HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8002e7a:	2200      	movs	r2, #0
 8002e7c:	2100      	movs	r1, #0
 8002e7e:	2017      	movs	r0, #23
 8002e80:	f000 fbe1 	bl	8003646 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8002e84:	2017      	movs	r0, #23
 8002e86:	f000 fbfa 	bl	800367e <HAL_NVIC_EnableIRQ>

	HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8002e8a:	2200      	movs	r2, #0
 8002e8c:	2100      	movs	r1, #0
 8002e8e:	2028      	movs	r0, #40	@ 0x28
 8002e90:	f000 fbd9 	bl	8003646 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8002e94:	2028      	movs	r0, #40	@ 0x28
 8002e96:	f000 fbf2 	bl	800367e <HAL_NVIC_EnableIRQ>

	/* USER CODE BEGIN MX_GPIO_Init_2 */

	/* USER CODE END MX_GPIO_Init_2 */
}
 8002e9a:	bf00      	nop
 8002e9c:	3730      	adds	r7, #48	@ 0x30
 8002e9e:	46bd      	mov	sp, r7
 8002ea0:	bd80      	pop	{r7, pc}
 8002ea2:	bf00      	nop
 8002ea4:	40023800 	.word	0x40023800
 8002ea8:	40020800 	.word	0x40020800
 8002eac:	40020c00 	.word	0x40020c00
 8002eb0:	40021800 	.word	0x40021800
 8002eb4:	40020000 	.word	0x40020000

08002eb8 <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 8002eb8:	b480      	push	{r7}
 8002eba:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002ebc:	b672      	cpsid	i
}
 8002ebe:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8002ec0:	bf00      	nop
 8002ec2:	e7fd      	b.n	8002ec0 <Error_Handler+0x8>

08002ec4 <HAL_MspInit>:
 8002ec4:	b480      	push	{r7}
 8002ec6:	b083      	sub	sp, #12
 8002ec8:	af00      	add	r7, sp, #0
 8002eca:	2300      	movs	r3, #0
 8002ecc:	607b      	str	r3, [r7, #4]
 8002ece:	4b10      	ldr	r3, [pc, #64]	@ (8002f10 <HAL_MspInit+0x4c>)
 8002ed0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002ed2:	4a0f      	ldr	r2, [pc, #60]	@ (8002f10 <HAL_MspInit+0x4c>)
 8002ed4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002ed8:	6453      	str	r3, [r2, #68]	@ 0x44
 8002eda:	4b0d      	ldr	r3, [pc, #52]	@ (8002f10 <HAL_MspInit+0x4c>)
 8002edc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002ede:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002ee2:	607b      	str	r3, [r7, #4]
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	2300      	movs	r3, #0
 8002ee8:	603b      	str	r3, [r7, #0]
 8002eea:	4b09      	ldr	r3, [pc, #36]	@ (8002f10 <HAL_MspInit+0x4c>)
 8002eec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002eee:	4a08      	ldr	r2, [pc, #32]	@ (8002f10 <HAL_MspInit+0x4c>)
 8002ef0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002ef4:	6413      	str	r3, [r2, #64]	@ 0x40
 8002ef6:	4b06      	ldr	r3, [pc, #24]	@ (8002f10 <HAL_MspInit+0x4c>)
 8002ef8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002efa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002efe:	603b      	str	r3, [r7, #0]
 8002f00:	683b      	ldr	r3, [r7, #0]
 8002f02:	bf00      	nop
 8002f04:	370c      	adds	r7, #12
 8002f06:	46bd      	mov	sp, r7
 8002f08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f0c:	4770      	bx	lr
 8002f0e:	bf00      	nop
 8002f10:	40023800 	.word	0x40023800

08002f14 <HAL_RTC_MspInit>:
 8002f14:	b580      	push	{r7, lr}
 8002f16:	b08e      	sub	sp, #56	@ 0x38
 8002f18:	af00      	add	r7, sp, #0
 8002f1a:	6078      	str	r0, [r7, #4]
 8002f1c:	f107 0308 	add.w	r3, r7, #8
 8002f20:	2230      	movs	r2, #48	@ 0x30
 8002f22:	2100      	movs	r1, #0
 8002f24:	4618      	mov	r0, r3
 8002f26:	f002 fe1c 	bl	8005b62 <memset>
 8002f2a:	687b      	ldr	r3, [r7, #4]
 8002f2c:	681b      	ldr	r3, [r3, #0]
 8002f2e:	4a0c      	ldr	r2, [pc, #48]	@ (8002f60 <HAL_RTC_MspInit+0x4c>)
 8002f30:	4293      	cmp	r3, r2
 8002f32:	d111      	bne.n	8002f58 <HAL_RTC_MspInit+0x44>
 8002f34:	2320      	movs	r3, #32
 8002f36:	60bb      	str	r3, [r7, #8]
 8002f38:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8002f3c:	633b      	str	r3, [r7, #48]	@ 0x30
 8002f3e:	f107 0308 	add.w	r3, r7, #8
 8002f42:	4618      	mov	r0, r3
 8002f44:	f001 fdc4 	bl	8004ad0 <HAL_RCCEx_PeriphCLKConfig>
 8002f48:	4603      	mov	r3, r0
 8002f4a:	2b00      	cmp	r3, #0
 8002f4c:	d001      	beq.n	8002f52 <HAL_RTC_MspInit+0x3e>
 8002f4e:	f7ff ffb3 	bl	8002eb8 <Error_Handler>
 8002f52:	4b04      	ldr	r3, [pc, #16]	@ (8002f64 <HAL_RTC_MspInit+0x50>)
 8002f54:	2201      	movs	r2, #1
 8002f56:	601a      	str	r2, [r3, #0]
 8002f58:	bf00      	nop
 8002f5a:	3738      	adds	r7, #56	@ 0x38
 8002f5c:	46bd      	mov	sp, r7
 8002f5e:	bd80      	pop	{r7, pc}
 8002f60:	40002800 	.word	0x40002800
 8002f64:	42470e3c 	.word	0x42470e3c

08002f68 <HAL_SPI_MspInit>:
 8002f68:	b580      	push	{r7, lr}
 8002f6a:	b08a      	sub	sp, #40	@ 0x28
 8002f6c:	af00      	add	r7, sp, #0
 8002f6e:	6078      	str	r0, [r7, #4]
 8002f70:	f107 0314 	add.w	r3, r7, #20
 8002f74:	2200      	movs	r2, #0
 8002f76:	601a      	str	r2, [r3, #0]
 8002f78:	605a      	str	r2, [r3, #4]
 8002f7a:	609a      	str	r2, [r3, #8]
 8002f7c:	60da      	str	r2, [r3, #12]
 8002f7e:	611a      	str	r2, [r3, #16]
 8002f80:	687b      	ldr	r3, [r7, #4]
 8002f82:	681b      	ldr	r3, [r3, #0]
 8002f84:	4a30      	ldr	r2, [pc, #192]	@ (8003048 <HAL_SPI_MspInit+0xe0>)
 8002f86:	4293      	cmp	r3, r2
 8002f88:	d15a      	bne.n	8003040 <HAL_SPI_MspInit+0xd8>
 8002f8a:	2300      	movs	r3, #0
 8002f8c:	613b      	str	r3, [r7, #16]
 8002f8e:	4b2f      	ldr	r3, [pc, #188]	@ (800304c <HAL_SPI_MspInit+0xe4>)
 8002f90:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f92:	4a2e      	ldr	r2, [pc, #184]	@ (800304c <HAL_SPI_MspInit+0xe4>)
 8002f94:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8002f98:	6453      	str	r3, [r2, #68]	@ 0x44
 8002f9a:	4b2c      	ldr	r3, [pc, #176]	@ (800304c <HAL_SPI_MspInit+0xe4>)
 8002f9c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f9e:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002fa2:	613b      	str	r3, [r7, #16]
 8002fa4:	693b      	ldr	r3, [r7, #16]
 8002fa6:	2300      	movs	r3, #0
 8002fa8:	60fb      	str	r3, [r7, #12]
 8002faa:	4b28      	ldr	r3, [pc, #160]	@ (800304c <HAL_SPI_MspInit+0xe4>)
 8002fac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002fae:	4a27      	ldr	r2, [pc, #156]	@ (800304c <HAL_SPI_MspInit+0xe4>)
 8002fb0:	f043 0320 	orr.w	r3, r3, #32
 8002fb4:	6313      	str	r3, [r2, #48]	@ 0x30
 8002fb6:	4b25      	ldr	r3, [pc, #148]	@ (800304c <HAL_SPI_MspInit+0xe4>)
 8002fb8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002fba:	f003 0320 	and.w	r3, r3, #32
 8002fbe:	60fb      	str	r3, [r7, #12]
 8002fc0:	68fb      	ldr	r3, [r7, #12]
 8002fc2:	f44f 7320 	mov.w	r3, #640	@ 0x280
 8002fc6:	617b      	str	r3, [r7, #20]
 8002fc8:	2302      	movs	r3, #2
 8002fca:	61bb      	str	r3, [r7, #24]
 8002fcc:	2300      	movs	r3, #0
 8002fce:	61fb      	str	r3, [r7, #28]
 8002fd0:	2303      	movs	r3, #3
 8002fd2:	623b      	str	r3, [r7, #32]
 8002fd4:	2305      	movs	r3, #5
 8002fd6:	627b      	str	r3, [r7, #36]	@ 0x24
 8002fd8:	f107 0314 	add.w	r3, r7, #20
 8002fdc:	4619      	mov	r1, r3
 8002fde:	481c      	ldr	r0, [pc, #112]	@ (8003050 <HAL_SPI_MspInit+0xe8>)
 8002fe0:	f000 fed8 	bl	8003d94 <HAL_GPIO_Init>
 8002fe4:	4b1b      	ldr	r3, [pc, #108]	@ (8003054 <HAL_SPI_MspInit+0xec>)
 8002fe6:	4a1c      	ldr	r2, [pc, #112]	@ (8003058 <HAL_SPI_MspInit+0xf0>)
 8002fe8:	601a      	str	r2, [r3, #0]
 8002fea:	4b1a      	ldr	r3, [pc, #104]	@ (8003054 <HAL_SPI_MspInit+0xec>)
 8002fec:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8002ff0:	605a      	str	r2, [r3, #4]
 8002ff2:	4b18      	ldr	r3, [pc, #96]	@ (8003054 <HAL_SPI_MspInit+0xec>)
 8002ff4:	2240      	movs	r2, #64	@ 0x40
 8002ff6:	609a      	str	r2, [r3, #8]
 8002ff8:	4b16      	ldr	r3, [pc, #88]	@ (8003054 <HAL_SPI_MspInit+0xec>)
 8002ffa:	2200      	movs	r2, #0
 8002ffc:	60da      	str	r2, [r3, #12]
 8002ffe:	4b15      	ldr	r3, [pc, #84]	@ (8003054 <HAL_SPI_MspInit+0xec>)
 8003000:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8003004:	611a      	str	r2, [r3, #16]
 8003006:	4b13      	ldr	r3, [pc, #76]	@ (8003054 <HAL_SPI_MspInit+0xec>)
 8003008:	2200      	movs	r2, #0
 800300a:	615a      	str	r2, [r3, #20]
 800300c:	4b11      	ldr	r3, [pc, #68]	@ (8003054 <HAL_SPI_MspInit+0xec>)
 800300e:	2200      	movs	r2, #0
 8003010:	619a      	str	r2, [r3, #24]
 8003012:	4b10      	ldr	r3, [pc, #64]	@ (8003054 <HAL_SPI_MspInit+0xec>)
 8003014:	2200      	movs	r2, #0
 8003016:	61da      	str	r2, [r3, #28]
 8003018:	4b0e      	ldr	r3, [pc, #56]	@ (8003054 <HAL_SPI_MspInit+0xec>)
 800301a:	2200      	movs	r2, #0
 800301c:	621a      	str	r2, [r3, #32]
 800301e:	4b0d      	ldr	r3, [pc, #52]	@ (8003054 <HAL_SPI_MspInit+0xec>)
 8003020:	2200      	movs	r2, #0
 8003022:	625a      	str	r2, [r3, #36]	@ 0x24
 8003024:	480b      	ldr	r0, [pc, #44]	@ (8003054 <HAL_SPI_MspInit+0xec>)
 8003026:	f000 fb45 	bl	80036b4 <HAL_DMA_Init>
 800302a:	4603      	mov	r3, r0
 800302c:	2b00      	cmp	r3, #0
 800302e:	d001      	beq.n	8003034 <HAL_SPI_MspInit+0xcc>
 8003030:	f7ff ff42 	bl	8002eb8 <Error_Handler>
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	4a07      	ldr	r2, [pc, #28]	@ (8003054 <HAL_SPI_MspInit+0xec>)
 8003038:	649a      	str	r2, [r3, #72]	@ 0x48
 800303a:	4a06      	ldr	r2, [pc, #24]	@ (8003054 <HAL_SPI_MspInit+0xec>)
 800303c:	687b      	ldr	r3, [r7, #4]
 800303e:	6393      	str	r3, [r2, #56]	@ 0x38
 8003040:	bf00      	nop
 8003042:	3728      	adds	r7, #40	@ 0x28
 8003044:	46bd      	mov	sp, r7
 8003046:	bd80      	pop	{r7, pc}
 8003048:	40015000 	.word	0x40015000
 800304c:	40023800 	.word	0x40023800
 8003050:	40021400 	.word	0x40021400
 8003054:	20000114 	.word	0x20000114
 8003058:	40026470 	.word	0x40026470

0800305c <NMI_Handler>:
 800305c:	b480      	push	{r7}
 800305e:	af00      	add	r7, sp, #0
 8003060:	bf00      	nop
 8003062:	e7fd      	b.n	8003060 <NMI_Handler+0x4>

08003064 <HardFault_Handler>:
 8003064:	b480      	push	{r7}
 8003066:	af00      	add	r7, sp, #0
 8003068:	bf00      	nop
 800306a:	e7fd      	b.n	8003068 <HardFault_Handler+0x4>

0800306c <MemManage_Handler>:
 800306c:	b480      	push	{r7}
 800306e:	af00      	add	r7, sp, #0
 8003070:	bf00      	nop
 8003072:	e7fd      	b.n	8003070 <MemManage_Handler+0x4>

08003074 <BusFault_Handler>:
 8003074:	b480      	push	{r7}
 8003076:	af00      	add	r7, sp, #0
 8003078:	bf00      	nop
 800307a:	e7fd      	b.n	8003078 <BusFault_Handler+0x4>

0800307c <UsageFault_Handler>:
 800307c:	b480      	push	{r7}
 800307e:	af00      	add	r7, sp, #0
 8003080:	bf00      	nop
 8003082:	e7fd      	b.n	8003080 <UsageFault_Handler+0x4>

08003084 <SVC_Handler>:
 8003084:	b480      	push	{r7}
 8003086:	af00      	add	r7, sp, #0
 8003088:	bf00      	nop
 800308a:	46bd      	mov	sp, r7
 800308c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003090:	4770      	bx	lr

08003092 <DebugMon_Handler>:
 8003092:	b480      	push	{r7}
 8003094:	af00      	add	r7, sp, #0
 8003096:	bf00      	nop
 8003098:	46bd      	mov	sp, r7
 800309a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800309e:	4770      	bx	lr

080030a0 <PendSV_Handler>:
 80030a0:	b480      	push	{r7}
 80030a2:	af00      	add	r7, sp, #0
 80030a4:	bf00      	nop
 80030a6:	46bd      	mov	sp, r7
 80030a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030ac:	4770      	bx	lr

080030ae <SysTick_Handler>:
 80030ae:	b580      	push	{r7, lr}
 80030b0:	af00      	add	r7, sp, #0
 80030b2:	f000 f9a9 	bl	8003408 <HAL_IncTick>
 80030b6:	bf00      	nop
 80030b8:	bd80      	pop	{r7, pc}
	...

080030bc <EXTI0_IRQHandler>:
 80030bc:	b580      	push	{r7, lr}
 80030be:	af00      	add	r7, sp, #0
 80030c0:	4b03      	ldr	r3, [pc, #12]	@ (80030d0 <EXTI0_IRQHandler+0x14>)
 80030c2:	2201      	movs	r2, #1
 80030c4:	601a      	str	r2, [r3, #0]
 80030c6:	2001      	movs	r0, #1
 80030c8:	f001 f82a 	bl	8004120 <HAL_GPIO_EXTI_IRQHandler>
 80030cc:	bf00      	nop
 80030ce:	bd80      	pop	{r7, pc}
 80030d0:	200004d0 	.word	0x200004d0

080030d4 <EXTI9_5_IRQHandler>:
 80030d4:	b580      	push	{r7, lr}
 80030d6:	b082      	sub	sp, #8
 80030d8:	af00      	add	r7, sp, #0
 80030da:	f000 f9a9 	bl	8003430 <HAL_GetTick>
 80030de:	6078      	str	r0, [r7, #4]
 80030e0:	4b09      	ldr	r3, [pc, #36]	@ (8003108 <EXTI9_5_IRQHandler+0x34>)
 80030e2:	681b      	ldr	r3, [r3, #0]
 80030e4:	687a      	ldr	r2, [r7, #4]
 80030e6:	1ad3      	subs	r3, r2, r3
 80030e8:	2b64      	cmp	r3, #100	@ 0x64
 80030ea:	d905      	bls.n	80030f8 <EXTI9_5_IRQHandler+0x24>
 80030ec:	4b07      	ldr	r3, [pc, #28]	@ (800310c <EXTI9_5_IRQHandler+0x38>)
 80030ee:	2201      	movs	r2, #1
 80030f0:	601a      	str	r2, [r3, #0]
 80030f2:	4a05      	ldr	r2, [pc, #20]	@ (8003108 <EXTI9_5_IRQHandler+0x34>)
 80030f4:	687b      	ldr	r3, [r7, #4]
 80030f6:	6013      	str	r3, [r2, #0]
 80030f8:	f44f 7080 	mov.w	r0, #256	@ 0x100
 80030fc:	f001 f810 	bl	8004120 <HAL_GPIO_EXTI_IRQHandler>
 8003100:	bf00      	nop
 8003102:	3708      	adds	r7, #8
 8003104:	46bd      	mov	sp, r7
 8003106:	bd80      	pop	{r7, pc}
 8003108:	200004e4 	.word	0x200004e4
 800310c:	200004d4 	.word	0x200004d4

08003110 <EXTI15_10_IRQHandler>:
 8003110:	b580      	push	{r7, lr}
 8003112:	b082      	sub	sp, #8
 8003114:	af00      	add	r7, sp, #0
 8003116:	f000 f98b 	bl	8003430 <HAL_GetTick>
 800311a:	6078      	str	r0, [r7, #4]
 800311c:	4b09      	ldr	r3, [pc, #36]	@ (8003144 <EXTI15_10_IRQHandler+0x34>)
 800311e:	681b      	ldr	r3, [r3, #0]
 8003120:	687a      	ldr	r2, [r7, #4]
 8003122:	1ad3      	subs	r3, r2, r3
 8003124:	2b64      	cmp	r3, #100	@ 0x64
 8003126:	d905      	bls.n	8003134 <EXTI15_10_IRQHandler+0x24>
 8003128:	4b07      	ldr	r3, [pc, #28]	@ (8003148 <EXTI15_10_IRQHandler+0x38>)
 800312a:	2201      	movs	r2, #1
 800312c:	601a      	str	r2, [r3, #0]
 800312e:	4a05      	ldr	r2, [pc, #20]	@ (8003144 <EXTI15_10_IRQHandler+0x34>)
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	6013      	str	r3, [r2, #0]
 8003134:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8003138:	f000 fff2 	bl	8004120 <HAL_GPIO_EXTI_IRQHandler>
 800313c:	bf00      	nop
 800313e:	3708      	adds	r7, #8
 8003140:	46bd      	mov	sp, r7
 8003142:	bd80      	pop	{r7, pc}
 8003144:	200004e4 	.word	0x200004e4
 8003148:	200004d8 	.word	0x200004d8

0800314c <DMA2_Stream4_IRQHandler>:
 800314c:	b580      	push	{r7, lr}
 800314e:	af00      	add	r7, sp, #0
 8003150:	4802      	ldr	r0, [pc, #8]	@ (800315c <DMA2_Stream4_IRQHandler+0x10>)
 8003152:	f000 fbb5 	bl	80038c0 <HAL_DMA_IRQHandler>
 8003156:	bf00      	nop
 8003158:	bd80      	pop	{r7, pc}
 800315a:	bf00      	nop
 800315c:	20000114 	.word	0x20000114

08003160 <_getpid>:
 8003160:	b480      	push	{r7}
 8003162:	af00      	add	r7, sp, #0
 8003164:	2301      	movs	r3, #1
 8003166:	4618      	mov	r0, r3
 8003168:	46bd      	mov	sp, r7
 800316a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800316e:	4770      	bx	lr

08003170 <_kill>:
 8003170:	b580      	push	{r7, lr}
 8003172:	b082      	sub	sp, #8
 8003174:	af00      	add	r7, sp, #0
 8003176:	6078      	str	r0, [r7, #4]
 8003178:	6039      	str	r1, [r7, #0]
 800317a:	f002 fd6f 	bl	8005c5c <__errno>
 800317e:	4603      	mov	r3, r0
 8003180:	2216      	movs	r2, #22
 8003182:	601a      	str	r2, [r3, #0]
 8003184:	f04f 33ff 	mov.w	r3, #4294967295
 8003188:	4618      	mov	r0, r3
 800318a:	3708      	adds	r7, #8
 800318c:	46bd      	mov	sp, r7
 800318e:	bd80      	pop	{r7, pc}

08003190 <_exit>:
 8003190:	b580      	push	{r7, lr}
 8003192:	b082      	sub	sp, #8
 8003194:	af00      	add	r7, sp, #0
 8003196:	6078      	str	r0, [r7, #4]
 8003198:	f04f 31ff 	mov.w	r1, #4294967295
 800319c:	6878      	ldr	r0, [r7, #4]
 800319e:	f7ff ffe7 	bl	8003170 <_kill>
 80031a2:	bf00      	nop
 80031a4:	e7fd      	b.n	80031a2 <_exit+0x12>

080031a6 <_read>:
 80031a6:	b580      	push	{r7, lr}
 80031a8:	b086      	sub	sp, #24
 80031aa:	af00      	add	r7, sp, #0
 80031ac:	60f8      	str	r0, [r7, #12]
 80031ae:	60b9      	str	r1, [r7, #8]
 80031b0:	607a      	str	r2, [r7, #4]
 80031b2:	2300      	movs	r3, #0
 80031b4:	617b      	str	r3, [r7, #20]
 80031b6:	e00a      	b.n	80031ce <_read+0x28>
 80031b8:	f3af 8000 	nop.w
 80031bc:	4601      	mov	r1, r0
 80031be:	68bb      	ldr	r3, [r7, #8]
 80031c0:	1c5a      	adds	r2, r3, #1
 80031c2:	60ba      	str	r2, [r7, #8]
 80031c4:	b2ca      	uxtb	r2, r1
 80031c6:	701a      	strb	r2, [r3, #0]
 80031c8:	697b      	ldr	r3, [r7, #20]
 80031ca:	3301      	adds	r3, #1
 80031cc:	617b      	str	r3, [r7, #20]
 80031ce:	697a      	ldr	r2, [r7, #20]
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	429a      	cmp	r2, r3
 80031d4:	dbf0      	blt.n	80031b8 <_read+0x12>
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	4618      	mov	r0, r3
 80031da:	3718      	adds	r7, #24
 80031dc:	46bd      	mov	sp, r7
 80031de:	bd80      	pop	{r7, pc}

080031e0 <_write>:
 80031e0:	b580      	push	{r7, lr}
 80031e2:	b086      	sub	sp, #24
 80031e4:	af00      	add	r7, sp, #0
 80031e6:	60f8      	str	r0, [r7, #12]
 80031e8:	60b9      	str	r1, [r7, #8]
 80031ea:	607a      	str	r2, [r7, #4]
 80031ec:	2300      	movs	r3, #0
 80031ee:	617b      	str	r3, [r7, #20]
 80031f0:	e009      	b.n	8003206 <_write+0x26>
 80031f2:	68bb      	ldr	r3, [r7, #8]
 80031f4:	1c5a      	adds	r2, r3, #1
 80031f6:	60ba      	str	r2, [r7, #8]
 80031f8:	781b      	ldrb	r3, [r3, #0]
 80031fa:	4618      	mov	r0, r3
 80031fc:	f3af 8000 	nop.w
 8003200:	697b      	ldr	r3, [r7, #20]
 8003202:	3301      	adds	r3, #1
 8003204:	617b      	str	r3, [r7, #20]
 8003206:	697a      	ldr	r2, [r7, #20]
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	429a      	cmp	r2, r3
 800320c:	dbf1      	blt.n	80031f2 <_write+0x12>
 800320e:	687b      	ldr	r3, [r7, #4]
 8003210:	4618      	mov	r0, r3
 8003212:	3718      	adds	r7, #24
 8003214:	46bd      	mov	sp, r7
 8003216:	bd80      	pop	{r7, pc}

08003218 <_close>:
 8003218:	b480      	push	{r7}
 800321a:	b083      	sub	sp, #12
 800321c:	af00      	add	r7, sp, #0
 800321e:	6078      	str	r0, [r7, #4]
 8003220:	f04f 33ff 	mov.w	r3, #4294967295
 8003224:	4618      	mov	r0, r3
 8003226:	370c      	adds	r7, #12
 8003228:	46bd      	mov	sp, r7
 800322a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800322e:	4770      	bx	lr

08003230 <_fstat>:
 8003230:	b480      	push	{r7}
 8003232:	b083      	sub	sp, #12
 8003234:	af00      	add	r7, sp, #0
 8003236:	6078      	str	r0, [r7, #4]
 8003238:	6039      	str	r1, [r7, #0]
 800323a:	683b      	ldr	r3, [r7, #0]
 800323c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8003240:	605a      	str	r2, [r3, #4]
 8003242:	2300      	movs	r3, #0
 8003244:	4618      	mov	r0, r3
 8003246:	370c      	adds	r7, #12
 8003248:	46bd      	mov	sp, r7
 800324a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800324e:	4770      	bx	lr

08003250 <_isatty>:
 8003250:	b480      	push	{r7}
 8003252:	b083      	sub	sp, #12
 8003254:	af00      	add	r7, sp, #0
 8003256:	6078      	str	r0, [r7, #4]
 8003258:	2301      	movs	r3, #1
 800325a:	4618      	mov	r0, r3
 800325c:	370c      	adds	r7, #12
 800325e:	46bd      	mov	sp, r7
 8003260:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003264:	4770      	bx	lr

08003266 <_lseek>:
 8003266:	b480      	push	{r7}
 8003268:	b085      	sub	sp, #20
 800326a:	af00      	add	r7, sp, #0
 800326c:	60f8      	str	r0, [r7, #12]
 800326e:	60b9      	str	r1, [r7, #8]
 8003270:	607a      	str	r2, [r7, #4]
 8003272:	2300      	movs	r3, #0
 8003274:	4618      	mov	r0, r3
 8003276:	3714      	adds	r7, #20
 8003278:	46bd      	mov	sp, r7
 800327a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800327e:	4770      	bx	lr

08003280 <_sbrk>:
 8003280:	b580      	push	{r7, lr}
 8003282:	b086      	sub	sp, #24
 8003284:	af00      	add	r7, sp, #0
 8003286:	6078      	str	r0, [r7, #4]
 8003288:	4a14      	ldr	r2, [pc, #80]	@ (80032dc <_sbrk+0x5c>)
 800328a:	4b15      	ldr	r3, [pc, #84]	@ (80032e0 <_sbrk+0x60>)
 800328c:	1ad3      	subs	r3, r2, r3
 800328e:	617b      	str	r3, [r7, #20]
 8003290:	697b      	ldr	r3, [r7, #20]
 8003292:	613b      	str	r3, [r7, #16]
 8003294:	4b13      	ldr	r3, [pc, #76]	@ (80032e4 <_sbrk+0x64>)
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	2b00      	cmp	r3, #0
 800329a:	d102      	bne.n	80032a2 <_sbrk+0x22>
 800329c:	4b11      	ldr	r3, [pc, #68]	@ (80032e4 <_sbrk+0x64>)
 800329e:	4a12      	ldr	r2, [pc, #72]	@ (80032e8 <_sbrk+0x68>)
 80032a0:	601a      	str	r2, [r3, #0]
 80032a2:	4b10      	ldr	r3, [pc, #64]	@ (80032e4 <_sbrk+0x64>)
 80032a4:	681a      	ldr	r2, [r3, #0]
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	4413      	add	r3, r2
 80032aa:	693a      	ldr	r2, [r7, #16]
 80032ac:	429a      	cmp	r2, r3
 80032ae:	d207      	bcs.n	80032c0 <_sbrk+0x40>
 80032b0:	f002 fcd4 	bl	8005c5c <__errno>
 80032b4:	4603      	mov	r3, r0
 80032b6:	220c      	movs	r2, #12
 80032b8:	601a      	str	r2, [r3, #0]
 80032ba:	f04f 33ff 	mov.w	r3, #4294967295
 80032be:	e009      	b.n	80032d4 <_sbrk+0x54>
 80032c0:	4b08      	ldr	r3, [pc, #32]	@ (80032e4 <_sbrk+0x64>)
 80032c2:	681b      	ldr	r3, [r3, #0]
 80032c4:	60fb      	str	r3, [r7, #12]
 80032c6:	4b07      	ldr	r3, [pc, #28]	@ (80032e4 <_sbrk+0x64>)
 80032c8:	681a      	ldr	r2, [r3, #0]
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	4413      	add	r3, r2
 80032ce:	4a05      	ldr	r2, [pc, #20]	@ (80032e4 <_sbrk+0x64>)
 80032d0:	6013      	str	r3, [r2, #0]
 80032d2:	68fb      	ldr	r3, [r7, #12]
 80032d4:	4618      	mov	r0, r3
 80032d6:	3718      	adds	r7, #24
 80032d8:	46bd      	mov	sp, r7
 80032da:	bd80      	pop	{r7, pc}
 80032dc:	20030000 	.word	0x20030000
 80032e0:	00000400 	.word	0x00000400
 80032e4:	200004e8 	.word	0x200004e8
 80032e8:	20000640 	.word	0x20000640

080032ec <SystemInit>:
 80032ec:	b480      	push	{r7}
 80032ee:	af00      	add	r7, sp, #0
 80032f0:	4b06      	ldr	r3, [pc, #24]	@ (800330c <SystemInit+0x20>)
 80032f2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80032f6:	4a05      	ldr	r2, [pc, #20]	@ (800330c <SystemInit+0x20>)
 80032f8:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80032fc:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8003300:	bf00      	nop
 8003302:	46bd      	mov	sp, r7
 8003304:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003308:	4770      	bx	lr
 800330a:	bf00      	nop
 800330c:	e000ed00 	.word	0xe000ed00

08003310 <Reset_Handler>:
 8003310:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8003348 <LoopFillZerobss+0xe>
 8003314:	f7ff ffea 	bl	80032ec <SystemInit>
 8003318:	480c      	ldr	r0, [pc, #48]	@ (800334c <LoopFillZerobss+0x12>)
 800331a:	490d      	ldr	r1, [pc, #52]	@ (8003350 <LoopFillZerobss+0x16>)
 800331c:	4a0d      	ldr	r2, [pc, #52]	@ (8003354 <LoopFillZerobss+0x1a>)
 800331e:	2300      	movs	r3, #0
 8003320:	e002      	b.n	8003328 <LoopCopyDataInit>

08003322 <CopyDataInit>:
 8003322:	58d4      	ldr	r4, [r2, r3]
 8003324:	50c4      	str	r4, [r0, r3]
 8003326:	3304      	adds	r3, #4

08003328 <LoopCopyDataInit>:
 8003328:	18c4      	adds	r4, r0, r3
 800332a:	428c      	cmp	r4, r1
 800332c:	d3f9      	bcc.n	8003322 <CopyDataInit>
 800332e:	4a0a      	ldr	r2, [pc, #40]	@ (8003358 <LoopFillZerobss+0x1e>)
 8003330:	4c0a      	ldr	r4, [pc, #40]	@ (800335c <LoopFillZerobss+0x22>)
 8003332:	2300      	movs	r3, #0
 8003334:	e001      	b.n	800333a <LoopFillZerobss>

08003336 <FillZerobss>:
 8003336:	6013      	str	r3, [r2, #0]
 8003338:	3204      	adds	r2, #4

0800333a <LoopFillZerobss>:
 800333a:	42a2      	cmp	r2, r4
 800333c:	d3fb      	bcc.n	8003336 <FillZerobss>
 800333e:	f002 fc93 	bl	8005c68 <__libc_init_array>
 8003342:	f7ff f9f7 	bl	8002734 <main>
 8003346:	4770      	bx	lr
 8003348:	20030000 	.word	0x20030000
 800334c:	20000000 	.word	0x20000000
 8003350:	20000080 	.word	0x20000080
 8003354:	080085b4 	.word	0x080085b4
 8003358:	20000080 	.word	0x20000080
 800335c:	2000063c 	.word	0x2000063c

08003360 <ADC_IRQHandler>:
 8003360:	e7fe      	b.n	8003360 <ADC_IRQHandler>
	...

08003364 <HAL_Init>:
 8003364:	b580      	push	{r7, lr}
 8003366:	af00      	add	r7, sp, #0
 8003368:	4b0e      	ldr	r3, [pc, #56]	@ (80033a4 <HAL_Init+0x40>)
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	4a0d      	ldr	r2, [pc, #52]	@ (80033a4 <HAL_Init+0x40>)
 800336e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8003372:	6013      	str	r3, [r2, #0]
 8003374:	4b0b      	ldr	r3, [pc, #44]	@ (80033a4 <HAL_Init+0x40>)
 8003376:	681b      	ldr	r3, [r3, #0]
 8003378:	4a0a      	ldr	r2, [pc, #40]	@ (80033a4 <HAL_Init+0x40>)
 800337a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800337e:	6013      	str	r3, [r2, #0]
 8003380:	4b08      	ldr	r3, [pc, #32]	@ (80033a4 <HAL_Init+0x40>)
 8003382:	681b      	ldr	r3, [r3, #0]
 8003384:	4a07      	ldr	r2, [pc, #28]	@ (80033a4 <HAL_Init+0x40>)
 8003386:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800338a:	6013      	str	r3, [r2, #0]
 800338c:	2003      	movs	r0, #3
 800338e:	f000 f94f 	bl	8003630 <HAL_NVIC_SetPriorityGrouping>
 8003392:	200f      	movs	r0, #15
 8003394:	f000 f808 	bl	80033a8 <HAL_InitTick>
 8003398:	f7ff fd94 	bl	8002ec4 <HAL_MspInit>
 800339c:	2300      	movs	r3, #0
 800339e:	4618      	mov	r0, r3
 80033a0:	bd80      	pop	{r7, pc}
 80033a2:	bf00      	nop
 80033a4:	40023c00 	.word	0x40023c00

080033a8 <HAL_InitTick>:
 80033a8:	b580      	push	{r7, lr}
 80033aa:	b082      	sub	sp, #8
 80033ac:	af00      	add	r7, sp, #0
 80033ae:	6078      	str	r0, [r7, #4]
 80033b0:	4b12      	ldr	r3, [pc, #72]	@ (80033fc <HAL_InitTick+0x54>)
 80033b2:	681a      	ldr	r2, [r3, #0]
 80033b4:	4b12      	ldr	r3, [pc, #72]	@ (8003400 <HAL_InitTick+0x58>)
 80033b6:	781b      	ldrb	r3, [r3, #0]
 80033b8:	4619      	mov	r1, r3
 80033ba:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80033be:	fbb3 f3f1 	udiv	r3, r3, r1
 80033c2:	fbb2 f3f3 	udiv	r3, r2, r3
 80033c6:	4618      	mov	r0, r3
 80033c8:	f000 f967 	bl	800369a <HAL_SYSTICK_Config>
 80033cc:	4603      	mov	r3, r0
 80033ce:	2b00      	cmp	r3, #0
 80033d0:	d001      	beq.n	80033d6 <HAL_InitTick+0x2e>
 80033d2:	2301      	movs	r3, #1
 80033d4:	e00e      	b.n	80033f4 <HAL_InitTick+0x4c>
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	2b0f      	cmp	r3, #15
 80033da:	d80a      	bhi.n	80033f2 <HAL_InitTick+0x4a>
 80033dc:	2200      	movs	r2, #0
 80033de:	6879      	ldr	r1, [r7, #4]
 80033e0:	f04f 30ff 	mov.w	r0, #4294967295
 80033e4:	f000 f92f 	bl	8003646 <HAL_NVIC_SetPriority>
 80033e8:	4a06      	ldr	r2, [pc, #24]	@ (8003404 <HAL_InitTick+0x5c>)
 80033ea:	687b      	ldr	r3, [r7, #4]
 80033ec:	6013      	str	r3, [r2, #0]
 80033ee:	2300      	movs	r3, #0
 80033f0:	e000      	b.n	80033f4 <HAL_InitTick+0x4c>
 80033f2:	2301      	movs	r3, #1
 80033f4:	4618      	mov	r0, r3
 80033f6:	3708      	adds	r7, #8
 80033f8:	46bd      	mov	sp, r7
 80033fa:	bd80      	pop	{r7, pc}
 80033fc:	20000018 	.word	0x20000018
 8003400:	20000020 	.word	0x20000020
 8003404:	2000001c 	.word	0x2000001c

08003408 <HAL_IncTick>:
 8003408:	b480      	push	{r7}
 800340a:	af00      	add	r7, sp, #0
 800340c:	4b06      	ldr	r3, [pc, #24]	@ (8003428 <HAL_IncTick+0x20>)
 800340e:	781b      	ldrb	r3, [r3, #0]
 8003410:	461a      	mov	r2, r3
 8003412:	4b06      	ldr	r3, [pc, #24]	@ (800342c <HAL_IncTick+0x24>)
 8003414:	681b      	ldr	r3, [r3, #0]
 8003416:	4413      	add	r3, r2
 8003418:	4a04      	ldr	r2, [pc, #16]	@ (800342c <HAL_IncTick+0x24>)
 800341a:	6013      	str	r3, [r2, #0]
 800341c:	bf00      	nop
 800341e:	46bd      	mov	sp, r7
 8003420:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003424:	4770      	bx	lr
 8003426:	bf00      	nop
 8003428:	20000020 	.word	0x20000020
 800342c:	200004ec 	.word	0x200004ec

08003430 <HAL_GetTick>:
 8003430:	b480      	push	{r7}
 8003432:	af00      	add	r7, sp, #0
 8003434:	4b03      	ldr	r3, [pc, #12]	@ (8003444 <HAL_GetTick+0x14>)
 8003436:	681b      	ldr	r3, [r3, #0]
 8003438:	4618      	mov	r0, r3
 800343a:	46bd      	mov	sp, r7
 800343c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003440:	4770      	bx	lr
 8003442:	bf00      	nop
 8003444:	200004ec 	.word	0x200004ec

08003448 <HAL_Delay>:
 8003448:	b580      	push	{r7, lr}
 800344a:	b084      	sub	sp, #16
 800344c:	af00      	add	r7, sp, #0
 800344e:	6078      	str	r0, [r7, #4]
 8003450:	f7ff ffee 	bl	8003430 <HAL_GetTick>
 8003454:	60b8      	str	r0, [r7, #8]
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	60fb      	str	r3, [r7, #12]
 800345a:	68fb      	ldr	r3, [r7, #12]
 800345c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003460:	d005      	beq.n	800346e <HAL_Delay+0x26>
 8003462:	4b0a      	ldr	r3, [pc, #40]	@ (800348c <HAL_Delay+0x44>)
 8003464:	781b      	ldrb	r3, [r3, #0]
 8003466:	461a      	mov	r2, r3
 8003468:	68fb      	ldr	r3, [r7, #12]
 800346a:	4413      	add	r3, r2
 800346c:	60fb      	str	r3, [r7, #12]
 800346e:	bf00      	nop
 8003470:	f7ff ffde 	bl	8003430 <HAL_GetTick>
 8003474:	4602      	mov	r2, r0
 8003476:	68bb      	ldr	r3, [r7, #8]
 8003478:	1ad3      	subs	r3, r2, r3
 800347a:	68fa      	ldr	r2, [r7, #12]
 800347c:	429a      	cmp	r2, r3
 800347e:	d8f7      	bhi.n	8003470 <HAL_Delay+0x28>
 8003480:	bf00      	nop
 8003482:	bf00      	nop
 8003484:	3710      	adds	r7, #16
 8003486:	46bd      	mov	sp, r7
 8003488:	bd80      	pop	{r7, pc}
 800348a:	bf00      	nop
 800348c:	20000020 	.word	0x20000020

08003490 <__NVIC_SetPriorityGrouping>:
 8003490:	b480      	push	{r7}
 8003492:	b085      	sub	sp, #20
 8003494:	af00      	add	r7, sp, #0
 8003496:	6078      	str	r0, [r7, #4]
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	f003 0307 	and.w	r3, r3, #7
 800349e:	60fb      	str	r3, [r7, #12]
 80034a0:	4b0c      	ldr	r3, [pc, #48]	@ (80034d4 <__NVIC_SetPriorityGrouping+0x44>)
 80034a2:	68db      	ldr	r3, [r3, #12]
 80034a4:	60bb      	str	r3, [r7, #8]
 80034a6:	68ba      	ldr	r2, [r7, #8]
 80034a8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80034ac:	4013      	ands	r3, r2
 80034ae:	60bb      	str	r3, [r7, #8]
 80034b0:	68fb      	ldr	r3, [r7, #12]
 80034b2:	021a      	lsls	r2, r3, #8
 80034b4:	68bb      	ldr	r3, [r7, #8]
 80034b6:	4313      	orrs	r3, r2
 80034b8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80034bc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80034c0:	60bb      	str	r3, [r7, #8]
 80034c2:	4a04      	ldr	r2, [pc, #16]	@ (80034d4 <__NVIC_SetPriorityGrouping+0x44>)
 80034c4:	68bb      	ldr	r3, [r7, #8]
 80034c6:	60d3      	str	r3, [r2, #12]
 80034c8:	bf00      	nop
 80034ca:	3714      	adds	r7, #20
 80034cc:	46bd      	mov	sp, r7
 80034ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034d2:	4770      	bx	lr
 80034d4:	e000ed00 	.word	0xe000ed00

080034d8 <__NVIC_GetPriorityGrouping>:
 80034d8:	b480      	push	{r7}
 80034da:	af00      	add	r7, sp, #0
 80034dc:	4b04      	ldr	r3, [pc, #16]	@ (80034f0 <__NVIC_GetPriorityGrouping+0x18>)
 80034de:	68db      	ldr	r3, [r3, #12]
 80034e0:	0a1b      	lsrs	r3, r3, #8
 80034e2:	f003 0307 	and.w	r3, r3, #7
 80034e6:	4618      	mov	r0, r3
 80034e8:	46bd      	mov	sp, r7
 80034ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034ee:	4770      	bx	lr
 80034f0:	e000ed00 	.word	0xe000ed00

080034f4 <__NVIC_EnableIRQ>:
 80034f4:	b480      	push	{r7}
 80034f6:	b083      	sub	sp, #12
 80034f8:	af00      	add	r7, sp, #0
 80034fa:	4603      	mov	r3, r0
 80034fc:	71fb      	strb	r3, [r7, #7]
 80034fe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003502:	2b00      	cmp	r3, #0
 8003504:	db0b      	blt.n	800351e <__NVIC_EnableIRQ+0x2a>
 8003506:	79fb      	ldrb	r3, [r7, #7]
 8003508:	f003 021f 	and.w	r2, r3, #31
 800350c:	4907      	ldr	r1, [pc, #28]	@ (800352c <__NVIC_EnableIRQ+0x38>)
 800350e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003512:	095b      	lsrs	r3, r3, #5
 8003514:	2001      	movs	r0, #1
 8003516:	fa00 f202 	lsl.w	r2, r0, r2
 800351a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800351e:	bf00      	nop
 8003520:	370c      	adds	r7, #12
 8003522:	46bd      	mov	sp, r7
 8003524:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003528:	4770      	bx	lr
 800352a:	bf00      	nop
 800352c:	e000e100 	.word	0xe000e100

08003530 <__NVIC_SetPriority>:
 8003530:	b480      	push	{r7}
 8003532:	b083      	sub	sp, #12
 8003534:	af00      	add	r7, sp, #0
 8003536:	4603      	mov	r3, r0
 8003538:	6039      	str	r1, [r7, #0]
 800353a:	71fb      	strb	r3, [r7, #7]
 800353c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003540:	2b00      	cmp	r3, #0
 8003542:	db0a      	blt.n	800355a <__NVIC_SetPriority+0x2a>
 8003544:	683b      	ldr	r3, [r7, #0]
 8003546:	b2da      	uxtb	r2, r3
 8003548:	490c      	ldr	r1, [pc, #48]	@ (800357c <__NVIC_SetPriority+0x4c>)
 800354a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800354e:	0112      	lsls	r2, r2, #4
 8003550:	b2d2      	uxtb	r2, r2
 8003552:	440b      	add	r3, r1
 8003554:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8003558:	e00a      	b.n	8003570 <__NVIC_SetPriority+0x40>
 800355a:	683b      	ldr	r3, [r7, #0]
 800355c:	b2da      	uxtb	r2, r3
 800355e:	4908      	ldr	r1, [pc, #32]	@ (8003580 <__NVIC_SetPriority+0x50>)
 8003560:	79fb      	ldrb	r3, [r7, #7]
 8003562:	f003 030f 	and.w	r3, r3, #15
 8003566:	3b04      	subs	r3, #4
 8003568:	0112      	lsls	r2, r2, #4
 800356a:	b2d2      	uxtb	r2, r2
 800356c:	440b      	add	r3, r1
 800356e:	761a      	strb	r2, [r3, #24]
 8003570:	bf00      	nop
 8003572:	370c      	adds	r7, #12
 8003574:	46bd      	mov	sp, r7
 8003576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800357a:	4770      	bx	lr
 800357c:	e000e100 	.word	0xe000e100
 8003580:	e000ed00 	.word	0xe000ed00

08003584 <NVIC_EncodePriority>:
 8003584:	b480      	push	{r7}
 8003586:	b089      	sub	sp, #36	@ 0x24
 8003588:	af00      	add	r7, sp, #0
 800358a:	60f8      	str	r0, [r7, #12]
 800358c:	60b9      	str	r1, [r7, #8]
 800358e:	607a      	str	r2, [r7, #4]
 8003590:	68fb      	ldr	r3, [r7, #12]
 8003592:	f003 0307 	and.w	r3, r3, #7
 8003596:	61fb      	str	r3, [r7, #28]
 8003598:	69fb      	ldr	r3, [r7, #28]
 800359a:	f1c3 0307 	rsb	r3, r3, #7
 800359e:	2b04      	cmp	r3, #4
 80035a0:	bf28      	it	cs
 80035a2:	2304      	movcs	r3, #4
 80035a4:	61bb      	str	r3, [r7, #24]
 80035a6:	69fb      	ldr	r3, [r7, #28]
 80035a8:	3304      	adds	r3, #4
 80035aa:	2b06      	cmp	r3, #6
 80035ac:	d902      	bls.n	80035b4 <NVIC_EncodePriority+0x30>
 80035ae:	69fb      	ldr	r3, [r7, #28]
 80035b0:	3b03      	subs	r3, #3
 80035b2:	e000      	b.n	80035b6 <NVIC_EncodePriority+0x32>
 80035b4:	2300      	movs	r3, #0
 80035b6:	617b      	str	r3, [r7, #20]
 80035b8:	f04f 32ff 	mov.w	r2, #4294967295
 80035bc:	69bb      	ldr	r3, [r7, #24]
 80035be:	fa02 f303 	lsl.w	r3, r2, r3
 80035c2:	43da      	mvns	r2, r3
 80035c4:	68bb      	ldr	r3, [r7, #8]
 80035c6:	401a      	ands	r2, r3
 80035c8:	697b      	ldr	r3, [r7, #20]
 80035ca:	409a      	lsls	r2, r3
 80035cc:	f04f 31ff 	mov.w	r1, #4294967295
 80035d0:	697b      	ldr	r3, [r7, #20]
 80035d2:	fa01 f303 	lsl.w	r3, r1, r3
 80035d6:	43d9      	mvns	r1, r3
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	400b      	ands	r3, r1
 80035dc:	4313      	orrs	r3, r2
 80035de:	4618      	mov	r0, r3
 80035e0:	3724      	adds	r7, #36	@ 0x24
 80035e2:	46bd      	mov	sp, r7
 80035e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035e8:	4770      	bx	lr
	...

080035ec <SysTick_Config>:
 80035ec:	b580      	push	{r7, lr}
 80035ee:	b082      	sub	sp, #8
 80035f0:	af00      	add	r7, sp, #0
 80035f2:	6078      	str	r0, [r7, #4]
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	3b01      	subs	r3, #1
 80035f8:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80035fc:	d301      	bcc.n	8003602 <SysTick_Config+0x16>
 80035fe:	2301      	movs	r3, #1
 8003600:	e00f      	b.n	8003622 <SysTick_Config+0x36>
 8003602:	4a0a      	ldr	r2, [pc, #40]	@ (800362c <SysTick_Config+0x40>)
 8003604:	687b      	ldr	r3, [r7, #4]
 8003606:	3b01      	subs	r3, #1
 8003608:	6053      	str	r3, [r2, #4]
 800360a:	210f      	movs	r1, #15
 800360c:	f04f 30ff 	mov.w	r0, #4294967295
 8003610:	f7ff ff8e 	bl	8003530 <__NVIC_SetPriority>
 8003614:	4b05      	ldr	r3, [pc, #20]	@ (800362c <SysTick_Config+0x40>)
 8003616:	2200      	movs	r2, #0
 8003618:	609a      	str	r2, [r3, #8]
 800361a:	4b04      	ldr	r3, [pc, #16]	@ (800362c <SysTick_Config+0x40>)
 800361c:	2207      	movs	r2, #7
 800361e:	601a      	str	r2, [r3, #0]
 8003620:	2300      	movs	r3, #0
 8003622:	4618      	mov	r0, r3
 8003624:	3708      	adds	r7, #8
 8003626:	46bd      	mov	sp, r7
 8003628:	bd80      	pop	{r7, pc}
 800362a:	bf00      	nop
 800362c:	e000e010 	.word	0xe000e010

08003630 <HAL_NVIC_SetPriorityGrouping>:
 8003630:	b580      	push	{r7, lr}
 8003632:	b082      	sub	sp, #8
 8003634:	af00      	add	r7, sp, #0
 8003636:	6078      	str	r0, [r7, #4]
 8003638:	6878      	ldr	r0, [r7, #4]
 800363a:	f7ff ff29 	bl	8003490 <__NVIC_SetPriorityGrouping>
 800363e:	bf00      	nop
 8003640:	3708      	adds	r7, #8
 8003642:	46bd      	mov	sp, r7
 8003644:	bd80      	pop	{r7, pc}

08003646 <HAL_NVIC_SetPriority>:
 8003646:	b580      	push	{r7, lr}
 8003648:	b086      	sub	sp, #24
 800364a:	af00      	add	r7, sp, #0
 800364c:	4603      	mov	r3, r0
 800364e:	60b9      	str	r1, [r7, #8]
 8003650:	607a      	str	r2, [r7, #4]
 8003652:	73fb      	strb	r3, [r7, #15]
 8003654:	2300      	movs	r3, #0
 8003656:	617b      	str	r3, [r7, #20]
 8003658:	f7ff ff3e 	bl	80034d8 <__NVIC_GetPriorityGrouping>
 800365c:	6178      	str	r0, [r7, #20]
 800365e:	687a      	ldr	r2, [r7, #4]
 8003660:	68b9      	ldr	r1, [r7, #8]
 8003662:	6978      	ldr	r0, [r7, #20]
 8003664:	f7ff ff8e 	bl	8003584 <NVIC_EncodePriority>
 8003668:	4602      	mov	r2, r0
 800366a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800366e:	4611      	mov	r1, r2
 8003670:	4618      	mov	r0, r3
 8003672:	f7ff ff5d 	bl	8003530 <__NVIC_SetPriority>
 8003676:	bf00      	nop
 8003678:	3718      	adds	r7, #24
 800367a:	46bd      	mov	sp, r7
 800367c:	bd80      	pop	{r7, pc}

0800367e <HAL_NVIC_EnableIRQ>:
 800367e:	b580      	push	{r7, lr}
 8003680:	b082      	sub	sp, #8
 8003682:	af00      	add	r7, sp, #0
 8003684:	4603      	mov	r3, r0
 8003686:	71fb      	strb	r3, [r7, #7]
 8003688:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800368c:	4618      	mov	r0, r3
 800368e:	f7ff ff31 	bl	80034f4 <__NVIC_EnableIRQ>
 8003692:	bf00      	nop
 8003694:	3708      	adds	r7, #8
 8003696:	46bd      	mov	sp, r7
 8003698:	bd80      	pop	{r7, pc}

0800369a <HAL_SYSTICK_Config>:
 800369a:	b580      	push	{r7, lr}
 800369c:	b082      	sub	sp, #8
 800369e:	af00      	add	r7, sp, #0
 80036a0:	6078      	str	r0, [r7, #4]
 80036a2:	6878      	ldr	r0, [r7, #4]
 80036a4:	f7ff ffa2 	bl	80035ec <SysTick_Config>
 80036a8:	4603      	mov	r3, r0
 80036aa:	4618      	mov	r0, r3
 80036ac:	3708      	adds	r7, #8
 80036ae:	46bd      	mov	sp, r7
 80036b0:	bd80      	pop	{r7, pc}
	...

080036b4 <HAL_DMA_Init>:
 80036b4:	b580      	push	{r7, lr}
 80036b6:	b086      	sub	sp, #24
 80036b8:	af00      	add	r7, sp, #0
 80036ba:	6078      	str	r0, [r7, #4]
 80036bc:	2300      	movs	r3, #0
 80036be:	617b      	str	r3, [r7, #20]
 80036c0:	f7ff feb6 	bl	8003430 <HAL_GetTick>
 80036c4:	6138      	str	r0, [r7, #16]
 80036c6:	687b      	ldr	r3, [r7, #4]
 80036c8:	2b00      	cmp	r3, #0
 80036ca:	d101      	bne.n	80036d0 <HAL_DMA_Init+0x1c>
 80036cc:	2301      	movs	r3, #1
 80036ce:	e099      	b.n	8003804 <HAL_DMA_Init+0x150>
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	2202      	movs	r2, #2
 80036d4:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	2200      	movs	r2, #0
 80036dc:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80036e0:	687b      	ldr	r3, [r7, #4]
 80036e2:	681b      	ldr	r3, [r3, #0]
 80036e4:	681a      	ldr	r2, [r3, #0]
 80036e6:	687b      	ldr	r3, [r7, #4]
 80036e8:	681b      	ldr	r3, [r3, #0]
 80036ea:	f022 0201 	bic.w	r2, r2, #1
 80036ee:	601a      	str	r2, [r3, #0]
 80036f0:	e00f      	b.n	8003712 <HAL_DMA_Init+0x5e>
 80036f2:	f7ff fe9d 	bl	8003430 <HAL_GetTick>
 80036f6:	4602      	mov	r2, r0
 80036f8:	693b      	ldr	r3, [r7, #16]
 80036fa:	1ad3      	subs	r3, r2, r3
 80036fc:	2b05      	cmp	r3, #5
 80036fe:	d908      	bls.n	8003712 <HAL_DMA_Init+0x5e>
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	2220      	movs	r2, #32
 8003704:	655a      	str	r2, [r3, #84]	@ 0x54
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	2203      	movs	r2, #3
 800370a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800370e:	2303      	movs	r3, #3
 8003710:	e078      	b.n	8003804 <HAL_DMA_Init+0x150>
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	681b      	ldr	r3, [r3, #0]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	f003 0301 	and.w	r3, r3, #1
 800371c:	2b00      	cmp	r3, #0
 800371e:	d1e8      	bne.n	80036f2 <HAL_DMA_Init+0x3e>
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	681b      	ldr	r3, [r3, #0]
 8003724:	681b      	ldr	r3, [r3, #0]
 8003726:	617b      	str	r3, [r7, #20]
 8003728:	697a      	ldr	r2, [r7, #20]
 800372a:	4b38      	ldr	r3, [pc, #224]	@ (800380c <HAL_DMA_Init+0x158>)
 800372c:	4013      	ands	r3, r2
 800372e:	617b      	str	r3, [r7, #20]
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	685a      	ldr	r2, [r3, #4]
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	689b      	ldr	r3, [r3, #8]
 8003738:	431a      	orrs	r2, r3
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	68db      	ldr	r3, [r3, #12]
 800373e:	431a      	orrs	r2, r3
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	691b      	ldr	r3, [r3, #16]
 8003744:	431a      	orrs	r2, r3
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	695b      	ldr	r3, [r3, #20]
 800374a:	431a      	orrs	r2, r3
 800374c:	687b      	ldr	r3, [r7, #4]
 800374e:	699b      	ldr	r3, [r3, #24]
 8003750:	431a      	orrs	r2, r3
 8003752:	687b      	ldr	r3, [r7, #4]
 8003754:	69db      	ldr	r3, [r3, #28]
 8003756:	431a      	orrs	r2, r3
 8003758:	687b      	ldr	r3, [r7, #4]
 800375a:	6a1b      	ldr	r3, [r3, #32]
 800375c:	4313      	orrs	r3, r2
 800375e:	697a      	ldr	r2, [r7, #20]
 8003760:	4313      	orrs	r3, r2
 8003762:	617b      	str	r3, [r7, #20]
 8003764:	687b      	ldr	r3, [r7, #4]
 8003766:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003768:	2b04      	cmp	r3, #4
 800376a:	d107      	bne.n	800377c <HAL_DMA_Init+0xc8>
 800376c:	687b      	ldr	r3, [r7, #4]
 800376e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003774:	4313      	orrs	r3, r2
 8003776:	697a      	ldr	r2, [r7, #20]
 8003778:	4313      	orrs	r3, r2
 800377a:	617b      	str	r3, [r7, #20]
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	681b      	ldr	r3, [r3, #0]
 8003780:	697a      	ldr	r2, [r7, #20]
 8003782:	601a      	str	r2, [r3, #0]
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	681b      	ldr	r3, [r3, #0]
 8003788:	695b      	ldr	r3, [r3, #20]
 800378a:	617b      	str	r3, [r7, #20]
 800378c:	697b      	ldr	r3, [r7, #20]
 800378e:	f023 0307 	bic.w	r3, r3, #7
 8003792:	617b      	str	r3, [r7, #20]
 8003794:	687b      	ldr	r3, [r7, #4]
 8003796:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003798:	697a      	ldr	r2, [r7, #20]
 800379a:	4313      	orrs	r3, r2
 800379c:	617b      	str	r3, [r7, #20]
 800379e:	687b      	ldr	r3, [r7, #4]
 80037a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80037a2:	2b04      	cmp	r3, #4
 80037a4:	d117      	bne.n	80037d6 <HAL_DMA_Init+0x122>
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80037aa:	697a      	ldr	r2, [r7, #20]
 80037ac:	4313      	orrs	r3, r2
 80037ae:	617b      	str	r3, [r7, #20]
 80037b0:	687b      	ldr	r3, [r7, #4]
 80037b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80037b4:	2b00      	cmp	r3, #0
 80037b6:	d00e      	beq.n	80037d6 <HAL_DMA_Init+0x122>
 80037b8:	6878      	ldr	r0, [r7, #4]
 80037ba:	f000 fa6f 	bl	8003c9c <DMA_CheckFifoParam>
 80037be:	4603      	mov	r3, r0
 80037c0:	2b00      	cmp	r3, #0
 80037c2:	d008      	beq.n	80037d6 <HAL_DMA_Init+0x122>
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	2240      	movs	r2, #64	@ 0x40
 80037c8:	655a      	str	r2, [r3, #84]	@ 0x54
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	2201      	movs	r2, #1
 80037ce:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80037d2:	2301      	movs	r3, #1
 80037d4:	e016      	b.n	8003804 <HAL_DMA_Init+0x150>
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	681b      	ldr	r3, [r3, #0]
 80037da:	697a      	ldr	r2, [r7, #20]
 80037dc:	615a      	str	r2, [r3, #20]
 80037de:	6878      	ldr	r0, [r7, #4]
 80037e0:	f000 fa26 	bl	8003c30 <DMA_CalcBaseAndBitshift>
 80037e4:	4603      	mov	r3, r0
 80037e6:	60fb      	str	r3, [r7, #12]
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80037ec:	223f      	movs	r2, #63	@ 0x3f
 80037ee:	409a      	lsls	r2, r3
 80037f0:	68fb      	ldr	r3, [r7, #12]
 80037f2:	609a      	str	r2, [r3, #8]
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	2200      	movs	r2, #0
 80037f8:	655a      	str	r2, [r3, #84]	@ 0x54
 80037fa:	687b      	ldr	r3, [r7, #4]
 80037fc:	2201      	movs	r2, #1
 80037fe:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003802:	2300      	movs	r3, #0
 8003804:	4618      	mov	r0, r3
 8003806:	3718      	adds	r7, #24
 8003808:	46bd      	mov	sp, r7
 800380a:	bd80      	pop	{r7, pc}
 800380c:	f010803f 	.word	0xf010803f

08003810 <HAL_DMA_Start_IT>:
 8003810:	b580      	push	{r7, lr}
 8003812:	b086      	sub	sp, #24
 8003814:	af00      	add	r7, sp, #0
 8003816:	60f8      	str	r0, [r7, #12]
 8003818:	60b9      	str	r1, [r7, #8]
 800381a:	607a      	str	r2, [r7, #4]
 800381c:	603b      	str	r3, [r7, #0]
 800381e:	2300      	movs	r3, #0
 8003820:	75fb      	strb	r3, [r7, #23]
 8003822:	68fb      	ldr	r3, [r7, #12]
 8003824:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003826:	613b      	str	r3, [r7, #16]
 8003828:	68fb      	ldr	r3, [r7, #12]
 800382a:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800382e:	2b01      	cmp	r3, #1
 8003830:	d101      	bne.n	8003836 <HAL_DMA_Start_IT+0x26>
 8003832:	2302      	movs	r3, #2
 8003834:	e040      	b.n	80038b8 <HAL_DMA_Start_IT+0xa8>
 8003836:	68fb      	ldr	r3, [r7, #12]
 8003838:	2201      	movs	r2, #1
 800383a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800383e:	68fb      	ldr	r3, [r7, #12]
 8003840:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003844:	b2db      	uxtb	r3, r3
 8003846:	2b01      	cmp	r3, #1
 8003848:	d12f      	bne.n	80038aa <HAL_DMA_Start_IT+0x9a>
 800384a:	68fb      	ldr	r3, [r7, #12]
 800384c:	2202      	movs	r2, #2
 800384e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003852:	68fb      	ldr	r3, [r7, #12]
 8003854:	2200      	movs	r2, #0
 8003856:	655a      	str	r2, [r3, #84]	@ 0x54
 8003858:	683b      	ldr	r3, [r7, #0]
 800385a:	687a      	ldr	r2, [r7, #4]
 800385c:	68b9      	ldr	r1, [r7, #8]
 800385e:	68f8      	ldr	r0, [r7, #12]
 8003860:	f000 f9b8 	bl	8003bd4 <DMA_SetConfig>
 8003864:	68fb      	ldr	r3, [r7, #12]
 8003866:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003868:	223f      	movs	r2, #63	@ 0x3f
 800386a:	409a      	lsls	r2, r3
 800386c:	693b      	ldr	r3, [r7, #16]
 800386e:	609a      	str	r2, [r3, #8]
 8003870:	68fb      	ldr	r3, [r7, #12]
 8003872:	681b      	ldr	r3, [r3, #0]
 8003874:	681a      	ldr	r2, [r3, #0]
 8003876:	68fb      	ldr	r3, [r7, #12]
 8003878:	681b      	ldr	r3, [r3, #0]
 800387a:	f042 0216 	orr.w	r2, r2, #22
 800387e:	601a      	str	r2, [r3, #0]
 8003880:	68fb      	ldr	r3, [r7, #12]
 8003882:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003884:	2b00      	cmp	r3, #0
 8003886:	d007      	beq.n	8003898 <HAL_DMA_Start_IT+0x88>
 8003888:	68fb      	ldr	r3, [r7, #12]
 800388a:	681b      	ldr	r3, [r3, #0]
 800388c:	681a      	ldr	r2, [r3, #0]
 800388e:	68fb      	ldr	r3, [r7, #12]
 8003890:	681b      	ldr	r3, [r3, #0]
 8003892:	f042 0208 	orr.w	r2, r2, #8
 8003896:	601a      	str	r2, [r3, #0]
 8003898:	68fb      	ldr	r3, [r7, #12]
 800389a:	681b      	ldr	r3, [r3, #0]
 800389c:	681a      	ldr	r2, [r3, #0]
 800389e:	68fb      	ldr	r3, [r7, #12]
 80038a0:	681b      	ldr	r3, [r3, #0]
 80038a2:	f042 0201 	orr.w	r2, r2, #1
 80038a6:	601a      	str	r2, [r3, #0]
 80038a8:	e005      	b.n	80038b6 <HAL_DMA_Start_IT+0xa6>
 80038aa:	68fb      	ldr	r3, [r7, #12]
 80038ac:	2200      	movs	r2, #0
 80038ae:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80038b2:	2302      	movs	r3, #2
 80038b4:	75fb      	strb	r3, [r7, #23]
 80038b6:	7dfb      	ldrb	r3, [r7, #23]
 80038b8:	4618      	mov	r0, r3
 80038ba:	3718      	adds	r7, #24
 80038bc:	46bd      	mov	sp, r7
 80038be:	bd80      	pop	{r7, pc}

080038c0 <HAL_DMA_IRQHandler>:
 80038c0:	b580      	push	{r7, lr}
 80038c2:	b086      	sub	sp, #24
 80038c4:	af00      	add	r7, sp, #0
 80038c6:	6078      	str	r0, [r7, #4]
 80038c8:	2300      	movs	r3, #0
 80038ca:	60bb      	str	r3, [r7, #8]
 80038cc:	4b8e      	ldr	r3, [pc, #568]	@ (8003b08 <HAL_DMA_IRQHandler+0x248>)
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	4a8e      	ldr	r2, [pc, #568]	@ (8003b0c <HAL_DMA_IRQHandler+0x24c>)
 80038d2:	fba2 2303 	umull	r2, r3, r2, r3
 80038d6:	0a9b      	lsrs	r3, r3, #10
 80038d8:	617b      	str	r3, [r7, #20]
 80038da:	687b      	ldr	r3, [r7, #4]
 80038dc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80038de:	613b      	str	r3, [r7, #16]
 80038e0:	693b      	ldr	r3, [r7, #16]
 80038e2:	681b      	ldr	r3, [r3, #0]
 80038e4:	60fb      	str	r3, [r7, #12]
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038ea:	2208      	movs	r2, #8
 80038ec:	409a      	lsls	r2, r3
 80038ee:	68fb      	ldr	r3, [r7, #12]
 80038f0:	4013      	ands	r3, r2
 80038f2:	2b00      	cmp	r3, #0
 80038f4:	d01a      	beq.n	800392c <HAL_DMA_IRQHandler+0x6c>
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	681b      	ldr	r3, [r3, #0]
 80038fa:	681b      	ldr	r3, [r3, #0]
 80038fc:	f003 0304 	and.w	r3, r3, #4
 8003900:	2b00      	cmp	r3, #0
 8003902:	d013      	beq.n	800392c <HAL_DMA_IRQHandler+0x6c>
 8003904:	687b      	ldr	r3, [r7, #4]
 8003906:	681b      	ldr	r3, [r3, #0]
 8003908:	681a      	ldr	r2, [r3, #0]
 800390a:	687b      	ldr	r3, [r7, #4]
 800390c:	681b      	ldr	r3, [r3, #0]
 800390e:	f022 0204 	bic.w	r2, r2, #4
 8003912:	601a      	str	r2, [r3, #0]
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003918:	2208      	movs	r2, #8
 800391a:	409a      	lsls	r2, r3
 800391c:	693b      	ldr	r3, [r7, #16]
 800391e:	609a      	str	r2, [r3, #8]
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003924:	f043 0201 	orr.w	r2, r3, #1
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	655a      	str	r2, [r3, #84]	@ 0x54
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003930:	2201      	movs	r2, #1
 8003932:	409a      	lsls	r2, r3
 8003934:	68fb      	ldr	r3, [r7, #12]
 8003936:	4013      	ands	r3, r2
 8003938:	2b00      	cmp	r3, #0
 800393a:	d012      	beq.n	8003962 <HAL_DMA_IRQHandler+0xa2>
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	681b      	ldr	r3, [r3, #0]
 8003940:	695b      	ldr	r3, [r3, #20]
 8003942:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003946:	2b00      	cmp	r3, #0
 8003948:	d00b      	beq.n	8003962 <HAL_DMA_IRQHandler+0xa2>
 800394a:	687b      	ldr	r3, [r7, #4]
 800394c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800394e:	2201      	movs	r2, #1
 8003950:	409a      	lsls	r2, r3
 8003952:	693b      	ldr	r3, [r7, #16]
 8003954:	609a      	str	r2, [r3, #8]
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800395a:	f043 0202 	orr.w	r2, r3, #2
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	655a      	str	r2, [r3, #84]	@ 0x54
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003966:	2204      	movs	r2, #4
 8003968:	409a      	lsls	r2, r3
 800396a:	68fb      	ldr	r3, [r7, #12]
 800396c:	4013      	ands	r3, r2
 800396e:	2b00      	cmp	r3, #0
 8003970:	d012      	beq.n	8003998 <HAL_DMA_IRQHandler+0xd8>
 8003972:	687b      	ldr	r3, [r7, #4]
 8003974:	681b      	ldr	r3, [r3, #0]
 8003976:	681b      	ldr	r3, [r3, #0]
 8003978:	f003 0302 	and.w	r3, r3, #2
 800397c:	2b00      	cmp	r3, #0
 800397e:	d00b      	beq.n	8003998 <HAL_DMA_IRQHandler+0xd8>
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003984:	2204      	movs	r2, #4
 8003986:	409a      	lsls	r2, r3
 8003988:	693b      	ldr	r3, [r7, #16]
 800398a:	609a      	str	r2, [r3, #8]
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003990:	f043 0204 	orr.w	r2, r3, #4
 8003994:	687b      	ldr	r3, [r7, #4]
 8003996:	655a      	str	r2, [r3, #84]	@ 0x54
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800399c:	2210      	movs	r2, #16
 800399e:	409a      	lsls	r2, r3
 80039a0:	68fb      	ldr	r3, [r7, #12]
 80039a2:	4013      	ands	r3, r2
 80039a4:	2b00      	cmp	r3, #0
 80039a6:	d043      	beq.n	8003a30 <HAL_DMA_IRQHandler+0x170>
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	681b      	ldr	r3, [r3, #0]
 80039ac:	681b      	ldr	r3, [r3, #0]
 80039ae:	f003 0308 	and.w	r3, r3, #8
 80039b2:	2b00      	cmp	r3, #0
 80039b4:	d03c      	beq.n	8003a30 <HAL_DMA_IRQHandler+0x170>
 80039b6:	687b      	ldr	r3, [r7, #4]
 80039b8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039ba:	2210      	movs	r2, #16
 80039bc:	409a      	lsls	r2, r3
 80039be:	693b      	ldr	r3, [r7, #16]
 80039c0:	609a      	str	r2, [r3, #8]
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	681b      	ldr	r3, [r3, #0]
 80039c6:	681b      	ldr	r3, [r3, #0]
 80039c8:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80039cc:	2b00      	cmp	r3, #0
 80039ce:	d018      	beq.n	8003a02 <HAL_DMA_IRQHandler+0x142>
 80039d0:	687b      	ldr	r3, [r7, #4]
 80039d2:	681b      	ldr	r3, [r3, #0]
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80039da:	2b00      	cmp	r3, #0
 80039dc:	d108      	bne.n	80039f0 <HAL_DMA_IRQHandler+0x130>
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80039e2:	2b00      	cmp	r3, #0
 80039e4:	d024      	beq.n	8003a30 <HAL_DMA_IRQHandler+0x170>
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80039ea:	6878      	ldr	r0, [r7, #4]
 80039ec:	4798      	blx	r3
 80039ee:	e01f      	b.n	8003a30 <HAL_DMA_IRQHandler+0x170>
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80039f4:	2b00      	cmp	r3, #0
 80039f6:	d01b      	beq.n	8003a30 <HAL_DMA_IRQHandler+0x170>
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80039fc:	6878      	ldr	r0, [r7, #4]
 80039fe:	4798      	blx	r3
 8003a00:	e016      	b.n	8003a30 <HAL_DMA_IRQHandler+0x170>
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	681b      	ldr	r3, [r3, #0]
 8003a06:	681b      	ldr	r3, [r3, #0]
 8003a08:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003a0c:	2b00      	cmp	r3, #0
 8003a0e:	d107      	bne.n	8003a20 <HAL_DMA_IRQHandler+0x160>
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	681a      	ldr	r2, [r3, #0]
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	681b      	ldr	r3, [r3, #0]
 8003a1a:	f022 0208 	bic.w	r2, r2, #8
 8003a1e:	601a      	str	r2, [r3, #0]
 8003a20:	687b      	ldr	r3, [r7, #4]
 8003a22:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a24:	2b00      	cmp	r3, #0
 8003a26:	d003      	beq.n	8003a30 <HAL_DMA_IRQHandler+0x170>
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a2c:	6878      	ldr	r0, [r7, #4]
 8003a2e:	4798      	blx	r3
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a34:	2220      	movs	r2, #32
 8003a36:	409a      	lsls	r2, r3
 8003a38:	68fb      	ldr	r3, [r7, #12]
 8003a3a:	4013      	ands	r3, r2
 8003a3c:	2b00      	cmp	r3, #0
 8003a3e:	f000 808f 	beq.w	8003b60 <HAL_DMA_IRQHandler+0x2a0>
 8003a42:	687b      	ldr	r3, [r7, #4]
 8003a44:	681b      	ldr	r3, [r3, #0]
 8003a46:	681b      	ldr	r3, [r3, #0]
 8003a48:	f003 0310 	and.w	r3, r3, #16
 8003a4c:	2b00      	cmp	r3, #0
 8003a4e:	f000 8087 	beq.w	8003b60 <HAL_DMA_IRQHandler+0x2a0>
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a56:	2220      	movs	r2, #32
 8003a58:	409a      	lsls	r2, r3
 8003a5a:	693b      	ldr	r3, [r7, #16]
 8003a5c:	609a      	str	r2, [r3, #8]
 8003a5e:	687b      	ldr	r3, [r7, #4]
 8003a60:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003a64:	b2db      	uxtb	r3, r3
 8003a66:	2b05      	cmp	r3, #5
 8003a68:	d136      	bne.n	8003ad8 <HAL_DMA_IRQHandler+0x218>
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	681b      	ldr	r3, [r3, #0]
 8003a6e:	681a      	ldr	r2, [r3, #0]
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	f022 0216 	bic.w	r2, r2, #22
 8003a78:	601a      	str	r2, [r3, #0]
 8003a7a:	687b      	ldr	r3, [r7, #4]
 8003a7c:	681b      	ldr	r3, [r3, #0]
 8003a7e:	695a      	ldr	r2, [r3, #20]
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	681b      	ldr	r3, [r3, #0]
 8003a84:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003a88:	615a      	str	r2, [r3, #20]
 8003a8a:	687b      	ldr	r3, [r7, #4]
 8003a8c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a8e:	2b00      	cmp	r3, #0
 8003a90:	d103      	bne.n	8003a9a <HAL_DMA_IRQHandler+0x1da>
 8003a92:	687b      	ldr	r3, [r7, #4]
 8003a94:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003a96:	2b00      	cmp	r3, #0
 8003a98:	d007      	beq.n	8003aaa <HAL_DMA_IRQHandler+0x1ea>
 8003a9a:	687b      	ldr	r3, [r7, #4]
 8003a9c:	681b      	ldr	r3, [r3, #0]
 8003a9e:	681a      	ldr	r2, [r3, #0]
 8003aa0:	687b      	ldr	r3, [r7, #4]
 8003aa2:	681b      	ldr	r3, [r3, #0]
 8003aa4:	f022 0208 	bic.w	r2, r2, #8
 8003aa8:	601a      	str	r2, [r3, #0]
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003aae:	223f      	movs	r2, #63	@ 0x3f
 8003ab0:	409a      	lsls	r2, r3
 8003ab2:	693b      	ldr	r3, [r7, #16]
 8003ab4:	609a      	str	r2, [r3, #8]
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	2201      	movs	r2, #1
 8003aba:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003abe:	687b      	ldr	r3, [r7, #4]
 8003ac0:	2200      	movs	r2, #0
 8003ac2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003aca:	2b00      	cmp	r3, #0
 8003acc:	d07e      	beq.n	8003bcc <HAL_DMA_IRQHandler+0x30c>
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003ad2:	6878      	ldr	r0, [r7, #4]
 8003ad4:	4798      	blx	r3
 8003ad6:	e079      	b.n	8003bcc <HAL_DMA_IRQHandler+0x30c>
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	681b      	ldr	r3, [r3, #0]
 8003adc:	681b      	ldr	r3, [r3, #0]
 8003ade:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003ae2:	2b00      	cmp	r3, #0
 8003ae4:	d01d      	beq.n	8003b22 <HAL_DMA_IRQHandler+0x262>
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	681b      	ldr	r3, [r3, #0]
 8003aea:	681b      	ldr	r3, [r3, #0]
 8003aec:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003af0:	2b00      	cmp	r3, #0
 8003af2:	d10d      	bne.n	8003b10 <HAL_DMA_IRQHandler+0x250>
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003af8:	2b00      	cmp	r3, #0
 8003afa:	d031      	beq.n	8003b60 <HAL_DMA_IRQHandler+0x2a0>
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003b00:	6878      	ldr	r0, [r7, #4]
 8003b02:	4798      	blx	r3
 8003b04:	e02c      	b.n	8003b60 <HAL_DMA_IRQHandler+0x2a0>
 8003b06:	bf00      	nop
 8003b08:	20000018 	.word	0x20000018
 8003b0c:	1b4e81b5 	.word	0x1b4e81b5
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003b14:	2b00      	cmp	r3, #0
 8003b16:	d023      	beq.n	8003b60 <HAL_DMA_IRQHandler+0x2a0>
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003b1c:	6878      	ldr	r0, [r7, #4]
 8003b1e:	4798      	blx	r3
 8003b20:	e01e      	b.n	8003b60 <HAL_DMA_IRQHandler+0x2a0>
 8003b22:	687b      	ldr	r3, [r7, #4]
 8003b24:	681b      	ldr	r3, [r3, #0]
 8003b26:	681b      	ldr	r3, [r3, #0]
 8003b28:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003b2c:	2b00      	cmp	r3, #0
 8003b2e:	d10f      	bne.n	8003b50 <HAL_DMA_IRQHandler+0x290>
 8003b30:	687b      	ldr	r3, [r7, #4]
 8003b32:	681b      	ldr	r3, [r3, #0]
 8003b34:	681a      	ldr	r2, [r3, #0]
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	681b      	ldr	r3, [r3, #0]
 8003b3a:	f022 0210 	bic.w	r2, r2, #16
 8003b3e:	601a      	str	r2, [r3, #0]
 8003b40:	687b      	ldr	r3, [r7, #4]
 8003b42:	2201      	movs	r2, #1
 8003b44:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	2200      	movs	r2, #0
 8003b4c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003b54:	2b00      	cmp	r3, #0
 8003b56:	d003      	beq.n	8003b60 <HAL_DMA_IRQHandler+0x2a0>
 8003b58:	687b      	ldr	r3, [r7, #4]
 8003b5a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003b5c:	6878      	ldr	r0, [r7, #4]
 8003b5e:	4798      	blx	r3
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003b64:	2b00      	cmp	r3, #0
 8003b66:	d032      	beq.n	8003bce <HAL_DMA_IRQHandler+0x30e>
 8003b68:	687b      	ldr	r3, [r7, #4]
 8003b6a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003b6c:	f003 0301 	and.w	r3, r3, #1
 8003b70:	2b00      	cmp	r3, #0
 8003b72:	d022      	beq.n	8003bba <HAL_DMA_IRQHandler+0x2fa>
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	2205      	movs	r2, #5
 8003b78:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	681b      	ldr	r3, [r3, #0]
 8003b80:	681a      	ldr	r2, [r3, #0]
 8003b82:	687b      	ldr	r3, [r7, #4]
 8003b84:	681b      	ldr	r3, [r3, #0]
 8003b86:	f022 0201 	bic.w	r2, r2, #1
 8003b8a:	601a      	str	r2, [r3, #0]
 8003b8c:	68bb      	ldr	r3, [r7, #8]
 8003b8e:	3301      	adds	r3, #1
 8003b90:	60bb      	str	r3, [r7, #8]
 8003b92:	697a      	ldr	r2, [r7, #20]
 8003b94:	429a      	cmp	r2, r3
 8003b96:	d307      	bcc.n	8003ba8 <HAL_DMA_IRQHandler+0x2e8>
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	681b      	ldr	r3, [r3, #0]
 8003b9e:	f003 0301 	and.w	r3, r3, #1
 8003ba2:	2b00      	cmp	r3, #0
 8003ba4:	d1f2      	bne.n	8003b8c <HAL_DMA_IRQHandler+0x2cc>
 8003ba6:	e000      	b.n	8003baa <HAL_DMA_IRQHandler+0x2ea>
 8003ba8:	bf00      	nop
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	2201      	movs	r2, #1
 8003bae:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	2200      	movs	r2, #0
 8003bb6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003bbe:	2b00      	cmp	r3, #0
 8003bc0:	d005      	beq.n	8003bce <HAL_DMA_IRQHandler+0x30e>
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003bc6:	6878      	ldr	r0, [r7, #4]
 8003bc8:	4798      	blx	r3
 8003bca:	e000      	b.n	8003bce <HAL_DMA_IRQHandler+0x30e>
 8003bcc:	bf00      	nop
 8003bce:	3718      	adds	r7, #24
 8003bd0:	46bd      	mov	sp, r7
 8003bd2:	bd80      	pop	{r7, pc}

08003bd4 <DMA_SetConfig>:
 8003bd4:	b480      	push	{r7}
 8003bd6:	b085      	sub	sp, #20
 8003bd8:	af00      	add	r7, sp, #0
 8003bda:	60f8      	str	r0, [r7, #12]
 8003bdc:	60b9      	str	r1, [r7, #8]
 8003bde:	607a      	str	r2, [r7, #4]
 8003be0:	603b      	str	r3, [r7, #0]
 8003be2:	68fb      	ldr	r3, [r7, #12]
 8003be4:	681b      	ldr	r3, [r3, #0]
 8003be6:	681a      	ldr	r2, [r3, #0]
 8003be8:	68fb      	ldr	r3, [r7, #12]
 8003bea:	681b      	ldr	r3, [r3, #0]
 8003bec:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003bf0:	601a      	str	r2, [r3, #0]
 8003bf2:	68fb      	ldr	r3, [r7, #12]
 8003bf4:	681b      	ldr	r3, [r3, #0]
 8003bf6:	683a      	ldr	r2, [r7, #0]
 8003bf8:	605a      	str	r2, [r3, #4]
 8003bfa:	68fb      	ldr	r3, [r7, #12]
 8003bfc:	689b      	ldr	r3, [r3, #8]
 8003bfe:	2b40      	cmp	r3, #64	@ 0x40
 8003c00:	d108      	bne.n	8003c14 <DMA_SetConfig+0x40>
 8003c02:	68fb      	ldr	r3, [r7, #12]
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	687a      	ldr	r2, [r7, #4]
 8003c08:	609a      	str	r2, [r3, #8]
 8003c0a:	68fb      	ldr	r3, [r7, #12]
 8003c0c:	681b      	ldr	r3, [r3, #0]
 8003c0e:	68ba      	ldr	r2, [r7, #8]
 8003c10:	60da      	str	r2, [r3, #12]
 8003c12:	e007      	b.n	8003c24 <DMA_SetConfig+0x50>
 8003c14:	68fb      	ldr	r3, [r7, #12]
 8003c16:	681b      	ldr	r3, [r3, #0]
 8003c18:	68ba      	ldr	r2, [r7, #8]
 8003c1a:	609a      	str	r2, [r3, #8]
 8003c1c:	68fb      	ldr	r3, [r7, #12]
 8003c1e:	681b      	ldr	r3, [r3, #0]
 8003c20:	687a      	ldr	r2, [r7, #4]
 8003c22:	60da      	str	r2, [r3, #12]
 8003c24:	bf00      	nop
 8003c26:	3714      	adds	r7, #20
 8003c28:	46bd      	mov	sp, r7
 8003c2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c2e:	4770      	bx	lr

08003c30 <DMA_CalcBaseAndBitshift>:
 8003c30:	b480      	push	{r7}
 8003c32:	b085      	sub	sp, #20
 8003c34:	af00      	add	r7, sp, #0
 8003c36:	6078      	str	r0, [r7, #4]
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	681b      	ldr	r3, [r3, #0]
 8003c3c:	b2db      	uxtb	r3, r3
 8003c3e:	3b10      	subs	r3, #16
 8003c40:	4a14      	ldr	r2, [pc, #80]	@ (8003c94 <DMA_CalcBaseAndBitshift+0x64>)
 8003c42:	fba2 2303 	umull	r2, r3, r2, r3
 8003c46:	091b      	lsrs	r3, r3, #4
 8003c48:	60fb      	str	r3, [r7, #12]
 8003c4a:	4a13      	ldr	r2, [pc, #76]	@ (8003c98 <DMA_CalcBaseAndBitshift+0x68>)
 8003c4c:	68fb      	ldr	r3, [r7, #12]
 8003c4e:	4413      	add	r3, r2
 8003c50:	781b      	ldrb	r3, [r3, #0]
 8003c52:	461a      	mov	r2, r3
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003c58:	68fb      	ldr	r3, [r7, #12]
 8003c5a:	2b03      	cmp	r3, #3
 8003c5c:	d909      	bls.n	8003c72 <DMA_CalcBaseAndBitshift+0x42>
 8003c5e:	687b      	ldr	r3, [r7, #4]
 8003c60:	681b      	ldr	r3, [r3, #0]
 8003c62:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003c66:	f023 0303 	bic.w	r3, r3, #3
 8003c6a:	1d1a      	adds	r2, r3, #4
 8003c6c:	687b      	ldr	r3, [r7, #4]
 8003c6e:	659a      	str	r2, [r3, #88]	@ 0x58
 8003c70:	e007      	b.n	8003c82 <DMA_CalcBaseAndBitshift+0x52>
 8003c72:	687b      	ldr	r3, [r7, #4]
 8003c74:	681b      	ldr	r3, [r3, #0]
 8003c76:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003c7a:	f023 0303 	bic.w	r3, r3, #3
 8003c7e:	687a      	ldr	r2, [r7, #4]
 8003c80:	6593      	str	r3, [r2, #88]	@ 0x58
 8003c82:	687b      	ldr	r3, [r7, #4]
 8003c84:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003c86:	4618      	mov	r0, r3
 8003c88:	3714      	adds	r7, #20
 8003c8a:	46bd      	mov	sp, r7
 8003c8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c90:	4770      	bx	lr
 8003c92:	bf00      	nop
 8003c94:	aaaaaaab 	.word	0xaaaaaaab
 8003c98:	080084bc 	.word	0x080084bc

08003c9c <DMA_CheckFifoParam>:
 8003c9c:	b480      	push	{r7}
 8003c9e:	b085      	sub	sp, #20
 8003ca0:	af00      	add	r7, sp, #0
 8003ca2:	6078      	str	r0, [r7, #4]
 8003ca4:	2300      	movs	r3, #0
 8003ca6:	73fb      	strb	r3, [r7, #15]
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003cac:	60bb      	str	r3, [r7, #8]
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	699b      	ldr	r3, [r3, #24]
 8003cb2:	2b00      	cmp	r3, #0
 8003cb4:	d11f      	bne.n	8003cf6 <DMA_CheckFifoParam+0x5a>
 8003cb6:	68bb      	ldr	r3, [r7, #8]
 8003cb8:	2b03      	cmp	r3, #3
 8003cba:	d856      	bhi.n	8003d6a <DMA_CheckFifoParam+0xce>
 8003cbc:	a201      	add	r2, pc, #4	@ (adr r2, 8003cc4 <DMA_CheckFifoParam+0x28>)
 8003cbe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003cc2:	bf00      	nop
 8003cc4:	08003cd5 	.word	0x08003cd5
 8003cc8:	08003ce7 	.word	0x08003ce7
 8003ccc:	08003cd5 	.word	0x08003cd5
 8003cd0:	08003d6b 	.word	0x08003d6b
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003cd8:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003cdc:	2b00      	cmp	r3, #0
 8003cde:	d046      	beq.n	8003d6e <DMA_CheckFifoParam+0xd2>
 8003ce0:	2301      	movs	r3, #1
 8003ce2:	73fb      	strb	r3, [r7, #15]
 8003ce4:	e043      	b.n	8003d6e <DMA_CheckFifoParam+0xd2>
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003cea:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003cee:	d140      	bne.n	8003d72 <DMA_CheckFifoParam+0xd6>
 8003cf0:	2301      	movs	r3, #1
 8003cf2:	73fb      	strb	r3, [r7, #15]
 8003cf4:	e03d      	b.n	8003d72 <DMA_CheckFifoParam+0xd6>
 8003cf6:	687b      	ldr	r3, [r7, #4]
 8003cf8:	699b      	ldr	r3, [r3, #24]
 8003cfa:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003cfe:	d121      	bne.n	8003d44 <DMA_CheckFifoParam+0xa8>
 8003d00:	68bb      	ldr	r3, [r7, #8]
 8003d02:	2b03      	cmp	r3, #3
 8003d04:	d837      	bhi.n	8003d76 <DMA_CheckFifoParam+0xda>
 8003d06:	a201      	add	r2, pc, #4	@ (adr r2, 8003d0c <DMA_CheckFifoParam+0x70>)
 8003d08:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003d0c:	08003d1d 	.word	0x08003d1d
 8003d10:	08003d23 	.word	0x08003d23
 8003d14:	08003d1d 	.word	0x08003d1d
 8003d18:	08003d35 	.word	0x08003d35
 8003d1c:	2301      	movs	r3, #1
 8003d1e:	73fb      	strb	r3, [r7, #15]
 8003d20:	e030      	b.n	8003d84 <DMA_CheckFifoParam+0xe8>
 8003d22:	687b      	ldr	r3, [r7, #4]
 8003d24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d26:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003d2a:	2b00      	cmp	r3, #0
 8003d2c:	d025      	beq.n	8003d7a <DMA_CheckFifoParam+0xde>
 8003d2e:	2301      	movs	r3, #1
 8003d30:	73fb      	strb	r3, [r7, #15]
 8003d32:	e022      	b.n	8003d7a <DMA_CheckFifoParam+0xde>
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d38:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003d3c:	d11f      	bne.n	8003d7e <DMA_CheckFifoParam+0xe2>
 8003d3e:	2301      	movs	r3, #1
 8003d40:	73fb      	strb	r3, [r7, #15]
 8003d42:	e01c      	b.n	8003d7e <DMA_CheckFifoParam+0xe2>
 8003d44:	68bb      	ldr	r3, [r7, #8]
 8003d46:	2b02      	cmp	r3, #2
 8003d48:	d903      	bls.n	8003d52 <DMA_CheckFifoParam+0xb6>
 8003d4a:	68bb      	ldr	r3, [r7, #8]
 8003d4c:	2b03      	cmp	r3, #3
 8003d4e:	d003      	beq.n	8003d58 <DMA_CheckFifoParam+0xbc>
 8003d50:	e018      	b.n	8003d84 <DMA_CheckFifoParam+0xe8>
 8003d52:	2301      	movs	r3, #1
 8003d54:	73fb      	strb	r3, [r7, #15]
 8003d56:	e015      	b.n	8003d84 <DMA_CheckFifoParam+0xe8>
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d5c:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003d60:	2b00      	cmp	r3, #0
 8003d62:	d00e      	beq.n	8003d82 <DMA_CheckFifoParam+0xe6>
 8003d64:	2301      	movs	r3, #1
 8003d66:	73fb      	strb	r3, [r7, #15]
 8003d68:	e00b      	b.n	8003d82 <DMA_CheckFifoParam+0xe6>
 8003d6a:	bf00      	nop
 8003d6c:	e00a      	b.n	8003d84 <DMA_CheckFifoParam+0xe8>
 8003d6e:	bf00      	nop
 8003d70:	e008      	b.n	8003d84 <DMA_CheckFifoParam+0xe8>
 8003d72:	bf00      	nop
 8003d74:	e006      	b.n	8003d84 <DMA_CheckFifoParam+0xe8>
 8003d76:	bf00      	nop
 8003d78:	e004      	b.n	8003d84 <DMA_CheckFifoParam+0xe8>
 8003d7a:	bf00      	nop
 8003d7c:	e002      	b.n	8003d84 <DMA_CheckFifoParam+0xe8>
 8003d7e:	bf00      	nop
 8003d80:	e000      	b.n	8003d84 <DMA_CheckFifoParam+0xe8>
 8003d82:	bf00      	nop
 8003d84:	7bfb      	ldrb	r3, [r7, #15]
 8003d86:	4618      	mov	r0, r3
 8003d88:	3714      	adds	r7, #20
 8003d8a:	46bd      	mov	sp, r7
 8003d8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d90:	4770      	bx	lr
 8003d92:	bf00      	nop

08003d94 <HAL_GPIO_Init>:
 8003d94:	b480      	push	{r7}
 8003d96:	b089      	sub	sp, #36	@ 0x24
 8003d98:	af00      	add	r7, sp, #0
 8003d9a:	6078      	str	r0, [r7, #4]
 8003d9c:	6039      	str	r1, [r7, #0]
 8003d9e:	2300      	movs	r3, #0
 8003da0:	617b      	str	r3, [r7, #20]
 8003da2:	2300      	movs	r3, #0
 8003da4:	613b      	str	r3, [r7, #16]
 8003da6:	2300      	movs	r3, #0
 8003da8:	61bb      	str	r3, [r7, #24]
 8003daa:	2300      	movs	r3, #0
 8003dac:	61fb      	str	r3, [r7, #28]
 8003dae:	e177      	b.n	80040a0 <HAL_GPIO_Init+0x30c>
 8003db0:	2201      	movs	r2, #1
 8003db2:	69fb      	ldr	r3, [r7, #28]
 8003db4:	fa02 f303 	lsl.w	r3, r2, r3
 8003db8:	617b      	str	r3, [r7, #20]
 8003dba:	683b      	ldr	r3, [r7, #0]
 8003dbc:	681b      	ldr	r3, [r3, #0]
 8003dbe:	697a      	ldr	r2, [r7, #20]
 8003dc0:	4013      	ands	r3, r2
 8003dc2:	613b      	str	r3, [r7, #16]
 8003dc4:	693a      	ldr	r2, [r7, #16]
 8003dc6:	697b      	ldr	r3, [r7, #20]
 8003dc8:	429a      	cmp	r2, r3
 8003dca:	f040 8166 	bne.w	800409a <HAL_GPIO_Init+0x306>
 8003dce:	683b      	ldr	r3, [r7, #0]
 8003dd0:	685b      	ldr	r3, [r3, #4]
 8003dd2:	f003 0303 	and.w	r3, r3, #3
 8003dd6:	2b01      	cmp	r3, #1
 8003dd8:	d005      	beq.n	8003de6 <HAL_GPIO_Init+0x52>
 8003dda:	683b      	ldr	r3, [r7, #0]
 8003ddc:	685b      	ldr	r3, [r3, #4]
 8003dde:	f003 0303 	and.w	r3, r3, #3
 8003de2:	2b02      	cmp	r3, #2
 8003de4:	d130      	bne.n	8003e48 <HAL_GPIO_Init+0xb4>
 8003de6:	687b      	ldr	r3, [r7, #4]
 8003de8:	689b      	ldr	r3, [r3, #8]
 8003dea:	61bb      	str	r3, [r7, #24]
 8003dec:	69fb      	ldr	r3, [r7, #28]
 8003dee:	005b      	lsls	r3, r3, #1
 8003df0:	2203      	movs	r2, #3
 8003df2:	fa02 f303 	lsl.w	r3, r2, r3
 8003df6:	43db      	mvns	r3, r3
 8003df8:	69ba      	ldr	r2, [r7, #24]
 8003dfa:	4013      	ands	r3, r2
 8003dfc:	61bb      	str	r3, [r7, #24]
 8003dfe:	683b      	ldr	r3, [r7, #0]
 8003e00:	68da      	ldr	r2, [r3, #12]
 8003e02:	69fb      	ldr	r3, [r7, #28]
 8003e04:	005b      	lsls	r3, r3, #1
 8003e06:	fa02 f303 	lsl.w	r3, r2, r3
 8003e0a:	69ba      	ldr	r2, [r7, #24]
 8003e0c:	4313      	orrs	r3, r2
 8003e0e:	61bb      	str	r3, [r7, #24]
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	69ba      	ldr	r2, [r7, #24]
 8003e14:	609a      	str	r2, [r3, #8]
 8003e16:	687b      	ldr	r3, [r7, #4]
 8003e18:	685b      	ldr	r3, [r3, #4]
 8003e1a:	61bb      	str	r3, [r7, #24]
 8003e1c:	2201      	movs	r2, #1
 8003e1e:	69fb      	ldr	r3, [r7, #28]
 8003e20:	fa02 f303 	lsl.w	r3, r2, r3
 8003e24:	43db      	mvns	r3, r3
 8003e26:	69ba      	ldr	r2, [r7, #24]
 8003e28:	4013      	ands	r3, r2
 8003e2a:	61bb      	str	r3, [r7, #24]
 8003e2c:	683b      	ldr	r3, [r7, #0]
 8003e2e:	685b      	ldr	r3, [r3, #4]
 8003e30:	091b      	lsrs	r3, r3, #4
 8003e32:	f003 0201 	and.w	r2, r3, #1
 8003e36:	69fb      	ldr	r3, [r7, #28]
 8003e38:	fa02 f303 	lsl.w	r3, r2, r3
 8003e3c:	69ba      	ldr	r2, [r7, #24]
 8003e3e:	4313      	orrs	r3, r2
 8003e40:	61bb      	str	r3, [r7, #24]
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	69ba      	ldr	r2, [r7, #24]
 8003e46:	605a      	str	r2, [r3, #4]
 8003e48:	683b      	ldr	r3, [r7, #0]
 8003e4a:	685b      	ldr	r3, [r3, #4]
 8003e4c:	f003 0303 	and.w	r3, r3, #3
 8003e50:	2b03      	cmp	r3, #3
 8003e52:	d017      	beq.n	8003e84 <HAL_GPIO_Init+0xf0>
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	68db      	ldr	r3, [r3, #12]
 8003e58:	61bb      	str	r3, [r7, #24]
 8003e5a:	69fb      	ldr	r3, [r7, #28]
 8003e5c:	005b      	lsls	r3, r3, #1
 8003e5e:	2203      	movs	r2, #3
 8003e60:	fa02 f303 	lsl.w	r3, r2, r3
 8003e64:	43db      	mvns	r3, r3
 8003e66:	69ba      	ldr	r2, [r7, #24]
 8003e68:	4013      	ands	r3, r2
 8003e6a:	61bb      	str	r3, [r7, #24]
 8003e6c:	683b      	ldr	r3, [r7, #0]
 8003e6e:	689a      	ldr	r2, [r3, #8]
 8003e70:	69fb      	ldr	r3, [r7, #28]
 8003e72:	005b      	lsls	r3, r3, #1
 8003e74:	fa02 f303 	lsl.w	r3, r2, r3
 8003e78:	69ba      	ldr	r2, [r7, #24]
 8003e7a:	4313      	orrs	r3, r2
 8003e7c:	61bb      	str	r3, [r7, #24]
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	69ba      	ldr	r2, [r7, #24]
 8003e82:	60da      	str	r2, [r3, #12]
 8003e84:	683b      	ldr	r3, [r7, #0]
 8003e86:	685b      	ldr	r3, [r3, #4]
 8003e88:	f003 0303 	and.w	r3, r3, #3
 8003e8c:	2b02      	cmp	r3, #2
 8003e8e:	d123      	bne.n	8003ed8 <HAL_GPIO_Init+0x144>
 8003e90:	69fb      	ldr	r3, [r7, #28]
 8003e92:	08da      	lsrs	r2, r3, #3
 8003e94:	687b      	ldr	r3, [r7, #4]
 8003e96:	3208      	adds	r2, #8
 8003e98:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003e9c:	61bb      	str	r3, [r7, #24]
 8003e9e:	69fb      	ldr	r3, [r7, #28]
 8003ea0:	f003 0307 	and.w	r3, r3, #7
 8003ea4:	009b      	lsls	r3, r3, #2
 8003ea6:	220f      	movs	r2, #15
 8003ea8:	fa02 f303 	lsl.w	r3, r2, r3
 8003eac:	43db      	mvns	r3, r3
 8003eae:	69ba      	ldr	r2, [r7, #24]
 8003eb0:	4013      	ands	r3, r2
 8003eb2:	61bb      	str	r3, [r7, #24]
 8003eb4:	683b      	ldr	r3, [r7, #0]
 8003eb6:	691a      	ldr	r2, [r3, #16]
 8003eb8:	69fb      	ldr	r3, [r7, #28]
 8003eba:	f003 0307 	and.w	r3, r3, #7
 8003ebe:	009b      	lsls	r3, r3, #2
 8003ec0:	fa02 f303 	lsl.w	r3, r2, r3
 8003ec4:	69ba      	ldr	r2, [r7, #24]
 8003ec6:	4313      	orrs	r3, r2
 8003ec8:	61bb      	str	r3, [r7, #24]
 8003eca:	69fb      	ldr	r3, [r7, #28]
 8003ecc:	08da      	lsrs	r2, r3, #3
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	3208      	adds	r2, #8
 8003ed2:	69b9      	ldr	r1, [r7, #24]
 8003ed4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003ed8:	687b      	ldr	r3, [r7, #4]
 8003eda:	681b      	ldr	r3, [r3, #0]
 8003edc:	61bb      	str	r3, [r7, #24]
 8003ede:	69fb      	ldr	r3, [r7, #28]
 8003ee0:	005b      	lsls	r3, r3, #1
 8003ee2:	2203      	movs	r2, #3
 8003ee4:	fa02 f303 	lsl.w	r3, r2, r3
 8003ee8:	43db      	mvns	r3, r3
 8003eea:	69ba      	ldr	r2, [r7, #24]
 8003eec:	4013      	ands	r3, r2
 8003eee:	61bb      	str	r3, [r7, #24]
 8003ef0:	683b      	ldr	r3, [r7, #0]
 8003ef2:	685b      	ldr	r3, [r3, #4]
 8003ef4:	f003 0203 	and.w	r2, r3, #3
 8003ef8:	69fb      	ldr	r3, [r7, #28]
 8003efa:	005b      	lsls	r3, r3, #1
 8003efc:	fa02 f303 	lsl.w	r3, r2, r3
 8003f00:	69ba      	ldr	r2, [r7, #24]
 8003f02:	4313      	orrs	r3, r2
 8003f04:	61bb      	str	r3, [r7, #24]
 8003f06:	687b      	ldr	r3, [r7, #4]
 8003f08:	69ba      	ldr	r2, [r7, #24]
 8003f0a:	601a      	str	r2, [r3, #0]
 8003f0c:	683b      	ldr	r3, [r7, #0]
 8003f0e:	685b      	ldr	r3, [r3, #4]
 8003f10:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8003f14:	2b00      	cmp	r3, #0
 8003f16:	f000 80c0 	beq.w	800409a <HAL_GPIO_Init+0x306>
 8003f1a:	2300      	movs	r3, #0
 8003f1c:	60fb      	str	r3, [r7, #12]
 8003f1e:	4b66      	ldr	r3, [pc, #408]	@ (80040b8 <HAL_GPIO_Init+0x324>)
 8003f20:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003f22:	4a65      	ldr	r2, [pc, #404]	@ (80040b8 <HAL_GPIO_Init+0x324>)
 8003f24:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003f28:	6453      	str	r3, [r2, #68]	@ 0x44
 8003f2a:	4b63      	ldr	r3, [pc, #396]	@ (80040b8 <HAL_GPIO_Init+0x324>)
 8003f2c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003f2e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003f32:	60fb      	str	r3, [r7, #12]
 8003f34:	68fb      	ldr	r3, [r7, #12]
 8003f36:	4a61      	ldr	r2, [pc, #388]	@ (80040bc <HAL_GPIO_Init+0x328>)
 8003f38:	69fb      	ldr	r3, [r7, #28]
 8003f3a:	089b      	lsrs	r3, r3, #2
 8003f3c:	3302      	adds	r3, #2
 8003f3e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003f42:	61bb      	str	r3, [r7, #24]
 8003f44:	69fb      	ldr	r3, [r7, #28]
 8003f46:	f003 0303 	and.w	r3, r3, #3
 8003f4a:	009b      	lsls	r3, r3, #2
 8003f4c:	220f      	movs	r2, #15
 8003f4e:	fa02 f303 	lsl.w	r3, r2, r3
 8003f52:	43db      	mvns	r3, r3
 8003f54:	69ba      	ldr	r2, [r7, #24]
 8003f56:	4013      	ands	r3, r2
 8003f58:	61bb      	str	r3, [r7, #24]
 8003f5a:	687b      	ldr	r3, [r7, #4]
 8003f5c:	4a58      	ldr	r2, [pc, #352]	@ (80040c0 <HAL_GPIO_Init+0x32c>)
 8003f5e:	4293      	cmp	r3, r2
 8003f60:	d037      	beq.n	8003fd2 <HAL_GPIO_Init+0x23e>
 8003f62:	687b      	ldr	r3, [r7, #4]
 8003f64:	4a57      	ldr	r2, [pc, #348]	@ (80040c4 <HAL_GPIO_Init+0x330>)
 8003f66:	4293      	cmp	r3, r2
 8003f68:	d031      	beq.n	8003fce <HAL_GPIO_Init+0x23a>
 8003f6a:	687b      	ldr	r3, [r7, #4]
 8003f6c:	4a56      	ldr	r2, [pc, #344]	@ (80040c8 <HAL_GPIO_Init+0x334>)
 8003f6e:	4293      	cmp	r3, r2
 8003f70:	d02b      	beq.n	8003fca <HAL_GPIO_Init+0x236>
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	4a55      	ldr	r2, [pc, #340]	@ (80040cc <HAL_GPIO_Init+0x338>)
 8003f76:	4293      	cmp	r3, r2
 8003f78:	d025      	beq.n	8003fc6 <HAL_GPIO_Init+0x232>
 8003f7a:	687b      	ldr	r3, [r7, #4]
 8003f7c:	4a54      	ldr	r2, [pc, #336]	@ (80040d0 <HAL_GPIO_Init+0x33c>)
 8003f7e:	4293      	cmp	r3, r2
 8003f80:	d01f      	beq.n	8003fc2 <HAL_GPIO_Init+0x22e>
 8003f82:	687b      	ldr	r3, [r7, #4]
 8003f84:	4a53      	ldr	r2, [pc, #332]	@ (80040d4 <HAL_GPIO_Init+0x340>)
 8003f86:	4293      	cmp	r3, r2
 8003f88:	d019      	beq.n	8003fbe <HAL_GPIO_Init+0x22a>
 8003f8a:	687b      	ldr	r3, [r7, #4]
 8003f8c:	4a52      	ldr	r2, [pc, #328]	@ (80040d8 <HAL_GPIO_Init+0x344>)
 8003f8e:	4293      	cmp	r3, r2
 8003f90:	d013      	beq.n	8003fba <HAL_GPIO_Init+0x226>
 8003f92:	687b      	ldr	r3, [r7, #4]
 8003f94:	4a51      	ldr	r2, [pc, #324]	@ (80040dc <HAL_GPIO_Init+0x348>)
 8003f96:	4293      	cmp	r3, r2
 8003f98:	d00d      	beq.n	8003fb6 <HAL_GPIO_Init+0x222>
 8003f9a:	687b      	ldr	r3, [r7, #4]
 8003f9c:	4a50      	ldr	r2, [pc, #320]	@ (80040e0 <HAL_GPIO_Init+0x34c>)
 8003f9e:	4293      	cmp	r3, r2
 8003fa0:	d007      	beq.n	8003fb2 <HAL_GPIO_Init+0x21e>
 8003fa2:	687b      	ldr	r3, [r7, #4]
 8003fa4:	4a4f      	ldr	r2, [pc, #316]	@ (80040e4 <HAL_GPIO_Init+0x350>)
 8003fa6:	4293      	cmp	r3, r2
 8003fa8:	d101      	bne.n	8003fae <HAL_GPIO_Init+0x21a>
 8003faa:	2309      	movs	r3, #9
 8003fac:	e012      	b.n	8003fd4 <HAL_GPIO_Init+0x240>
 8003fae:	230a      	movs	r3, #10
 8003fb0:	e010      	b.n	8003fd4 <HAL_GPIO_Init+0x240>
 8003fb2:	2308      	movs	r3, #8
 8003fb4:	e00e      	b.n	8003fd4 <HAL_GPIO_Init+0x240>
 8003fb6:	2307      	movs	r3, #7
 8003fb8:	e00c      	b.n	8003fd4 <HAL_GPIO_Init+0x240>
 8003fba:	2306      	movs	r3, #6
 8003fbc:	e00a      	b.n	8003fd4 <HAL_GPIO_Init+0x240>
 8003fbe:	2305      	movs	r3, #5
 8003fc0:	e008      	b.n	8003fd4 <HAL_GPIO_Init+0x240>
 8003fc2:	2304      	movs	r3, #4
 8003fc4:	e006      	b.n	8003fd4 <HAL_GPIO_Init+0x240>
 8003fc6:	2303      	movs	r3, #3
 8003fc8:	e004      	b.n	8003fd4 <HAL_GPIO_Init+0x240>
 8003fca:	2302      	movs	r3, #2
 8003fcc:	e002      	b.n	8003fd4 <HAL_GPIO_Init+0x240>
 8003fce:	2301      	movs	r3, #1
 8003fd0:	e000      	b.n	8003fd4 <HAL_GPIO_Init+0x240>
 8003fd2:	2300      	movs	r3, #0
 8003fd4:	69fa      	ldr	r2, [r7, #28]
 8003fd6:	f002 0203 	and.w	r2, r2, #3
 8003fda:	0092      	lsls	r2, r2, #2
 8003fdc:	4093      	lsls	r3, r2
 8003fde:	69ba      	ldr	r2, [r7, #24]
 8003fe0:	4313      	orrs	r3, r2
 8003fe2:	61bb      	str	r3, [r7, #24]
 8003fe4:	4935      	ldr	r1, [pc, #212]	@ (80040bc <HAL_GPIO_Init+0x328>)
 8003fe6:	69fb      	ldr	r3, [r7, #28]
 8003fe8:	089b      	lsrs	r3, r3, #2
 8003fea:	3302      	adds	r3, #2
 8003fec:	69ba      	ldr	r2, [r7, #24]
 8003fee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003ff2:	4b3d      	ldr	r3, [pc, #244]	@ (80040e8 <HAL_GPIO_Init+0x354>)
 8003ff4:	689b      	ldr	r3, [r3, #8]
 8003ff6:	61bb      	str	r3, [r7, #24]
 8003ff8:	693b      	ldr	r3, [r7, #16]
 8003ffa:	43db      	mvns	r3, r3
 8003ffc:	69ba      	ldr	r2, [r7, #24]
 8003ffe:	4013      	ands	r3, r2
 8004000:	61bb      	str	r3, [r7, #24]
 8004002:	683b      	ldr	r3, [r7, #0]
 8004004:	685b      	ldr	r3, [r3, #4]
 8004006:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800400a:	2b00      	cmp	r3, #0
 800400c:	d003      	beq.n	8004016 <HAL_GPIO_Init+0x282>
 800400e:	69ba      	ldr	r2, [r7, #24]
 8004010:	693b      	ldr	r3, [r7, #16]
 8004012:	4313      	orrs	r3, r2
 8004014:	61bb      	str	r3, [r7, #24]
 8004016:	4a34      	ldr	r2, [pc, #208]	@ (80040e8 <HAL_GPIO_Init+0x354>)
 8004018:	69bb      	ldr	r3, [r7, #24]
 800401a:	6093      	str	r3, [r2, #8]
 800401c:	4b32      	ldr	r3, [pc, #200]	@ (80040e8 <HAL_GPIO_Init+0x354>)
 800401e:	68db      	ldr	r3, [r3, #12]
 8004020:	61bb      	str	r3, [r7, #24]
 8004022:	693b      	ldr	r3, [r7, #16]
 8004024:	43db      	mvns	r3, r3
 8004026:	69ba      	ldr	r2, [r7, #24]
 8004028:	4013      	ands	r3, r2
 800402a:	61bb      	str	r3, [r7, #24]
 800402c:	683b      	ldr	r3, [r7, #0]
 800402e:	685b      	ldr	r3, [r3, #4]
 8004030:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004034:	2b00      	cmp	r3, #0
 8004036:	d003      	beq.n	8004040 <HAL_GPIO_Init+0x2ac>
 8004038:	69ba      	ldr	r2, [r7, #24]
 800403a:	693b      	ldr	r3, [r7, #16]
 800403c:	4313      	orrs	r3, r2
 800403e:	61bb      	str	r3, [r7, #24]
 8004040:	4a29      	ldr	r2, [pc, #164]	@ (80040e8 <HAL_GPIO_Init+0x354>)
 8004042:	69bb      	ldr	r3, [r7, #24]
 8004044:	60d3      	str	r3, [r2, #12]
 8004046:	4b28      	ldr	r3, [pc, #160]	@ (80040e8 <HAL_GPIO_Init+0x354>)
 8004048:	685b      	ldr	r3, [r3, #4]
 800404a:	61bb      	str	r3, [r7, #24]
 800404c:	693b      	ldr	r3, [r7, #16]
 800404e:	43db      	mvns	r3, r3
 8004050:	69ba      	ldr	r2, [r7, #24]
 8004052:	4013      	ands	r3, r2
 8004054:	61bb      	str	r3, [r7, #24]
 8004056:	683b      	ldr	r3, [r7, #0]
 8004058:	685b      	ldr	r3, [r3, #4]
 800405a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800405e:	2b00      	cmp	r3, #0
 8004060:	d003      	beq.n	800406a <HAL_GPIO_Init+0x2d6>
 8004062:	69ba      	ldr	r2, [r7, #24]
 8004064:	693b      	ldr	r3, [r7, #16]
 8004066:	4313      	orrs	r3, r2
 8004068:	61bb      	str	r3, [r7, #24]
 800406a:	4a1f      	ldr	r2, [pc, #124]	@ (80040e8 <HAL_GPIO_Init+0x354>)
 800406c:	69bb      	ldr	r3, [r7, #24]
 800406e:	6053      	str	r3, [r2, #4]
 8004070:	4b1d      	ldr	r3, [pc, #116]	@ (80040e8 <HAL_GPIO_Init+0x354>)
 8004072:	681b      	ldr	r3, [r3, #0]
 8004074:	61bb      	str	r3, [r7, #24]
 8004076:	693b      	ldr	r3, [r7, #16]
 8004078:	43db      	mvns	r3, r3
 800407a:	69ba      	ldr	r2, [r7, #24]
 800407c:	4013      	ands	r3, r2
 800407e:	61bb      	str	r3, [r7, #24]
 8004080:	683b      	ldr	r3, [r7, #0]
 8004082:	685b      	ldr	r3, [r3, #4]
 8004084:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004088:	2b00      	cmp	r3, #0
 800408a:	d003      	beq.n	8004094 <HAL_GPIO_Init+0x300>
 800408c:	69ba      	ldr	r2, [r7, #24]
 800408e:	693b      	ldr	r3, [r7, #16]
 8004090:	4313      	orrs	r3, r2
 8004092:	61bb      	str	r3, [r7, #24]
 8004094:	4a14      	ldr	r2, [pc, #80]	@ (80040e8 <HAL_GPIO_Init+0x354>)
 8004096:	69bb      	ldr	r3, [r7, #24]
 8004098:	6013      	str	r3, [r2, #0]
 800409a:	69fb      	ldr	r3, [r7, #28]
 800409c:	3301      	adds	r3, #1
 800409e:	61fb      	str	r3, [r7, #28]
 80040a0:	69fb      	ldr	r3, [r7, #28]
 80040a2:	2b0f      	cmp	r3, #15
 80040a4:	f67f ae84 	bls.w	8003db0 <HAL_GPIO_Init+0x1c>
 80040a8:	bf00      	nop
 80040aa:	bf00      	nop
 80040ac:	3724      	adds	r7, #36	@ 0x24
 80040ae:	46bd      	mov	sp, r7
 80040b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040b4:	4770      	bx	lr
 80040b6:	bf00      	nop
 80040b8:	40023800 	.word	0x40023800
 80040bc:	40013800 	.word	0x40013800
 80040c0:	40020000 	.word	0x40020000
 80040c4:	40020400 	.word	0x40020400
 80040c8:	40020800 	.word	0x40020800
 80040cc:	40020c00 	.word	0x40020c00
 80040d0:	40021000 	.word	0x40021000
 80040d4:	40021400 	.word	0x40021400
 80040d8:	40021800 	.word	0x40021800
 80040dc:	40021c00 	.word	0x40021c00
 80040e0:	40022000 	.word	0x40022000
 80040e4:	40022400 	.word	0x40022400
 80040e8:	40013c00 	.word	0x40013c00

080040ec <HAL_GPIO_WritePin>:
 80040ec:	b480      	push	{r7}
 80040ee:	b083      	sub	sp, #12
 80040f0:	af00      	add	r7, sp, #0
 80040f2:	6078      	str	r0, [r7, #4]
 80040f4:	460b      	mov	r3, r1
 80040f6:	807b      	strh	r3, [r7, #2]
 80040f8:	4613      	mov	r3, r2
 80040fa:	707b      	strb	r3, [r7, #1]
 80040fc:	787b      	ldrb	r3, [r7, #1]
 80040fe:	2b00      	cmp	r3, #0
 8004100:	d003      	beq.n	800410a <HAL_GPIO_WritePin+0x1e>
 8004102:	887a      	ldrh	r2, [r7, #2]
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	619a      	str	r2, [r3, #24]
 8004108:	e003      	b.n	8004112 <HAL_GPIO_WritePin+0x26>
 800410a:	887b      	ldrh	r3, [r7, #2]
 800410c:	041a      	lsls	r2, r3, #16
 800410e:	687b      	ldr	r3, [r7, #4]
 8004110:	619a      	str	r2, [r3, #24]
 8004112:	bf00      	nop
 8004114:	370c      	adds	r7, #12
 8004116:	46bd      	mov	sp, r7
 8004118:	f85d 7b04 	ldr.w	r7, [sp], #4
 800411c:	4770      	bx	lr
	...

08004120 <HAL_GPIO_EXTI_IRQHandler>:
 8004120:	b580      	push	{r7, lr}
 8004122:	b082      	sub	sp, #8
 8004124:	af00      	add	r7, sp, #0
 8004126:	4603      	mov	r3, r0
 8004128:	80fb      	strh	r3, [r7, #6]
 800412a:	4b08      	ldr	r3, [pc, #32]	@ (800414c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800412c:	695a      	ldr	r2, [r3, #20]
 800412e:	88fb      	ldrh	r3, [r7, #6]
 8004130:	4013      	ands	r3, r2
 8004132:	2b00      	cmp	r3, #0
 8004134:	d006      	beq.n	8004144 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8004136:	4a05      	ldr	r2, [pc, #20]	@ (800414c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004138:	88fb      	ldrh	r3, [r7, #6]
 800413a:	6153      	str	r3, [r2, #20]
 800413c:	88fb      	ldrh	r3, [r7, #6]
 800413e:	4618      	mov	r0, r3
 8004140:	f000 f806 	bl	8004150 <HAL_GPIO_EXTI_Callback>
 8004144:	bf00      	nop
 8004146:	3708      	adds	r7, #8
 8004148:	46bd      	mov	sp, r7
 800414a:	bd80      	pop	{r7, pc}
 800414c:	40013c00 	.word	0x40013c00

08004150 <HAL_GPIO_EXTI_Callback>:
 8004150:	b480      	push	{r7}
 8004152:	b083      	sub	sp, #12
 8004154:	af00      	add	r7, sp, #0
 8004156:	4603      	mov	r3, r0
 8004158:	80fb      	strh	r3, [r7, #6]
 800415a:	bf00      	nop
 800415c:	370c      	adds	r7, #12
 800415e:	46bd      	mov	sp, r7
 8004160:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004164:	4770      	bx	lr
	...

08004168 <HAL_PWREx_EnableOverDrive>:
 8004168:	b580      	push	{r7, lr}
 800416a:	b082      	sub	sp, #8
 800416c:	af00      	add	r7, sp, #0
 800416e:	2300      	movs	r3, #0
 8004170:	607b      	str	r3, [r7, #4]
 8004172:	2300      	movs	r3, #0
 8004174:	603b      	str	r3, [r7, #0]
 8004176:	4b20      	ldr	r3, [pc, #128]	@ (80041f8 <HAL_PWREx_EnableOverDrive+0x90>)
 8004178:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800417a:	4a1f      	ldr	r2, [pc, #124]	@ (80041f8 <HAL_PWREx_EnableOverDrive+0x90>)
 800417c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004180:	6413      	str	r3, [r2, #64]	@ 0x40
 8004182:	4b1d      	ldr	r3, [pc, #116]	@ (80041f8 <HAL_PWREx_EnableOverDrive+0x90>)
 8004184:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004186:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800418a:	603b      	str	r3, [r7, #0]
 800418c:	683b      	ldr	r3, [r7, #0]
 800418e:	4b1b      	ldr	r3, [pc, #108]	@ (80041fc <HAL_PWREx_EnableOverDrive+0x94>)
 8004190:	2201      	movs	r2, #1
 8004192:	601a      	str	r2, [r3, #0]
 8004194:	f7ff f94c 	bl	8003430 <HAL_GetTick>
 8004198:	6078      	str	r0, [r7, #4]
 800419a:	e009      	b.n	80041b0 <HAL_PWREx_EnableOverDrive+0x48>
 800419c:	f7ff f948 	bl	8003430 <HAL_GetTick>
 80041a0:	4602      	mov	r2, r0
 80041a2:	687b      	ldr	r3, [r7, #4]
 80041a4:	1ad3      	subs	r3, r2, r3
 80041a6:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80041aa:	d901      	bls.n	80041b0 <HAL_PWREx_EnableOverDrive+0x48>
 80041ac:	2303      	movs	r3, #3
 80041ae:	e01f      	b.n	80041f0 <HAL_PWREx_EnableOverDrive+0x88>
 80041b0:	4b13      	ldr	r3, [pc, #76]	@ (8004200 <HAL_PWREx_EnableOverDrive+0x98>)
 80041b2:	685b      	ldr	r3, [r3, #4]
 80041b4:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80041b8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80041bc:	d1ee      	bne.n	800419c <HAL_PWREx_EnableOverDrive+0x34>
 80041be:	4b11      	ldr	r3, [pc, #68]	@ (8004204 <HAL_PWREx_EnableOverDrive+0x9c>)
 80041c0:	2201      	movs	r2, #1
 80041c2:	601a      	str	r2, [r3, #0]
 80041c4:	f7ff f934 	bl	8003430 <HAL_GetTick>
 80041c8:	6078      	str	r0, [r7, #4]
 80041ca:	e009      	b.n	80041e0 <HAL_PWREx_EnableOverDrive+0x78>
 80041cc:	f7ff f930 	bl	8003430 <HAL_GetTick>
 80041d0:	4602      	mov	r2, r0
 80041d2:	687b      	ldr	r3, [r7, #4]
 80041d4:	1ad3      	subs	r3, r2, r3
 80041d6:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80041da:	d901      	bls.n	80041e0 <HAL_PWREx_EnableOverDrive+0x78>
 80041dc:	2303      	movs	r3, #3
 80041de:	e007      	b.n	80041f0 <HAL_PWREx_EnableOverDrive+0x88>
 80041e0:	4b07      	ldr	r3, [pc, #28]	@ (8004200 <HAL_PWREx_EnableOverDrive+0x98>)
 80041e2:	685b      	ldr	r3, [r3, #4]
 80041e4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80041e8:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80041ec:	d1ee      	bne.n	80041cc <HAL_PWREx_EnableOverDrive+0x64>
 80041ee:	2300      	movs	r3, #0
 80041f0:	4618      	mov	r0, r3
 80041f2:	3708      	adds	r7, #8
 80041f4:	46bd      	mov	sp, r7
 80041f6:	bd80      	pop	{r7, pc}
 80041f8:	40023800 	.word	0x40023800
 80041fc:	420e0040 	.word	0x420e0040
 8004200:	40007000 	.word	0x40007000
 8004204:	420e0044 	.word	0x420e0044

08004208 <HAL_RCC_OscConfig>:
 8004208:	b580      	push	{r7, lr}
 800420a:	b086      	sub	sp, #24
 800420c:	af00      	add	r7, sp, #0
 800420e:	6078      	str	r0, [r7, #4]
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	2b00      	cmp	r3, #0
 8004214:	d101      	bne.n	800421a <HAL_RCC_OscConfig+0x12>
 8004216:	2301      	movs	r3, #1
 8004218:	e267      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 800421a:	687b      	ldr	r3, [r7, #4]
 800421c:	681b      	ldr	r3, [r3, #0]
 800421e:	f003 0301 	and.w	r3, r3, #1
 8004222:	2b00      	cmp	r3, #0
 8004224:	d075      	beq.n	8004312 <HAL_RCC_OscConfig+0x10a>
 8004226:	4b88      	ldr	r3, [pc, #544]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 8004228:	689b      	ldr	r3, [r3, #8]
 800422a:	f003 030c 	and.w	r3, r3, #12
 800422e:	2b04      	cmp	r3, #4
 8004230:	d00c      	beq.n	800424c <HAL_RCC_OscConfig+0x44>
 8004232:	4b85      	ldr	r3, [pc, #532]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 8004234:	689b      	ldr	r3, [r3, #8]
 8004236:	f003 030c 	and.w	r3, r3, #12
 800423a:	2b08      	cmp	r3, #8
 800423c:	d112      	bne.n	8004264 <HAL_RCC_OscConfig+0x5c>
 800423e:	4b82      	ldr	r3, [pc, #520]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 8004240:	685b      	ldr	r3, [r3, #4]
 8004242:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004246:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800424a:	d10b      	bne.n	8004264 <HAL_RCC_OscConfig+0x5c>
 800424c:	4b7e      	ldr	r3, [pc, #504]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 800424e:	681b      	ldr	r3, [r3, #0]
 8004250:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004254:	2b00      	cmp	r3, #0
 8004256:	d05b      	beq.n	8004310 <HAL_RCC_OscConfig+0x108>
 8004258:	687b      	ldr	r3, [r7, #4]
 800425a:	685b      	ldr	r3, [r3, #4]
 800425c:	2b00      	cmp	r3, #0
 800425e:	d157      	bne.n	8004310 <HAL_RCC_OscConfig+0x108>
 8004260:	2301      	movs	r3, #1
 8004262:	e242      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	685b      	ldr	r3, [r3, #4]
 8004268:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800426c:	d106      	bne.n	800427c <HAL_RCC_OscConfig+0x74>
 800426e:	4b76      	ldr	r3, [pc, #472]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 8004270:	681b      	ldr	r3, [r3, #0]
 8004272:	4a75      	ldr	r2, [pc, #468]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 8004274:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004278:	6013      	str	r3, [r2, #0]
 800427a:	e01d      	b.n	80042b8 <HAL_RCC_OscConfig+0xb0>
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	685b      	ldr	r3, [r3, #4]
 8004280:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004284:	d10c      	bne.n	80042a0 <HAL_RCC_OscConfig+0x98>
 8004286:	4b70      	ldr	r3, [pc, #448]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 8004288:	681b      	ldr	r3, [r3, #0]
 800428a:	4a6f      	ldr	r2, [pc, #444]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 800428c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004290:	6013      	str	r3, [r2, #0]
 8004292:	4b6d      	ldr	r3, [pc, #436]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 8004294:	681b      	ldr	r3, [r3, #0]
 8004296:	4a6c      	ldr	r2, [pc, #432]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 8004298:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800429c:	6013      	str	r3, [r2, #0]
 800429e:	e00b      	b.n	80042b8 <HAL_RCC_OscConfig+0xb0>
 80042a0:	4b69      	ldr	r3, [pc, #420]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 80042a2:	681b      	ldr	r3, [r3, #0]
 80042a4:	4a68      	ldr	r2, [pc, #416]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 80042a6:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80042aa:	6013      	str	r3, [r2, #0]
 80042ac:	4b66      	ldr	r3, [pc, #408]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	4a65      	ldr	r2, [pc, #404]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 80042b2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80042b6:	6013      	str	r3, [r2, #0]
 80042b8:	687b      	ldr	r3, [r7, #4]
 80042ba:	685b      	ldr	r3, [r3, #4]
 80042bc:	2b00      	cmp	r3, #0
 80042be:	d013      	beq.n	80042e8 <HAL_RCC_OscConfig+0xe0>
 80042c0:	f7ff f8b6 	bl	8003430 <HAL_GetTick>
 80042c4:	6138      	str	r0, [r7, #16]
 80042c6:	e008      	b.n	80042da <HAL_RCC_OscConfig+0xd2>
 80042c8:	f7ff f8b2 	bl	8003430 <HAL_GetTick>
 80042cc:	4602      	mov	r2, r0
 80042ce:	693b      	ldr	r3, [r7, #16]
 80042d0:	1ad3      	subs	r3, r2, r3
 80042d2:	2b64      	cmp	r3, #100	@ 0x64
 80042d4:	d901      	bls.n	80042da <HAL_RCC_OscConfig+0xd2>
 80042d6:	2303      	movs	r3, #3
 80042d8:	e207      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 80042da:	4b5b      	ldr	r3, [pc, #364]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 80042dc:	681b      	ldr	r3, [r3, #0]
 80042de:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80042e2:	2b00      	cmp	r3, #0
 80042e4:	d0f0      	beq.n	80042c8 <HAL_RCC_OscConfig+0xc0>
 80042e6:	e014      	b.n	8004312 <HAL_RCC_OscConfig+0x10a>
 80042e8:	f7ff f8a2 	bl	8003430 <HAL_GetTick>
 80042ec:	6138      	str	r0, [r7, #16]
 80042ee:	e008      	b.n	8004302 <HAL_RCC_OscConfig+0xfa>
 80042f0:	f7ff f89e 	bl	8003430 <HAL_GetTick>
 80042f4:	4602      	mov	r2, r0
 80042f6:	693b      	ldr	r3, [r7, #16]
 80042f8:	1ad3      	subs	r3, r2, r3
 80042fa:	2b64      	cmp	r3, #100	@ 0x64
 80042fc:	d901      	bls.n	8004302 <HAL_RCC_OscConfig+0xfa>
 80042fe:	2303      	movs	r3, #3
 8004300:	e1f3      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 8004302:	4b51      	ldr	r3, [pc, #324]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 8004304:	681b      	ldr	r3, [r3, #0]
 8004306:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800430a:	2b00      	cmp	r3, #0
 800430c:	d1f0      	bne.n	80042f0 <HAL_RCC_OscConfig+0xe8>
 800430e:	e000      	b.n	8004312 <HAL_RCC_OscConfig+0x10a>
 8004310:	bf00      	nop
 8004312:	687b      	ldr	r3, [r7, #4]
 8004314:	681b      	ldr	r3, [r3, #0]
 8004316:	f003 0302 	and.w	r3, r3, #2
 800431a:	2b00      	cmp	r3, #0
 800431c:	d063      	beq.n	80043e6 <HAL_RCC_OscConfig+0x1de>
 800431e:	4b4a      	ldr	r3, [pc, #296]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 8004320:	689b      	ldr	r3, [r3, #8]
 8004322:	f003 030c 	and.w	r3, r3, #12
 8004326:	2b00      	cmp	r3, #0
 8004328:	d00b      	beq.n	8004342 <HAL_RCC_OscConfig+0x13a>
 800432a:	4b47      	ldr	r3, [pc, #284]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 800432c:	689b      	ldr	r3, [r3, #8]
 800432e:	f003 030c 	and.w	r3, r3, #12
 8004332:	2b08      	cmp	r3, #8
 8004334:	d11c      	bne.n	8004370 <HAL_RCC_OscConfig+0x168>
 8004336:	4b44      	ldr	r3, [pc, #272]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 8004338:	685b      	ldr	r3, [r3, #4]
 800433a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800433e:	2b00      	cmp	r3, #0
 8004340:	d116      	bne.n	8004370 <HAL_RCC_OscConfig+0x168>
 8004342:	4b41      	ldr	r3, [pc, #260]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 8004344:	681b      	ldr	r3, [r3, #0]
 8004346:	f003 0302 	and.w	r3, r3, #2
 800434a:	2b00      	cmp	r3, #0
 800434c:	d005      	beq.n	800435a <HAL_RCC_OscConfig+0x152>
 800434e:	687b      	ldr	r3, [r7, #4]
 8004350:	68db      	ldr	r3, [r3, #12]
 8004352:	2b01      	cmp	r3, #1
 8004354:	d001      	beq.n	800435a <HAL_RCC_OscConfig+0x152>
 8004356:	2301      	movs	r3, #1
 8004358:	e1c7      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 800435a:	4b3b      	ldr	r3, [pc, #236]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 800435c:	681b      	ldr	r3, [r3, #0]
 800435e:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004362:	687b      	ldr	r3, [r7, #4]
 8004364:	691b      	ldr	r3, [r3, #16]
 8004366:	00db      	lsls	r3, r3, #3
 8004368:	4937      	ldr	r1, [pc, #220]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 800436a:	4313      	orrs	r3, r2
 800436c:	600b      	str	r3, [r1, #0]
 800436e:	e03a      	b.n	80043e6 <HAL_RCC_OscConfig+0x1de>
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	68db      	ldr	r3, [r3, #12]
 8004374:	2b00      	cmp	r3, #0
 8004376:	d020      	beq.n	80043ba <HAL_RCC_OscConfig+0x1b2>
 8004378:	4b34      	ldr	r3, [pc, #208]	@ (800444c <HAL_RCC_OscConfig+0x244>)
 800437a:	2201      	movs	r2, #1
 800437c:	601a      	str	r2, [r3, #0]
 800437e:	f7ff f857 	bl	8003430 <HAL_GetTick>
 8004382:	6138      	str	r0, [r7, #16]
 8004384:	e008      	b.n	8004398 <HAL_RCC_OscConfig+0x190>
 8004386:	f7ff f853 	bl	8003430 <HAL_GetTick>
 800438a:	4602      	mov	r2, r0
 800438c:	693b      	ldr	r3, [r7, #16]
 800438e:	1ad3      	subs	r3, r2, r3
 8004390:	2b02      	cmp	r3, #2
 8004392:	d901      	bls.n	8004398 <HAL_RCC_OscConfig+0x190>
 8004394:	2303      	movs	r3, #3
 8004396:	e1a8      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 8004398:	4b2b      	ldr	r3, [pc, #172]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 800439a:	681b      	ldr	r3, [r3, #0]
 800439c:	f003 0302 	and.w	r3, r3, #2
 80043a0:	2b00      	cmp	r3, #0
 80043a2:	d0f0      	beq.n	8004386 <HAL_RCC_OscConfig+0x17e>
 80043a4:	4b28      	ldr	r3, [pc, #160]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 80043a6:	681b      	ldr	r3, [r3, #0]
 80043a8:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80043ac:	687b      	ldr	r3, [r7, #4]
 80043ae:	691b      	ldr	r3, [r3, #16]
 80043b0:	00db      	lsls	r3, r3, #3
 80043b2:	4925      	ldr	r1, [pc, #148]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 80043b4:	4313      	orrs	r3, r2
 80043b6:	600b      	str	r3, [r1, #0]
 80043b8:	e015      	b.n	80043e6 <HAL_RCC_OscConfig+0x1de>
 80043ba:	4b24      	ldr	r3, [pc, #144]	@ (800444c <HAL_RCC_OscConfig+0x244>)
 80043bc:	2200      	movs	r2, #0
 80043be:	601a      	str	r2, [r3, #0]
 80043c0:	f7ff f836 	bl	8003430 <HAL_GetTick>
 80043c4:	6138      	str	r0, [r7, #16]
 80043c6:	e008      	b.n	80043da <HAL_RCC_OscConfig+0x1d2>
 80043c8:	f7ff f832 	bl	8003430 <HAL_GetTick>
 80043cc:	4602      	mov	r2, r0
 80043ce:	693b      	ldr	r3, [r7, #16]
 80043d0:	1ad3      	subs	r3, r2, r3
 80043d2:	2b02      	cmp	r3, #2
 80043d4:	d901      	bls.n	80043da <HAL_RCC_OscConfig+0x1d2>
 80043d6:	2303      	movs	r3, #3
 80043d8:	e187      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 80043da:	4b1b      	ldr	r3, [pc, #108]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 80043dc:	681b      	ldr	r3, [r3, #0]
 80043de:	f003 0302 	and.w	r3, r3, #2
 80043e2:	2b00      	cmp	r3, #0
 80043e4:	d1f0      	bne.n	80043c8 <HAL_RCC_OscConfig+0x1c0>
 80043e6:	687b      	ldr	r3, [r7, #4]
 80043e8:	681b      	ldr	r3, [r3, #0]
 80043ea:	f003 0308 	and.w	r3, r3, #8
 80043ee:	2b00      	cmp	r3, #0
 80043f0:	d036      	beq.n	8004460 <HAL_RCC_OscConfig+0x258>
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	695b      	ldr	r3, [r3, #20]
 80043f6:	2b00      	cmp	r3, #0
 80043f8:	d016      	beq.n	8004428 <HAL_RCC_OscConfig+0x220>
 80043fa:	4b15      	ldr	r3, [pc, #84]	@ (8004450 <HAL_RCC_OscConfig+0x248>)
 80043fc:	2201      	movs	r2, #1
 80043fe:	601a      	str	r2, [r3, #0]
 8004400:	f7ff f816 	bl	8003430 <HAL_GetTick>
 8004404:	6138      	str	r0, [r7, #16]
 8004406:	e008      	b.n	800441a <HAL_RCC_OscConfig+0x212>
 8004408:	f7ff f812 	bl	8003430 <HAL_GetTick>
 800440c:	4602      	mov	r2, r0
 800440e:	693b      	ldr	r3, [r7, #16]
 8004410:	1ad3      	subs	r3, r2, r3
 8004412:	2b02      	cmp	r3, #2
 8004414:	d901      	bls.n	800441a <HAL_RCC_OscConfig+0x212>
 8004416:	2303      	movs	r3, #3
 8004418:	e167      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 800441a:	4b0b      	ldr	r3, [pc, #44]	@ (8004448 <HAL_RCC_OscConfig+0x240>)
 800441c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800441e:	f003 0302 	and.w	r3, r3, #2
 8004422:	2b00      	cmp	r3, #0
 8004424:	d0f0      	beq.n	8004408 <HAL_RCC_OscConfig+0x200>
 8004426:	e01b      	b.n	8004460 <HAL_RCC_OscConfig+0x258>
 8004428:	4b09      	ldr	r3, [pc, #36]	@ (8004450 <HAL_RCC_OscConfig+0x248>)
 800442a:	2200      	movs	r2, #0
 800442c:	601a      	str	r2, [r3, #0]
 800442e:	f7fe ffff 	bl	8003430 <HAL_GetTick>
 8004432:	6138      	str	r0, [r7, #16]
 8004434:	e00e      	b.n	8004454 <HAL_RCC_OscConfig+0x24c>
 8004436:	f7fe fffb 	bl	8003430 <HAL_GetTick>
 800443a:	4602      	mov	r2, r0
 800443c:	693b      	ldr	r3, [r7, #16]
 800443e:	1ad3      	subs	r3, r2, r3
 8004440:	2b02      	cmp	r3, #2
 8004442:	d907      	bls.n	8004454 <HAL_RCC_OscConfig+0x24c>
 8004444:	2303      	movs	r3, #3
 8004446:	e150      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 8004448:	40023800 	.word	0x40023800
 800444c:	42470000 	.word	0x42470000
 8004450:	42470e80 	.word	0x42470e80
 8004454:	4b88      	ldr	r3, [pc, #544]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004456:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004458:	f003 0302 	and.w	r3, r3, #2
 800445c:	2b00      	cmp	r3, #0
 800445e:	d1ea      	bne.n	8004436 <HAL_RCC_OscConfig+0x22e>
 8004460:	687b      	ldr	r3, [r7, #4]
 8004462:	681b      	ldr	r3, [r3, #0]
 8004464:	f003 0304 	and.w	r3, r3, #4
 8004468:	2b00      	cmp	r3, #0
 800446a:	f000 8097 	beq.w	800459c <HAL_RCC_OscConfig+0x394>
 800446e:	2300      	movs	r3, #0
 8004470:	75fb      	strb	r3, [r7, #23]
 8004472:	4b81      	ldr	r3, [pc, #516]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004474:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004476:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800447a:	2b00      	cmp	r3, #0
 800447c:	d10f      	bne.n	800449e <HAL_RCC_OscConfig+0x296>
 800447e:	2300      	movs	r3, #0
 8004480:	60bb      	str	r3, [r7, #8]
 8004482:	4b7d      	ldr	r3, [pc, #500]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004484:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004486:	4a7c      	ldr	r2, [pc, #496]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004488:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800448c:	6413      	str	r3, [r2, #64]	@ 0x40
 800448e:	4b7a      	ldr	r3, [pc, #488]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004490:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004492:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004496:	60bb      	str	r3, [r7, #8]
 8004498:	68bb      	ldr	r3, [r7, #8]
 800449a:	2301      	movs	r3, #1
 800449c:	75fb      	strb	r3, [r7, #23]
 800449e:	4b77      	ldr	r3, [pc, #476]	@ (800467c <HAL_RCC_OscConfig+0x474>)
 80044a0:	681b      	ldr	r3, [r3, #0]
 80044a2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80044a6:	2b00      	cmp	r3, #0
 80044a8:	d118      	bne.n	80044dc <HAL_RCC_OscConfig+0x2d4>
 80044aa:	4b74      	ldr	r3, [pc, #464]	@ (800467c <HAL_RCC_OscConfig+0x474>)
 80044ac:	681b      	ldr	r3, [r3, #0]
 80044ae:	4a73      	ldr	r2, [pc, #460]	@ (800467c <HAL_RCC_OscConfig+0x474>)
 80044b0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80044b4:	6013      	str	r3, [r2, #0]
 80044b6:	f7fe ffbb 	bl	8003430 <HAL_GetTick>
 80044ba:	6138      	str	r0, [r7, #16]
 80044bc:	e008      	b.n	80044d0 <HAL_RCC_OscConfig+0x2c8>
 80044be:	f7fe ffb7 	bl	8003430 <HAL_GetTick>
 80044c2:	4602      	mov	r2, r0
 80044c4:	693b      	ldr	r3, [r7, #16]
 80044c6:	1ad3      	subs	r3, r2, r3
 80044c8:	2b02      	cmp	r3, #2
 80044ca:	d901      	bls.n	80044d0 <HAL_RCC_OscConfig+0x2c8>
 80044cc:	2303      	movs	r3, #3
 80044ce:	e10c      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 80044d0:	4b6a      	ldr	r3, [pc, #424]	@ (800467c <HAL_RCC_OscConfig+0x474>)
 80044d2:	681b      	ldr	r3, [r3, #0]
 80044d4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80044d8:	2b00      	cmp	r3, #0
 80044da:	d0f0      	beq.n	80044be <HAL_RCC_OscConfig+0x2b6>
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	689b      	ldr	r3, [r3, #8]
 80044e0:	2b01      	cmp	r3, #1
 80044e2:	d106      	bne.n	80044f2 <HAL_RCC_OscConfig+0x2ea>
 80044e4:	4b64      	ldr	r3, [pc, #400]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 80044e6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80044e8:	4a63      	ldr	r2, [pc, #396]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 80044ea:	f043 0301 	orr.w	r3, r3, #1
 80044ee:	6713      	str	r3, [r2, #112]	@ 0x70
 80044f0:	e01c      	b.n	800452c <HAL_RCC_OscConfig+0x324>
 80044f2:	687b      	ldr	r3, [r7, #4]
 80044f4:	689b      	ldr	r3, [r3, #8]
 80044f6:	2b05      	cmp	r3, #5
 80044f8:	d10c      	bne.n	8004514 <HAL_RCC_OscConfig+0x30c>
 80044fa:	4b5f      	ldr	r3, [pc, #380]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 80044fc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80044fe:	4a5e      	ldr	r2, [pc, #376]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004500:	f043 0304 	orr.w	r3, r3, #4
 8004504:	6713      	str	r3, [r2, #112]	@ 0x70
 8004506:	4b5c      	ldr	r3, [pc, #368]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004508:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800450a:	4a5b      	ldr	r2, [pc, #364]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 800450c:	f043 0301 	orr.w	r3, r3, #1
 8004510:	6713      	str	r3, [r2, #112]	@ 0x70
 8004512:	e00b      	b.n	800452c <HAL_RCC_OscConfig+0x324>
 8004514:	4b58      	ldr	r3, [pc, #352]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004516:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004518:	4a57      	ldr	r2, [pc, #348]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 800451a:	f023 0301 	bic.w	r3, r3, #1
 800451e:	6713      	str	r3, [r2, #112]	@ 0x70
 8004520:	4b55      	ldr	r3, [pc, #340]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004522:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004524:	4a54      	ldr	r2, [pc, #336]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004526:	f023 0304 	bic.w	r3, r3, #4
 800452a:	6713      	str	r3, [r2, #112]	@ 0x70
 800452c:	687b      	ldr	r3, [r7, #4]
 800452e:	689b      	ldr	r3, [r3, #8]
 8004530:	2b00      	cmp	r3, #0
 8004532:	d015      	beq.n	8004560 <HAL_RCC_OscConfig+0x358>
 8004534:	f7fe ff7c 	bl	8003430 <HAL_GetTick>
 8004538:	6138      	str	r0, [r7, #16]
 800453a:	e00a      	b.n	8004552 <HAL_RCC_OscConfig+0x34a>
 800453c:	f7fe ff78 	bl	8003430 <HAL_GetTick>
 8004540:	4602      	mov	r2, r0
 8004542:	693b      	ldr	r3, [r7, #16]
 8004544:	1ad3      	subs	r3, r2, r3
 8004546:	f241 3288 	movw	r2, #5000	@ 0x1388
 800454a:	4293      	cmp	r3, r2
 800454c:	d901      	bls.n	8004552 <HAL_RCC_OscConfig+0x34a>
 800454e:	2303      	movs	r3, #3
 8004550:	e0cb      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 8004552:	4b49      	ldr	r3, [pc, #292]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004554:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004556:	f003 0302 	and.w	r3, r3, #2
 800455a:	2b00      	cmp	r3, #0
 800455c:	d0ee      	beq.n	800453c <HAL_RCC_OscConfig+0x334>
 800455e:	e014      	b.n	800458a <HAL_RCC_OscConfig+0x382>
 8004560:	f7fe ff66 	bl	8003430 <HAL_GetTick>
 8004564:	6138      	str	r0, [r7, #16]
 8004566:	e00a      	b.n	800457e <HAL_RCC_OscConfig+0x376>
 8004568:	f7fe ff62 	bl	8003430 <HAL_GetTick>
 800456c:	4602      	mov	r2, r0
 800456e:	693b      	ldr	r3, [r7, #16]
 8004570:	1ad3      	subs	r3, r2, r3
 8004572:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004576:	4293      	cmp	r3, r2
 8004578:	d901      	bls.n	800457e <HAL_RCC_OscConfig+0x376>
 800457a:	2303      	movs	r3, #3
 800457c:	e0b5      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 800457e:	4b3e      	ldr	r3, [pc, #248]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004580:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004582:	f003 0302 	and.w	r3, r3, #2
 8004586:	2b00      	cmp	r3, #0
 8004588:	d1ee      	bne.n	8004568 <HAL_RCC_OscConfig+0x360>
 800458a:	7dfb      	ldrb	r3, [r7, #23]
 800458c:	2b01      	cmp	r3, #1
 800458e:	d105      	bne.n	800459c <HAL_RCC_OscConfig+0x394>
 8004590:	4b39      	ldr	r3, [pc, #228]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004592:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004594:	4a38      	ldr	r2, [pc, #224]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004596:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800459a:	6413      	str	r3, [r2, #64]	@ 0x40
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	699b      	ldr	r3, [r3, #24]
 80045a0:	2b00      	cmp	r3, #0
 80045a2:	f000 80a1 	beq.w	80046e8 <HAL_RCC_OscConfig+0x4e0>
 80045a6:	4b34      	ldr	r3, [pc, #208]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 80045a8:	689b      	ldr	r3, [r3, #8]
 80045aa:	f003 030c 	and.w	r3, r3, #12
 80045ae:	2b08      	cmp	r3, #8
 80045b0:	d05c      	beq.n	800466c <HAL_RCC_OscConfig+0x464>
 80045b2:	687b      	ldr	r3, [r7, #4]
 80045b4:	699b      	ldr	r3, [r3, #24]
 80045b6:	2b02      	cmp	r3, #2
 80045b8:	d141      	bne.n	800463e <HAL_RCC_OscConfig+0x436>
 80045ba:	4b31      	ldr	r3, [pc, #196]	@ (8004680 <HAL_RCC_OscConfig+0x478>)
 80045bc:	2200      	movs	r2, #0
 80045be:	601a      	str	r2, [r3, #0]
 80045c0:	f7fe ff36 	bl	8003430 <HAL_GetTick>
 80045c4:	6138      	str	r0, [r7, #16]
 80045c6:	e008      	b.n	80045da <HAL_RCC_OscConfig+0x3d2>
 80045c8:	f7fe ff32 	bl	8003430 <HAL_GetTick>
 80045cc:	4602      	mov	r2, r0
 80045ce:	693b      	ldr	r3, [r7, #16]
 80045d0:	1ad3      	subs	r3, r2, r3
 80045d2:	2b02      	cmp	r3, #2
 80045d4:	d901      	bls.n	80045da <HAL_RCC_OscConfig+0x3d2>
 80045d6:	2303      	movs	r3, #3
 80045d8:	e087      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 80045da:	4b27      	ldr	r3, [pc, #156]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 80045dc:	681b      	ldr	r3, [r3, #0]
 80045de:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80045e2:	2b00      	cmp	r3, #0
 80045e4:	d1f0      	bne.n	80045c8 <HAL_RCC_OscConfig+0x3c0>
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	69da      	ldr	r2, [r3, #28]
 80045ea:	687b      	ldr	r3, [r7, #4]
 80045ec:	6a1b      	ldr	r3, [r3, #32]
 80045ee:	431a      	orrs	r2, r3
 80045f0:	687b      	ldr	r3, [r7, #4]
 80045f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80045f4:	019b      	lsls	r3, r3, #6
 80045f6:	431a      	orrs	r2, r3
 80045f8:	687b      	ldr	r3, [r7, #4]
 80045fa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80045fc:	085b      	lsrs	r3, r3, #1
 80045fe:	3b01      	subs	r3, #1
 8004600:	041b      	lsls	r3, r3, #16
 8004602:	431a      	orrs	r2, r3
 8004604:	687b      	ldr	r3, [r7, #4]
 8004606:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004608:	061b      	lsls	r3, r3, #24
 800460a:	491b      	ldr	r1, [pc, #108]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 800460c:	4313      	orrs	r3, r2
 800460e:	604b      	str	r3, [r1, #4]
 8004610:	4b1b      	ldr	r3, [pc, #108]	@ (8004680 <HAL_RCC_OscConfig+0x478>)
 8004612:	2201      	movs	r2, #1
 8004614:	601a      	str	r2, [r3, #0]
 8004616:	f7fe ff0b 	bl	8003430 <HAL_GetTick>
 800461a:	6138      	str	r0, [r7, #16]
 800461c:	e008      	b.n	8004630 <HAL_RCC_OscConfig+0x428>
 800461e:	f7fe ff07 	bl	8003430 <HAL_GetTick>
 8004622:	4602      	mov	r2, r0
 8004624:	693b      	ldr	r3, [r7, #16]
 8004626:	1ad3      	subs	r3, r2, r3
 8004628:	2b02      	cmp	r3, #2
 800462a:	d901      	bls.n	8004630 <HAL_RCC_OscConfig+0x428>
 800462c:	2303      	movs	r3, #3
 800462e:	e05c      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 8004630:	4b11      	ldr	r3, [pc, #68]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004632:	681b      	ldr	r3, [r3, #0]
 8004634:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004638:	2b00      	cmp	r3, #0
 800463a:	d0f0      	beq.n	800461e <HAL_RCC_OscConfig+0x416>
 800463c:	e054      	b.n	80046e8 <HAL_RCC_OscConfig+0x4e0>
 800463e:	4b10      	ldr	r3, [pc, #64]	@ (8004680 <HAL_RCC_OscConfig+0x478>)
 8004640:	2200      	movs	r2, #0
 8004642:	601a      	str	r2, [r3, #0]
 8004644:	f7fe fef4 	bl	8003430 <HAL_GetTick>
 8004648:	6138      	str	r0, [r7, #16]
 800464a:	e008      	b.n	800465e <HAL_RCC_OscConfig+0x456>
 800464c:	f7fe fef0 	bl	8003430 <HAL_GetTick>
 8004650:	4602      	mov	r2, r0
 8004652:	693b      	ldr	r3, [r7, #16]
 8004654:	1ad3      	subs	r3, r2, r3
 8004656:	2b02      	cmp	r3, #2
 8004658:	d901      	bls.n	800465e <HAL_RCC_OscConfig+0x456>
 800465a:	2303      	movs	r3, #3
 800465c:	e045      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 800465e:	4b06      	ldr	r3, [pc, #24]	@ (8004678 <HAL_RCC_OscConfig+0x470>)
 8004660:	681b      	ldr	r3, [r3, #0]
 8004662:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004666:	2b00      	cmp	r3, #0
 8004668:	d1f0      	bne.n	800464c <HAL_RCC_OscConfig+0x444>
 800466a:	e03d      	b.n	80046e8 <HAL_RCC_OscConfig+0x4e0>
 800466c:	687b      	ldr	r3, [r7, #4]
 800466e:	699b      	ldr	r3, [r3, #24]
 8004670:	2b01      	cmp	r3, #1
 8004672:	d107      	bne.n	8004684 <HAL_RCC_OscConfig+0x47c>
 8004674:	2301      	movs	r3, #1
 8004676:	e038      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 8004678:	40023800 	.word	0x40023800
 800467c:	40007000 	.word	0x40007000
 8004680:	42470060 	.word	0x42470060
 8004684:	4b1b      	ldr	r3, [pc, #108]	@ (80046f4 <HAL_RCC_OscConfig+0x4ec>)
 8004686:	685b      	ldr	r3, [r3, #4]
 8004688:	60fb      	str	r3, [r7, #12]
 800468a:	687b      	ldr	r3, [r7, #4]
 800468c:	699b      	ldr	r3, [r3, #24]
 800468e:	2b01      	cmp	r3, #1
 8004690:	d028      	beq.n	80046e4 <HAL_RCC_OscConfig+0x4dc>
 8004692:	68fb      	ldr	r3, [r7, #12]
 8004694:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8004698:	687b      	ldr	r3, [r7, #4]
 800469a:	69db      	ldr	r3, [r3, #28]
 800469c:	429a      	cmp	r2, r3
 800469e:	d121      	bne.n	80046e4 <HAL_RCC_OscConfig+0x4dc>
 80046a0:	68fb      	ldr	r3, [r7, #12]
 80046a2:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	6a1b      	ldr	r3, [r3, #32]
 80046aa:	429a      	cmp	r2, r3
 80046ac:	d11a      	bne.n	80046e4 <HAL_RCC_OscConfig+0x4dc>
 80046ae:	68fa      	ldr	r2, [r7, #12]
 80046b0:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80046b4:	4013      	ands	r3, r2
 80046b6:	687a      	ldr	r2, [r7, #4]
 80046b8:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80046ba:	0192      	lsls	r2, r2, #6
 80046bc:	4293      	cmp	r3, r2
 80046be:	d111      	bne.n	80046e4 <HAL_RCC_OscConfig+0x4dc>
 80046c0:	68fb      	ldr	r3, [r7, #12]
 80046c2:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80046c6:	687b      	ldr	r3, [r7, #4]
 80046c8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80046ca:	085b      	lsrs	r3, r3, #1
 80046cc:	3b01      	subs	r3, #1
 80046ce:	041b      	lsls	r3, r3, #16
 80046d0:	429a      	cmp	r2, r3
 80046d2:	d107      	bne.n	80046e4 <HAL_RCC_OscConfig+0x4dc>
 80046d4:	68fb      	ldr	r3, [r7, #12]
 80046d6:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80046de:	061b      	lsls	r3, r3, #24
 80046e0:	429a      	cmp	r2, r3
 80046e2:	d001      	beq.n	80046e8 <HAL_RCC_OscConfig+0x4e0>
 80046e4:	2301      	movs	r3, #1
 80046e6:	e000      	b.n	80046ea <HAL_RCC_OscConfig+0x4e2>
 80046e8:	2300      	movs	r3, #0
 80046ea:	4618      	mov	r0, r3
 80046ec:	3718      	adds	r7, #24
 80046ee:	46bd      	mov	sp, r7
 80046f0:	bd80      	pop	{r7, pc}
 80046f2:	bf00      	nop
 80046f4:	40023800 	.word	0x40023800

080046f8 <HAL_RCC_ClockConfig>:
 80046f8:	b580      	push	{r7, lr}
 80046fa:	b084      	sub	sp, #16
 80046fc:	af00      	add	r7, sp, #0
 80046fe:	6078      	str	r0, [r7, #4]
 8004700:	6039      	str	r1, [r7, #0]
 8004702:	687b      	ldr	r3, [r7, #4]
 8004704:	2b00      	cmp	r3, #0
 8004706:	d101      	bne.n	800470c <HAL_RCC_ClockConfig+0x14>
 8004708:	2301      	movs	r3, #1
 800470a:	e0cc      	b.n	80048a6 <HAL_RCC_ClockConfig+0x1ae>
 800470c:	4b68      	ldr	r3, [pc, #416]	@ (80048b0 <HAL_RCC_ClockConfig+0x1b8>)
 800470e:	681b      	ldr	r3, [r3, #0]
 8004710:	f003 030f 	and.w	r3, r3, #15
 8004714:	683a      	ldr	r2, [r7, #0]
 8004716:	429a      	cmp	r2, r3
 8004718:	d90c      	bls.n	8004734 <HAL_RCC_ClockConfig+0x3c>
 800471a:	4b65      	ldr	r3, [pc, #404]	@ (80048b0 <HAL_RCC_ClockConfig+0x1b8>)
 800471c:	683a      	ldr	r2, [r7, #0]
 800471e:	b2d2      	uxtb	r2, r2
 8004720:	701a      	strb	r2, [r3, #0]
 8004722:	4b63      	ldr	r3, [pc, #396]	@ (80048b0 <HAL_RCC_ClockConfig+0x1b8>)
 8004724:	681b      	ldr	r3, [r3, #0]
 8004726:	f003 030f 	and.w	r3, r3, #15
 800472a:	683a      	ldr	r2, [r7, #0]
 800472c:	429a      	cmp	r2, r3
 800472e:	d001      	beq.n	8004734 <HAL_RCC_ClockConfig+0x3c>
 8004730:	2301      	movs	r3, #1
 8004732:	e0b8      	b.n	80048a6 <HAL_RCC_ClockConfig+0x1ae>
 8004734:	687b      	ldr	r3, [r7, #4]
 8004736:	681b      	ldr	r3, [r3, #0]
 8004738:	f003 0302 	and.w	r3, r3, #2
 800473c:	2b00      	cmp	r3, #0
 800473e:	d020      	beq.n	8004782 <HAL_RCC_ClockConfig+0x8a>
 8004740:	687b      	ldr	r3, [r7, #4]
 8004742:	681b      	ldr	r3, [r3, #0]
 8004744:	f003 0304 	and.w	r3, r3, #4
 8004748:	2b00      	cmp	r3, #0
 800474a:	d005      	beq.n	8004758 <HAL_RCC_ClockConfig+0x60>
 800474c:	4b59      	ldr	r3, [pc, #356]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 800474e:	689b      	ldr	r3, [r3, #8]
 8004750:	4a58      	ldr	r2, [pc, #352]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 8004752:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8004756:	6093      	str	r3, [r2, #8]
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	681b      	ldr	r3, [r3, #0]
 800475c:	f003 0308 	and.w	r3, r3, #8
 8004760:	2b00      	cmp	r3, #0
 8004762:	d005      	beq.n	8004770 <HAL_RCC_ClockConfig+0x78>
 8004764:	4b53      	ldr	r3, [pc, #332]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 8004766:	689b      	ldr	r3, [r3, #8]
 8004768:	4a52      	ldr	r2, [pc, #328]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 800476a:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800476e:	6093      	str	r3, [r2, #8]
 8004770:	4b50      	ldr	r3, [pc, #320]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 8004772:	689b      	ldr	r3, [r3, #8]
 8004774:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004778:	687b      	ldr	r3, [r7, #4]
 800477a:	689b      	ldr	r3, [r3, #8]
 800477c:	494d      	ldr	r1, [pc, #308]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 800477e:	4313      	orrs	r3, r2
 8004780:	608b      	str	r3, [r1, #8]
 8004782:	687b      	ldr	r3, [r7, #4]
 8004784:	681b      	ldr	r3, [r3, #0]
 8004786:	f003 0301 	and.w	r3, r3, #1
 800478a:	2b00      	cmp	r3, #0
 800478c:	d044      	beq.n	8004818 <HAL_RCC_ClockConfig+0x120>
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	685b      	ldr	r3, [r3, #4]
 8004792:	2b01      	cmp	r3, #1
 8004794:	d107      	bne.n	80047a6 <HAL_RCC_ClockConfig+0xae>
 8004796:	4b47      	ldr	r3, [pc, #284]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 8004798:	681b      	ldr	r3, [r3, #0]
 800479a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800479e:	2b00      	cmp	r3, #0
 80047a0:	d119      	bne.n	80047d6 <HAL_RCC_ClockConfig+0xde>
 80047a2:	2301      	movs	r3, #1
 80047a4:	e07f      	b.n	80048a6 <HAL_RCC_ClockConfig+0x1ae>
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	685b      	ldr	r3, [r3, #4]
 80047aa:	2b02      	cmp	r3, #2
 80047ac:	d003      	beq.n	80047b6 <HAL_RCC_ClockConfig+0xbe>
 80047ae:	687b      	ldr	r3, [r7, #4]
 80047b0:	685b      	ldr	r3, [r3, #4]
 80047b2:	2b03      	cmp	r3, #3
 80047b4:	d107      	bne.n	80047c6 <HAL_RCC_ClockConfig+0xce>
 80047b6:	4b3f      	ldr	r3, [pc, #252]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 80047b8:	681b      	ldr	r3, [r3, #0]
 80047ba:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80047be:	2b00      	cmp	r3, #0
 80047c0:	d109      	bne.n	80047d6 <HAL_RCC_ClockConfig+0xde>
 80047c2:	2301      	movs	r3, #1
 80047c4:	e06f      	b.n	80048a6 <HAL_RCC_ClockConfig+0x1ae>
 80047c6:	4b3b      	ldr	r3, [pc, #236]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 80047c8:	681b      	ldr	r3, [r3, #0]
 80047ca:	f003 0302 	and.w	r3, r3, #2
 80047ce:	2b00      	cmp	r3, #0
 80047d0:	d101      	bne.n	80047d6 <HAL_RCC_ClockConfig+0xde>
 80047d2:	2301      	movs	r3, #1
 80047d4:	e067      	b.n	80048a6 <HAL_RCC_ClockConfig+0x1ae>
 80047d6:	4b37      	ldr	r3, [pc, #220]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 80047d8:	689b      	ldr	r3, [r3, #8]
 80047da:	f023 0203 	bic.w	r2, r3, #3
 80047de:	687b      	ldr	r3, [r7, #4]
 80047e0:	685b      	ldr	r3, [r3, #4]
 80047e2:	4934      	ldr	r1, [pc, #208]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 80047e4:	4313      	orrs	r3, r2
 80047e6:	608b      	str	r3, [r1, #8]
 80047e8:	f7fe fe22 	bl	8003430 <HAL_GetTick>
 80047ec:	60f8      	str	r0, [r7, #12]
 80047ee:	e00a      	b.n	8004806 <HAL_RCC_ClockConfig+0x10e>
 80047f0:	f7fe fe1e 	bl	8003430 <HAL_GetTick>
 80047f4:	4602      	mov	r2, r0
 80047f6:	68fb      	ldr	r3, [r7, #12]
 80047f8:	1ad3      	subs	r3, r2, r3
 80047fa:	f241 3288 	movw	r2, #5000	@ 0x1388
 80047fe:	4293      	cmp	r3, r2
 8004800:	d901      	bls.n	8004806 <HAL_RCC_ClockConfig+0x10e>
 8004802:	2303      	movs	r3, #3
 8004804:	e04f      	b.n	80048a6 <HAL_RCC_ClockConfig+0x1ae>
 8004806:	4b2b      	ldr	r3, [pc, #172]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 8004808:	689b      	ldr	r3, [r3, #8]
 800480a:	f003 020c 	and.w	r2, r3, #12
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	685b      	ldr	r3, [r3, #4]
 8004812:	009b      	lsls	r3, r3, #2
 8004814:	429a      	cmp	r2, r3
 8004816:	d1eb      	bne.n	80047f0 <HAL_RCC_ClockConfig+0xf8>
 8004818:	4b25      	ldr	r3, [pc, #148]	@ (80048b0 <HAL_RCC_ClockConfig+0x1b8>)
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	f003 030f 	and.w	r3, r3, #15
 8004820:	683a      	ldr	r2, [r7, #0]
 8004822:	429a      	cmp	r2, r3
 8004824:	d20c      	bcs.n	8004840 <HAL_RCC_ClockConfig+0x148>
 8004826:	4b22      	ldr	r3, [pc, #136]	@ (80048b0 <HAL_RCC_ClockConfig+0x1b8>)
 8004828:	683a      	ldr	r2, [r7, #0]
 800482a:	b2d2      	uxtb	r2, r2
 800482c:	701a      	strb	r2, [r3, #0]
 800482e:	4b20      	ldr	r3, [pc, #128]	@ (80048b0 <HAL_RCC_ClockConfig+0x1b8>)
 8004830:	681b      	ldr	r3, [r3, #0]
 8004832:	f003 030f 	and.w	r3, r3, #15
 8004836:	683a      	ldr	r2, [r7, #0]
 8004838:	429a      	cmp	r2, r3
 800483a:	d001      	beq.n	8004840 <HAL_RCC_ClockConfig+0x148>
 800483c:	2301      	movs	r3, #1
 800483e:	e032      	b.n	80048a6 <HAL_RCC_ClockConfig+0x1ae>
 8004840:	687b      	ldr	r3, [r7, #4]
 8004842:	681b      	ldr	r3, [r3, #0]
 8004844:	f003 0304 	and.w	r3, r3, #4
 8004848:	2b00      	cmp	r3, #0
 800484a:	d008      	beq.n	800485e <HAL_RCC_ClockConfig+0x166>
 800484c:	4b19      	ldr	r3, [pc, #100]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 800484e:	689b      	ldr	r3, [r3, #8]
 8004850:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8004854:	687b      	ldr	r3, [r7, #4]
 8004856:	68db      	ldr	r3, [r3, #12]
 8004858:	4916      	ldr	r1, [pc, #88]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 800485a:	4313      	orrs	r3, r2
 800485c:	608b      	str	r3, [r1, #8]
 800485e:	687b      	ldr	r3, [r7, #4]
 8004860:	681b      	ldr	r3, [r3, #0]
 8004862:	f003 0308 	and.w	r3, r3, #8
 8004866:	2b00      	cmp	r3, #0
 8004868:	d009      	beq.n	800487e <HAL_RCC_ClockConfig+0x186>
 800486a:	4b12      	ldr	r3, [pc, #72]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 800486c:	689b      	ldr	r3, [r3, #8]
 800486e:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8004872:	687b      	ldr	r3, [r7, #4]
 8004874:	691b      	ldr	r3, [r3, #16]
 8004876:	00db      	lsls	r3, r3, #3
 8004878:	490e      	ldr	r1, [pc, #56]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 800487a:	4313      	orrs	r3, r2
 800487c:	608b      	str	r3, [r1, #8]
 800487e:	f000 f821 	bl	80048c4 <HAL_RCC_GetSysClockFreq>
 8004882:	4602      	mov	r2, r0
 8004884:	4b0b      	ldr	r3, [pc, #44]	@ (80048b4 <HAL_RCC_ClockConfig+0x1bc>)
 8004886:	689b      	ldr	r3, [r3, #8]
 8004888:	091b      	lsrs	r3, r3, #4
 800488a:	f003 030f 	and.w	r3, r3, #15
 800488e:	490a      	ldr	r1, [pc, #40]	@ (80048b8 <HAL_RCC_ClockConfig+0x1c0>)
 8004890:	5ccb      	ldrb	r3, [r1, r3]
 8004892:	fa22 f303 	lsr.w	r3, r2, r3
 8004896:	4a09      	ldr	r2, [pc, #36]	@ (80048bc <HAL_RCC_ClockConfig+0x1c4>)
 8004898:	6013      	str	r3, [r2, #0]
 800489a:	4b09      	ldr	r3, [pc, #36]	@ (80048c0 <HAL_RCC_ClockConfig+0x1c8>)
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	4618      	mov	r0, r3
 80048a0:	f7fe fd82 	bl	80033a8 <HAL_InitTick>
 80048a4:	2300      	movs	r3, #0
 80048a6:	4618      	mov	r0, r3
 80048a8:	3710      	adds	r7, #16
 80048aa:	46bd      	mov	sp, r7
 80048ac:	bd80      	pop	{r7, pc}
 80048ae:	bf00      	nop
 80048b0:	40023c00 	.word	0x40023c00
 80048b4:	40023800 	.word	0x40023800
 80048b8:	080084ac 	.word	0x080084ac
 80048bc:	20000018 	.word	0x20000018
 80048c0:	2000001c 	.word	0x2000001c

080048c4 <HAL_RCC_GetSysClockFreq>:
 80048c4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80048c8:	b094      	sub	sp, #80	@ 0x50
 80048ca:	af00      	add	r7, sp, #0
 80048cc:	2300      	movs	r3, #0
 80048ce:	647b      	str	r3, [r7, #68]	@ 0x44
 80048d0:	2300      	movs	r3, #0
 80048d2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80048d4:	2300      	movs	r3, #0
 80048d6:	643b      	str	r3, [r7, #64]	@ 0x40
 80048d8:	2300      	movs	r3, #0
 80048da:	64bb      	str	r3, [r7, #72]	@ 0x48
 80048dc:	4b79      	ldr	r3, [pc, #484]	@ (8004ac4 <HAL_RCC_GetSysClockFreq+0x200>)
 80048de:	689b      	ldr	r3, [r3, #8]
 80048e0:	f003 030c 	and.w	r3, r3, #12
 80048e4:	2b08      	cmp	r3, #8
 80048e6:	d00d      	beq.n	8004904 <HAL_RCC_GetSysClockFreq+0x40>
 80048e8:	2b08      	cmp	r3, #8
 80048ea:	f200 80e1 	bhi.w	8004ab0 <HAL_RCC_GetSysClockFreq+0x1ec>
 80048ee:	2b00      	cmp	r3, #0
 80048f0:	d002      	beq.n	80048f8 <HAL_RCC_GetSysClockFreq+0x34>
 80048f2:	2b04      	cmp	r3, #4
 80048f4:	d003      	beq.n	80048fe <HAL_RCC_GetSysClockFreq+0x3a>
 80048f6:	e0db      	b.n	8004ab0 <HAL_RCC_GetSysClockFreq+0x1ec>
 80048f8:	4b73      	ldr	r3, [pc, #460]	@ (8004ac8 <HAL_RCC_GetSysClockFreq+0x204>)
 80048fa:	64bb      	str	r3, [r7, #72]	@ 0x48
 80048fc:	e0db      	b.n	8004ab6 <HAL_RCC_GetSysClockFreq+0x1f2>
 80048fe:	4b73      	ldr	r3, [pc, #460]	@ (8004acc <HAL_RCC_GetSysClockFreq+0x208>)
 8004900:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004902:	e0d8      	b.n	8004ab6 <HAL_RCC_GetSysClockFreq+0x1f2>
 8004904:	4b6f      	ldr	r3, [pc, #444]	@ (8004ac4 <HAL_RCC_GetSysClockFreq+0x200>)
 8004906:	685b      	ldr	r3, [r3, #4]
 8004908:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800490c:	647b      	str	r3, [r7, #68]	@ 0x44
 800490e:	4b6d      	ldr	r3, [pc, #436]	@ (8004ac4 <HAL_RCC_GetSysClockFreq+0x200>)
 8004910:	685b      	ldr	r3, [r3, #4]
 8004912:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004916:	2b00      	cmp	r3, #0
 8004918:	d063      	beq.n	80049e2 <HAL_RCC_GetSysClockFreq+0x11e>
 800491a:	4b6a      	ldr	r3, [pc, #424]	@ (8004ac4 <HAL_RCC_GetSysClockFreq+0x200>)
 800491c:	685b      	ldr	r3, [r3, #4]
 800491e:	099b      	lsrs	r3, r3, #6
 8004920:	2200      	movs	r2, #0
 8004922:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004924:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8004926:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004928:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800492c:	633b      	str	r3, [r7, #48]	@ 0x30
 800492e:	2300      	movs	r3, #0
 8004930:	637b      	str	r3, [r7, #52]	@ 0x34
 8004932:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8004936:	4622      	mov	r2, r4
 8004938:	462b      	mov	r3, r5
 800493a:	f04f 0000 	mov.w	r0, #0
 800493e:	f04f 0100 	mov.w	r1, #0
 8004942:	0159      	lsls	r1, r3, #5
 8004944:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004948:	0150      	lsls	r0, r2, #5
 800494a:	4602      	mov	r2, r0
 800494c:	460b      	mov	r3, r1
 800494e:	4621      	mov	r1, r4
 8004950:	1a51      	subs	r1, r2, r1
 8004952:	6139      	str	r1, [r7, #16]
 8004954:	4629      	mov	r1, r5
 8004956:	eb63 0301 	sbc.w	r3, r3, r1
 800495a:	617b      	str	r3, [r7, #20]
 800495c:	f04f 0200 	mov.w	r2, #0
 8004960:	f04f 0300 	mov.w	r3, #0
 8004964:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004968:	4659      	mov	r1, fp
 800496a:	018b      	lsls	r3, r1, #6
 800496c:	4651      	mov	r1, sl
 800496e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004972:	4651      	mov	r1, sl
 8004974:	018a      	lsls	r2, r1, #6
 8004976:	4651      	mov	r1, sl
 8004978:	ebb2 0801 	subs.w	r8, r2, r1
 800497c:	4659      	mov	r1, fp
 800497e:	eb63 0901 	sbc.w	r9, r3, r1
 8004982:	f04f 0200 	mov.w	r2, #0
 8004986:	f04f 0300 	mov.w	r3, #0
 800498a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800498e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004992:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004996:	4690      	mov	r8, r2
 8004998:	4699      	mov	r9, r3
 800499a:	4623      	mov	r3, r4
 800499c:	eb18 0303 	adds.w	r3, r8, r3
 80049a0:	60bb      	str	r3, [r7, #8]
 80049a2:	462b      	mov	r3, r5
 80049a4:	eb49 0303 	adc.w	r3, r9, r3
 80049a8:	60fb      	str	r3, [r7, #12]
 80049aa:	f04f 0200 	mov.w	r2, #0
 80049ae:	f04f 0300 	mov.w	r3, #0
 80049b2:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80049b6:	4629      	mov	r1, r5
 80049b8:	024b      	lsls	r3, r1, #9
 80049ba:	4621      	mov	r1, r4
 80049bc:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80049c0:	4621      	mov	r1, r4
 80049c2:	024a      	lsls	r2, r1, #9
 80049c4:	4610      	mov	r0, r2
 80049c6:	4619      	mov	r1, r3
 80049c8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80049ca:	2200      	movs	r2, #0
 80049cc:	62bb      	str	r3, [r7, #40]	@ 0x28
 80049ce:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80049d0:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80049d4:	f7fb fc5c 	bl	8000290 <__aeabi_uldivmod>
 80049d8:	4602      	mov	r2, r0
 80049da:	460b      	mov	r3, r1
 80049dc:	4613      	mov	r3, r2
 80049de:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80049e0:	e058      	b.n	8004a94 <HAL_RCC_GetSysClockFreq+0x1d0>
 80049e2:	4b38      	ldr	r3, [pc, #224]	@ (8004ac4 <HAL_RCC_GetSysClockFreq+0x200>)
 80049e4:	685b      	ldr	r3, [r3, #4]
 80049e6:	099b      	lsrs	r3, r3, #6
 80049e8:	2200      	movs	r2, #0
 80049ea:	4618      	mov	r0, r3
 80049ec:	4611      	mov	r1, r2
 80049ee:	f3c0 0308 	ubfx	r3, r0, #0, #9
 80049f2:	623b      	str	r3, [r7, #32]
 80049f4:	2300      	movs	r3, #0
 80049f6:	627b      	str	r3, [r7, #36]	@ 0x24
 80049f8:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 80049fc:	4642      	mov	r2, r8
 80049fe:	464b      	mov	r3, r9
 8004a00:	f04f 0000 	mov.w	r0, #0
 8004a04:	f04f 0100 	mov.w	r1, #0
 8004a08:	0159      	lsls	r1, r3, #5
 8004a0a:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004a0e:	0150      	lsls	r0, r2, #5
 8004a10:	4602      	mov	r2, r0
 8004a12:	460b      	mov	r3, r1
 8004a14:	4641      	mov	r1, r8
 8004a16:	ebb2 0a01 	subs.w	sl, r2, r1
 8004a1a:	4649      	mov	r1, r9
 8004a1c:	eb63 0b01 	sbc.w	fp, r3, r1
 8004a20:	f04f 0200 	mov.w	r2, #0
 8004a24:	f04f 0300 	mov.w	r3, #0
 8004a28:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8004a2c:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8004a30:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8004a34:	ebb2 040a 	subs.w	r4, r2, sl
 8004a38:	eb63 050b 	sbc.w	r5, r3, fp
 8004a3c:	f04f 0200 	mov.w	r2, #0
 8004a40:	f04f 0300 	mov.w	r3, #0
 8004a44:	00eb      	lsls	r3, r5, #3
 8004a46:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004a4a:	00e2      	lsls	r2, r4, #3
 8004a4c:	4614      	mov	r4, r2
 8004a4e:	461d      	mov	r5, r3
 8004a50:	4643      	mov	r3, r8
 8004a52:	18e3      	adds	r3, r4, r3
 8004a54:	603b      	str	r3, [r7, #0]
 8004a56:	464b      	mov	r3, r9
 8004a58:	eb45 0303 	adc.w	r3, r5, r3
 8004a5c:	607b      	str	r3, [r7, #4]
 8004a5e:	f04f 0200 	mov.w	r2, #0
 8004a62:	f04f 0300 	mov.w	r3, #0
 8004a66:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004a6a:	4629      	mov	r1, r5
 8004a6c:	028b      	lsls	r3, r1, #10
 8004a6e:	4621      	mov	r1, r4
 8004a70:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004a74:	4621      	mov	r1, r4
 8004a76:	028a      	lsls	r2, r1, #10
 8004a78:	4610      	mov	r0, r2
 8004a7a:	4619      	mov	r1, r3
 8004a7c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004a7e:	2200      	movs	r2, #0
 8004a80:	61bb      	str	r3, [r7, #24]
 8004a82:	61fa      	str	r2, [r7, #28]
 8004a84:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004a88:	f7fb fc02 	bl	8000290 <__aeabi_uldivmod>
 8004a8c:	4602      	mov	r2, r0
 8004a8e:	460b      	mov	r3, r1
 8004a90:	4613      	mov	r3, r2
 8004a92:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004a94:	4b0b      	ldr	r3, [pc, #44]	@ (8004ac4 <HAL_RCC_GetSysClockFreq+0x200>)
 8004a96:	685b      	ldr	r3, [r3, #4]
 8004a98:	0c1b      	lsrs	r3, r3, #16
 8004a9a:	f003 0303 	and.w	r3, r3, #3
 8004a9e:	3301      	adds	r3, #1
 8004aa0:	005b      	lsls	r3, r3, #1
 8004aa2:	643b      	str	r3, [r7, #64]	@ 0x40
 8004aa4:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8004aa6:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004aa8:	fbb2 f3f3 	udiv	r3, r2, r3
 8004aac:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004aae:	e002      	b.n	8004ab6 <HAL_RCC_GetSysClockFreq+0x1f2>
 8004ab0:	4b05      	ldr	r3, [pc, #20]	@ (8004ac8 <HAL_RCC_GetSysClockFreq+0x204>)
 8004ab2:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004ab4:	bf00      	nop
 8004ab6:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004ab8:	4618      	mov	r0, r3
 8004aba:	3750      	adds	r7, #80	@ 0x50
 8004abc:	46bd      	mov	sp, r7
 8004abe:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004ac2:	bf00      	nop
 8004ac4:	40023800 	.word	0x40023800
 8004ac8:	00f42400 	.word	0x00f42400
 8004acc:	007a1200 	.word	0x007a1200

08004ad0 <HAL_RCCEx_PeriphCLKConfig>:
 8004ad0:	b580      	push	{r7, lr}
 8004ad2:	b086      	sub	sp, #24
 8004ad4:	af00      	add	r7, sp, #0
 8004ad6:	6078      	str	r0, [r7, #4]
 8004ad8:	2300      	movs	r3, #0
 8004ada:	617b      	str	r3, [r7, #20]
 8004adc:	2300      	movs	r3, #0
 8004ade:	613b      	str	r3, [r7, #16]
 8004ae0:	687b      	ldr	r3, [r7, #4]
 8004ae2:	681b      	ldr	r3, [r3, #0]
 8004ae4:	f003 0301 	and.w	r3, r3, #1
 8004ae8:	2b00      	cmp	r3, #0
 8004aea:	d10b      	bne.n	8004b04 <HAL_RCCEx_PeriphCLKConfig+0x34>
 8004aec:	687b      	ldr	r3, [r7, #4]
 8004aee:	681b      	ldr	r3, [r3, #0]
 8004af0:	f003 0302 	and.w	r3, r3, #2
 8004af4:	2b00      	cmp	r3, #0
 8004af6:	d105      	bne.n	8004b04 <HAL_RCCEx_PeriphCLKConfig+0x34>
 8004af8:	687b      	ldr	r3, [r7, #4]
 8004afa:	681b      	ldr	r3, [r3, #0]
 8004afc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004b00:	2b00      	cmp	r3, #0
 8004b02:	d075      	beq.n	8004bf0 <HAL_RCCEx_PeriphCLKConfig+0x120>
 8004b04:	4b91      	ldr	r3, [pc, #580]	@ (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8004b06:	2200      	movs	r2, #0
 8004b08:	601a      	str	r2, [r3, #0]
 8004b0a:	f7fe fc91 	bl	8003430 <HAL_GetTick>
 8004b0e:	6178      	str	r0, [r7, #20]
 8004b10:	e008      	b.n	8004b24 <HAL_RCCEx_PeriphCLKConfig+0x54>
 8004b12:	f7fe fc8d 	bl	8003430 <HAL_GetTick>
 8004b16:	4602      	mov	r2, r0
 8004b18:	697b      	ldr	r3, [r7, #20]
 8004b1a:	1ad3      	subs	r3, r2, r3
 8004b1c:	2b02      	cmp	r3, #2
 8004b1e:	d901      	bls.n	8004b24 <HAL_RCCEx_PeriphCLKConfig+0x54>
 8004b20:	2303      	movs	r3, #3
 8004b22:	e189      	b.n	8004e38 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8004b24:	4b8a      	ldr	r3, [pc, #552]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004b26:	681b      	ldr	r3, [r3, #0]
 8004b28:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8004b2c:	2b00      	cmp	r3, #0
 8004b2e:	d1f0      	bne.n	8004b12 <HAL_RCCEx_PeriphCLKConfig+0x42>
 8004b30:	687b      	ldr	r3, [r7, #4]
 8004b32:	681b      	ldr	r3, [r3, #0]
 8004b34:	f003 0301 	and.w	r3, r3, #1
 8004b38:	2b00      	cmp	r3, #0
 8004b3a:	d009      	beq.n	8004b50 <HAL_RCCEx_PeriphCLKConfig+0x80>
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	685b      	ldr	r3, [r3, #4]
 8004b40:	019a      	lsls	r2, r3, #6
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	689b      	ldr	r3, [r3, #8]
 8004b46:	071b      	lsls	r3, r3, #28
 8004b48:	4981      	ldr	r1, [pc, #516]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004b4a:	4313      	orrs	r3, r2
 8004b4c:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
 8004b50:	687b      	ldr	r3, [r7, #4]
 8004b52:	681b      	ldr	r3, [r3, #0]
 8004b54:	f003 0302 	and.w	r3, r3, #2
 8004b58:	2b00      	cmp	r3, #0
 8004b5a:	d01f      	beq.n	8004b9c <HAL_RCCEx_PeriphCLKConfig+0xcc>
 8004b5c:	4b7c      	ldr	r3, [pc, #496]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004b5e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8004b62:	0f1b      	lsrs	r3, r3, #28
 8004b64:	f003 0307 	and.w	r3, r3, #7
 8004b68:	613b      	str	r3, [r7, #16]
 8004b6a:	687b      	ldr	r3, [r7, #4]
 8004b6c:	685b      	ldr	r3, [r3, #4]
 8004b6e:	019a      	lsls	r2, r3, #6
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	68db      	ldr	r3, [r3, #12]
 8004b74:	061b      	lsls	r3, r3, #24
 8004b76:	431a      	orrs	r2, r3
 8004b78:	693b      	ldr	r3, [r7, #16]
 8004b7a:	071b      	lsls	r3, r3, #28
 8004b7c:	4974      	ldr	r1, [pc, #464]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004b7e:	4313      	orrs	r3, r2
 8004b80:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
 8004b84:	4b72      	ldr	r3, [pc, #456]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004b86:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8004b8a:	f023 021f 	bic.w	r2, r3, #31
 8004b8e:	687b      	ldr	r3, [r7, #4]
 8004b90:	69db      	ldr	r3, [r3, #28]
 8004b92:	3b01      	subs	r3, #1
 8004b94:	496e      	ldr	r1, [pc, #440]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004b96:	4313      	orrs	r3, r2
 8004b98:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
 8004b9c:	687b      	ldr	r3, [r7, #4]
 8004b9e:	681b      	ldr	r3, [r3, #0]
 8004ba0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004ba4:	2b00      	cmp	r3, #0
 8004ba6:	d00d      	beq.n	8004bc4 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8004ba8:	687b      	ldr	r3, [r7, #4]
 8004baa:	685b      	ldr	r3, [r3, #4]
 8004bac:	019a      	lsls	r2, r3, #6
 8004bae:	687b      	ldr	r3, [r7, #4]
 8004bb0:	68db      	ldr	r3, [r3, #12]
 8004bb2:	061b      	lsls	r3, r3, #24
 8004bb4:	431a      	orrs	r2, r3
 8004bb6:	687b      	ldr	r3, [r7, #4]
 8004bb8:	689b      	ldr	r3, [r3, #8]
 8004bba:	071b      	lsls	r3, r3, #28
 8004bbc:	4964      	ldr	r1, [pc, #400]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004bbe:	4313      	orrs	r3, r2
 8004bc0:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
 8004bc4:	4b61      	ldr	r3, [pc, #388]	@ (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8004bc6:	2201      	movs	r2, #1
 8004bc8:	601a      	str	r2, [r3, #0]
 8004bca:	f7fe fc31 	bl	8003430 <HAL_GetTick>
 8004bce:	6178      	str	r0, [r7, #20]
 8004bd0:	e008      	b.n	8004be4 <HAL_RCCEx_PeriphCLKConfig+0x114>
 8004bd2:	f7fe fc2d 	bl	8003430 <HAL_GetTick>
 8004bd6:	4602      	mov	r2, r0
 8004bd8:	697b      	ldr	r3, [r7, #20]
 8004bda:	1ad3      	subs	r3, r2, r3
 8004bdc:	2b02      	cmp	r3, #2
 8004bde:	d901      	bls.n	8004be4 <HAL_RCCEx_PeriphCLKConfig+0x114>
 8004be0:	2303      	movs	r3, #3
 8004be2:	e129      	b.n	8004e38 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8004be4:	4b5a      	ldr	r3, [pc, #360]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004be6:	681b      	ldr	r3, [r3, #0]
 8004be8:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8004bec:	2b00      	cmp	r3, #0
 8004bee:	d0f0      	beq.n	8004bd2 <HAL_RCCEx_PeriphCLKConfig+0x102>
 8004bf0:	687b      	ldr	r3, [r7, #4]
 8004bf2:	681b      	ldr	r3, [r3, #0]
 8004bf4:	f003 0304 	and.w	r3, r3, #4
 8004bf8:	2b00      	cmp	r3, #0
 8004bfa:	d105      	bne.n	8004c08 <HAL_RCCEx_PeriphCLKConfig+0x138>
 8004bfc:	687b      	ldr	r3, [r7, #4]
 8004bfe:	681b      	ldr	r3, [r3, #0]
 8004c00:	f003 0308 	and.w	r3, r3, #8
 8004c04:	2b00      	cmp	r3, #0
 8004c06:	d079      	beq.n	8004cfc <HAL_RCCEx_PeriphCLKConfig+0x22c>
 8004c08:	4b52      	ldr	r3, [pc, #328]	@ (8004d54 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8004c0a:	2200      	movs	r2, #0
 8004c0c:	601a      	str	r2, [r3, #0]
 8004c0e:	f7fe fc0f 	bl	8003430 <HAL_GetTick>
 8004c12:	6178      	str	r0, [r7, #20]
 8004c14:	e008      	b.n	8004c28 <HAL_RCCEx_PeriphCLKConfig+0x158>
 8004c16:	f7fe fc0b 	bl	8003430 <HAL_GetTick>
 8004c1a:	4602      	mov	r2, r0
 8004c1c:	697b      	ldr	r3, [r7, #20]
 8004c1e:	1ad3      	subs	r3, r2, r3
 8004c20:	2b02      	cmp	r3, #2
 8004c22:	d901      	bls.n	8004c28 <HAL_RCCEx_PeriphCLKConfig+0x158>
 8004c24:	2303      	movs	r3, #3
 8004c26:	e107      	b.n	8004e38 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8004c28:	4b49      	ldr	r3, [pc, #292]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004c2a:	681b      	ldr	r3, [r3, #0]
 8004c2c:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8004c30:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8004c34:	d0ef      	beq.n	8004c16 <HAL_RCCEx_PeriphCLKConfig+0x146>
 8004c36:	687b      	ldr	r3, [r7, #4]
 8004c38:	681b      	ldr	r3, [r3, #0]
 8004c3a:	f003 0304 	and.w	r3, r3, #4
 8004c3e:	2b00      	cmp	r3, #0
 8004c40:	d020      	beq.n	8004c84 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8004c42:	4b43      	ldr	r3, [pc, #268]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004c44:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004c48:	0f1b      	lsrs	r3, r3, #28
 8004c4a:	f003 0307 	and.w	r3, r3, #7
 8004c4e:	613b      	str	r3, [r7, #16]
 8004c50:	687b      	ldr	r3, [r7, #4]
 8004c52:	691b      	ldr	r3, [r3, #16]
 8004c54:	019a      	lsls	r2, r3, #6
 8004c56:	687b      	ldr	r3, [r7, #4]
 8004c58:	695b      	ldr	r3, [r3, #20]
 8004c5a:	061b      	lsls	r3, r3, #24
 8004c5c:	431a      	orrs	r2, r3
 8004c5e:	693b      	ldr	r3, [r7, #16]
 8004c60:	071b      	lsls	r3, r3, #28
 8004c62:	493b      	ldr	r1, [pc, #236]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004c64:	4313      	orrs	r3, r2
 8004c66:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004c6a:	4b39      	ldr	r3, [pc, #228]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004c6c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8004c70:	f423 52f8 	bic.w	r2, r3, #7936	@ 0x1f00
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	6a1b      	ldr	r3, [r3, #32]
 8004c78:	3b01      	subs	r3, #1
 8004c7a:	021b      	lsls	r3, r3, #8
 8004c7c:	4934      	ldr	r1, [pc, #208]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004c7e:	4313      	orrs	r3, r2
 8004c80:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
 8004c84:	687b      	ldr	r3, [r7, #4]
 8004c86:	681b      	ldr	r3, [r3, #0]
 8004c88:	f003 0308 	and.w	r3, r3, #8
 8004c8c:	2b00      	cmp	r3, #0
 8004c8e:	d01e      	beq.n	8004cce <HAL_RCCEx_PeriphCLKConfig+0x1fe>
 8004c90:	4b2f      	ldr	r3, [pc, #188]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004c92:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004c96:	0e1b      	lsrs	r3, r3, #24
 8004c98:	f003 030f 	and.w	r3, r3, #15
 8004c9c:	613b      	str	r3, [r7, #16]
 8004c9e:	687b      	ldr	r3, [r7, #4]
 8004ca0:	691b      	ldr	r3, [r3, #16]
 8004ca2:	019a      	lsls	r2, r3, #6
 8004ca4:	693b      	ldr	r3, [r7, #16]
 8004ca6:	061b      	lsls	r3, r3, #24
 8004ca8:	431a      	orrs	r2, r3
 8004caa:	687b      	ldr	r3, [r7, #4]
 8004cac:	699b      	ldr	r3, [r3, #24]
 8004cae:	071b      	lsls	r3, r3, #28
 8004cb0:	4927      	ldr	r1, [pc, #156]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004cb2:	4313      	orrs	r3, r2
 8004cb4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004cb8:	4b25      	ldr	r3, [pc, #148]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004cba:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8004cbe:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8004cc2:	687b      	ldr	r3, [r7, #4]
 8004cc4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004cc6:	4922      	ldr	r1, [pc, #136]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004cc8:	4313      	orrs	r3, r2
 8004cca:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
 8004cce:	4b21      	ldr	r3, [pc, #132]	@ (8004d54 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8004cd0:	2201      	movs	r2, #1
 8004cd2:	601a      	str	r2, [r3, #0]
 8004cd4:	f7fe fbac 	bl	8003430 <HAL_GetTick>
 8004cd8:	6178      	str	r0, [r7, #20]
 8004cda:	e008      	b.n	8004cee <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8004cdc:	f7fe fba8 	bl	8003430 <HAL_GetTick>
 8004ce0:	4602      	mov	r2, r0
 8004ce2:	697b      	ldr	r3, [r7, #20]
 8004ce4:	1ad3      	subs	r3, r2, r3
 8004ce6:	2b02      	cmp	r3, #2
 8004ce8:	d901      	bls.n	8004cee <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8004cea:	2303      	movs	r3, #3
 8004cec:	e0a4      	b.n	8004e38 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8004cee:	4b18      	ldr	r3, [pc, #96]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004cf0:	681b      	ldr	r3, [r3, #0]
 8004cf2:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8004cf6:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8004cfa:	d1ef      	bne.n	8004cdc <HAL_RCCEx_PeriphCLKConfig+0x20c>
 8004cfc:	687b      	ldr	r3, [r7, #4]
 8004cfe:	681b      	ldr	r3, [r3, #0]
 8004d00:	f003 0320 	and.w	r3, r3, #32
 8004d04:	2b00      	cmp	r3, #0
 8004d06:	f000 808b 	beq.w	8004e20 <HAL_RCCEx_PeriphCLKConfig+0x350>
 8004d0a:	2300      	movs	r3, #0
 8004d0c:	60fb      	str	r3, [r7, #12]
 8004d0e:	4b10      	ldr	r3, [pc, #64]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004d10:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004d12:	4a0f      	ldr	r2, [pc, #60]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004d14:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004d18:	6413      	str	r3, [r2, #64]	@ 0x40
 8004d1a:	4b0d      	ldr	r3, [pc, #52]	@ (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004d1c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004d1e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004d22:	60fb      	str	r3, [r7, #12]
 8004d24:	68fb      	ldr	r3, [r7, #12]
 8004d26:	4b0c      	ldr	r3, [pc, #48]	@ (8004d58 <HAL_RCCEx_PeriphCLKConfig+0x288>)
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	4a0b      	ldr	r2, [pc, #44]	@ (8004d58 <HAL_RCCEx_PeriphCLKConfig+0x288>)
 8004d2c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004d30:	6013      	str	r3, [r2, #0]
 8004d32:	f7fe fb7d 	bl	8003430 <HAL_GetTick>
 8004d36:	6178      	str	r0, [r7, #20]
 8004d38:	e010      	b.n	8004d5c <HAL_RCCEx_PeriphCLKConfig+0x28c>
 8004d3a:	f7fe fb79 	bl	8003430 <HAL_GetTick>
 8004d3e:	4602      	mov	r2, r0
 8004d40:	697b      	ldr	r3, [r7, #20]
 8004d42:	1ad3      	subs	r3, r2, r3
 8004d44:	2b02      	cmp	r3, #2
 8004d46:	d909      	bls.n	8004d5c <HAL_RCCEx_PeriphCLKConfig+0x28c>
 8004d48:	2303      	movs	r3, #3
 8004d4a:	e075      	b.n	8004e38 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8004d4c:	42470068 	.word	0x42470068
 8004d50:	40023800 	.word	0x40023800
 8004d54:	42470070 	.word	0x42470070
 8004d58:	40007000 	.word	0x40007000
 8004d5c:	4b38      	ldr	r3, [pc, #224]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x370>)
 8004d5e:	681b      	ldr	r3, [r3, #0]
 8004d60:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004d64:	2b00      	cmp	r3, #0
 8004d66:	d0e8      	beq.n	8004d3a <HAL_RCCEx_PeriphCLKConfig+0x26a>
 8004d68:	4b36      	ldr	r3, [pc, #216]	@ (8004e44 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004d6a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004d6c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004d70:	613b      	str	r3, [r7, #16]
 8004d72:	693b      	ldr	r3, [r7, #16]
 8004d74:	2b00      	cmp	r3, #0
 8004d76:	d02f      	beq.n	8004dd8 <HAL_RCCEx_PeriphCLKConfig+0x308>
 8004d78:	687b      	ldr	r3, [r7, #4]
 8004d7a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004d7c:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004d80:	693a      	ldr	r2, [r7, #16]
 8004d82:	429a      	cmp	r2, r3
 8004d84:	d028      	beq.n	8004dd8 <HAL_RCCEx_PeriphCLKConfig+0x308>
 8004d86:	4b2f      	ldr	r3, [pc, #188]	@ (8004e44 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004d88:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004d8a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004d8e:	613b      	str	r3, [r7, #16]
 8004d90:	4b2d      	ldr	r3, [pc, #180]	@ (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x378>)
 8004d92:	2201      	movs	r2, #1
 8004d94:	601a      	str	r2, [r3, #0]
 8004d96:	4b2c      	ldr	r3, [pc, #176]	@ (8004e48 <HAL_RCCEx_PeriphCLKConfig+0x378>)
 8004d98:	2200      	movs	r2, #0
 8004d9a:	601a      	str	r2, [r3, #0]
 8004d9c:	4a29      	ldr	r2, [pc, #164]	@ (8004e44 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004d9e:	693b      	ldr	r3, [r7, #16]
 8004da0:	6713      	str	r3, [r2, #112]	@ 0x70
 8004da2:	4b28      	ldr	r3, [pc, #160]	@ (8004e44 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004da4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004da6:	f003 0301 	and.w	r3, r3, #1
 8004daa:	2b01      	cmp	r3, #1
 8004dac:	d114      	bne.n	8004dd8 <HAL_RCCEx_PeriphCLKConfig+0x308>
 8004dae:	f7fe fb3f 	bl	8003430 <HAL_GetTick>
 8004db2:	6178      	str	r0, [r7, #20]
 8004db4:	e00a      	b.n	8004dcc <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 8004db6:	f7fe fb3b 	bl	8003430 <HAL_GetTick>
 8004dba:	4602      	mov	r2, r0
 8004dbc:	697b      	ldr	r3, [r7, #20]
 8004dbe:	1ad3      	subs	r3, r2, r3
 8004dc0:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004dc4:	4293      	cmp	r3, r2
 8004dc6:	d901      	bls.n	8004dcc <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 8004dc8:	2303      	movs	r3, #3
 8004dca:	e035      	b.n	8004e38 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8004dcc:	4b1d      	ldr	r3, [pc, #116]	@ (8004e44 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004dce:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004dd0:	f003 0302 	and.w	r3, r3, #2
 8004dd4:	2b00      	cmp	r3, #0
 8004dd6:	d0ee      	beq.n	8004db6 <HAL_RCCEx_PeriphCLKConfig+0x2e6>
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004ddc:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004de0:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8004de4:	d10d      	bne.n	8004e02 <HAL_RCCEx_PeriphCLKConfig+0x332>
 8004de6:	4b17      	ldr	r3, [pc, #92]	@ (8004e44 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004de8:	689b      	ldr	r3, [r3, #8]
 8004dea:	f423 12f8 	bic.w	r2, r3, #2031616	@ 0x1f0000
 8004dee:	687b      	ldr	r3, [r7, #4]
 8004df0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004df2:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8004df6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004dfa:	4912      	ldr	r1, [pc, #72]	@ (8004e44 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004dfc:	4313      	orrs	r3, r2
 8004dfe:	608b      	str	r3, [r1, #8]
 8004e00:	e005      	b.n	8004e0e <HAL_RCCEx_PeriphCLKConfig+0x33e>
 8004e02:	4b10      	ldr	r3, [pc, #64]	@ (8004e44 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004e04:	689b      	ldr	r3, [r3, #8]
 8004e06:	4a0f      	ldr	r2, [pc, #60]	@ (8004e44 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004e08:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8004e0c:	6093      	str	r3, [r2, #8]
 8004e0e:	4b0d      	ldr	r3, [pc, #52]	@ (8004e44 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004e10:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 8004e12:	687b      	ldr	r3, [r7, #4]
 8004e14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004e16:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004e1a:	490a      	ldr	r1, [pc, #40]	@ (8004e44 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004e1c:	4313      	orrs	r3, r2
 8004e1e:	670b      	str	r3, [r1, #112]	@ 0x70
 8004e20:	687b      	ldr	r3, [r7, #4]
 8004e22:	681b      	ldr	r3, [r3, #0]
 8004e24:	f003 0310 	and.w	r3, r3, #16
 8004e28:	2b00      	cmp	r3, #0
 8004e2a:	d004      	beq.n	8004e36 <HAL_RCCEx_PeriphCLKConfig+0x366>
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	f893 202c 	ldrb.w	r2, [r3, #44]	@ 0x2c
 8004e32:	4b06      	ldr	r3, [pc, #24]	@ (8004e4c <HAL_RCCEx_PeriphCLKConfig+0x37c>)
 8004e34:	601a      	str	r2, [r3, #0]
 8004e36:	2300      	movs	r3, #0
 8004e38:	4618      	mov	r0, r3
 8004e3a:	3718      	adds	r7, #24
 8004e3c:	46bd      	mov	sp, r7
 8004e3e:	bd80      	pop	{r7, pc}
 8004e40:	40007000 	.word	0x40007000
 8004e44:	40023800 	.word	0x40023800
 8004e48:	42470e40 	.word	0x42470e40
 8004e4c:	424711e0 	.word	0x424711e0

08004e50 <HAL_RTC_Init>:
 8004e50:	b580      	push	{r7, lr}
 8004e52:	b084      	sub	sp, #16
 8004e54:	af00      	add	r7, sp, #0
 8004e56:	6078      	str	r0, [r7, #4]
 8004e58:	687b      	ldr	r3, [r7, #4]
 8004e5a:	2b00      	cmp	r3, #0
 8004e5c:	d101      	bne.n	8004e62 <HAL_RTC_Init+0x12>
 8004e5e:	2301      	movs	r3, #1
 8004e60:	e073      	b.n	8004f4a <HAL_RTC_Init+0xfa>
 8004e62:	687b      	ldr	r3, [r7, #4]
 8004e64:	7f5b      	ldrb	r3, [r3, #29]
 8004e66:	b2db      	uxtb	r3, r3
 8004e68:	2b00      	cmp	r3, #0
 8004e6a:	d105      	bne.n	8004e78 <HAL_RTC_Init+0x28>
 8004e6c:	687b      	ldr	r3, [r7, #4]
 8004e6e:	2200      	movs	r2, #0
 8004e70:	771a      	strb	r2, [r3, #28]
 8004e72:	6878      	ldr	r0, [r7, #4]
 8004e74:	f7fe f84e 	bl	8002f14 <HAL_RTC_MspInit>
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	2202      	movs	r2, #2
 8004e7c:	775a      	strb	r2, [r3, #29]
 8004e7e:	687b      	ldr	r3, [r7, #4]
 8004e80:	681b      	ldr	r3, [r3, #0]
 8004e82:	68db      	ldr	r3, [r3, #12]
 8004e84:	f003 0310 	and.w	r3, r3, #16
 8004e88:	2b10      	cmp	r3, #16
 8004e8a:	d055      	beq.n	8004f38 <HAL_RTC_Init+0xe8>
 8004e8c:	687b      	ldr	r3, [r7, #4]
 8004e8e:	681b      	ldr	r3, [r3, #0]
 8004e90:	22ca      	movs	r2, #202	@ 0xca
 8004e92:	625a      	str	r2, [r3, #36]	@ 0x24
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	681b      	ldr	r3, [r3, #0]
 8004e98:	2253      	movs	r2, #83	@ 0x53
 8004e9a:	625a      	str	r2, [r3, #36]	@ 0x24
 8004e9c:	6878      	ldr	r0, [r7, #4]
 8004e9e:	f000 f87f 	bl	8004fa0 <RTC_EnterInitMode>
 8004ea2:	4603      	mov	r3, r0
 8004ea4:	73fb      	strb	r3, [r7, #15]
 8004ea6:	7bfb      	ldrb	r3, [r7, #15]
 8004ea8:	2b00      	cmp	r3, #0
 8004eaa:	d12c      	bne.n	8004f06 <HAL_RTC_Init+0xb6>
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	681b      	ldr	r3, [r3, #0]
 8004eb0:	689b      	ldr	r3, [r3, #8]
 8004eb2:	687a      	ldr	r2, [r7, #4]
 8004eb4:	6812      	ldr	r2, [r2, #0]
 8004eb6:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 8004eba:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004ebe:	6093      	str	r3, [r2, #8]
 8004ec0:	687b      	ldr	r3, [r7, #4]
 8004ec2:	681b      	ldr	r3, [r3, #0]
 8004ec4:	6899      	ldr	r1, [r3, #8]
 8004ec6:	687b      	ldr	r3, [r7, #4]
 8004ec8:	685a      	ldr	r2, [r3, #4]
 8004eca:	687b      	ldr	r3, [r7, #4]
 8004ecc:	691b      	ldr	r3, [r3, #16]
 8004ece:	431a      	orrs	r2, r3
 8004ed0:	687b      	ldr	r3, [r7, #4]
 8004ed2:	695b      	ldr	r3, [r3, #20]
 8004ed4:	431a      	orrs	r2, r3
 8004ed6:	687b      	ldr	r3, [r7, #4]
 8004ed8:	681b      	ldr	r3, [r3, #0]
 8004eda:	430a      	orrs	r2, r1
 8004edc:	609a      	str	r2, [r3, #8]
 8004ede:	687b      	ldr	r3, [r7, #4]
 8004ee0:	681b      	ldr	r3, [r3, #0]
 8004ee2:	687a      	ldr	r2, [r7, #4]
 8004ee4:	68d2      	ldr	r2, [r2, #12]
 8004ee6:	611a      	str	r2, [r3, #16]
 8004ee8:	687b      	ldr	r3, [r7, #4]
 8004eea:	681b      	ldr	r3, [r3, #0]
 8004eec:	6919      	ldr	r1, [r3, #16]
 8004eee:	687b      	ldr	r3, [r7, #4]
 8004ef0:	689b      	ldr	r3, [r3, #8]
 8004ef2:	041a      	lsls	r2, r3, #16
 8004ef4:	687b      	ldr	r3, [r7, #4]
 8004ef6:	681b      	ldr	r3, [r3, #0]
 8004ef8:	430a      	orrs	r2, r1
 8004efa:	611a      	str	r2, [r3, #16]
 8004efc:	6878      	ldr	r0, [r7, #4]
 8004efe:	f000 f886 	bl	800500e <RTC_ExitInitMode>
 8004f02:	4603      	mov	r3, r0
 8004f04:	73fb      	strb	r3, [r7, #15]
 8004f06:	7bfb      	ldrb	r3, [r7, #15]
 8004f08:	2b00      	cmp	r3, #0
 8004f0a:	d110      	bne.n	8004f2e <HAL_RTC_Init+0xde>
 8004f0c:	687b      	ldr	r3, [r7, #4]
 8004f0e:	681b      	ldr	r3, [r3, #0]
 8004f10:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004f12:	687b      	ldr	r3, [r7, #4]
 8004f14:	681b      	ldr	r3, [r3, #0]
 8004f16:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8004f1a:	641a      	str	r2, [r3, #64]	@ 0x40
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	681b      	ldr	r3, [r3, #0]
 8004f20:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8004f22:	687b      	ldr	r3, [r7, #4]
 8004f24:	699a      	ldr	r2, [r3, #24]
 8004f26:	687b      	ldr	r3, [r7, #4]
 8004f28:	681b      	ldr	r3, [r3, #0]
 8004f2a:	430a      	orrs	r2, r1
 8004f2c:	641a      	str	r2, [r3, #64]	@ 0x40
 8004f2e:	687b      	ldr	r3, [r7, #4]
 8004f30:	681b      	ldr	r3, [r3, #0]
 8004f32:	22ff      	movs	r2, #255	@ 0xff
 8004f34:	625a      	str	r2, [r3, #36]	@ 0x24
 8004f36:	e001      	b.n	8004f3c <HAL_RTC_Init+0xec>
 8004f38:	2300      	movs	r3, #0
 8004f3a:	73fb      	strb	r3, [r7, #15]
 8004f3c:	7bfb      	ldrb	r3, [r7, #15]
 8004f3e:	2b00      	cmp	r3, #0
 8004f40:	d102      	bne.n	8004f48 <HAL_RTC_Init+0xf8>
 8004f42:	687b      	ldr	r3, [r7, #4]
 8004f44:	2201      	movs	r2, #1
 8004f46:	775a      	strb	r2, [r3, #29]
 8004f48:	7bfb      	ldrb	r3, [r7, #15]
 8004f4a:	4618      	mov	r0, r3
 8004f4c:	3710      	adds	r7, #16
 8004f4e:	46bd      	mov	sp, r7
 8004f50:	bd80      	pop	{r7, pc}
	...

08004f54 <HAL_RTC_WaitForSynchro>:
 8004f54:	b580      	push	{r7, lr}
 8004f56:	b084      	sub	sp, #16
 8004f58:	af00      	add	r7, sp, #0
 8004f5a:	6078      	str	r0, [r7, #4]
 8004f5c:	2300      	movs	r3, #0
 8004f5e:	60fb      	str	r3, [r7, #12]
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	681b      	ldr	r3, [r3, #0]
 8004f64:	4a0d      	ldr	r2, [pc, #52]	@ (8004f9c <HAL_RTC_WaitForSynchro+0x48>)
 8004f66:	60da      	str	r2, [r3, #12]
 8004f68:	f7fe fa62 	bl	8003430 <HAL_GetTick>
 8004f6c:	60f8      	str	r0, [r7, #12]
 8004f6e:	e009      	b.n	8004f84 <HAL_RTC_WaitForSynchro+0x30>
 8004f70:	f7fe fa5e 	bl	8003430 <HAL_GetTick>
 8004f74:	4602      	mov	r2, r0
 8004f76:	68fb      	ldr	r3, [r7, #12]
 8004f78:	1ad3      	subs	r3, r2, r3
 8004f7a:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8004f7e:	d901      	bls.n	8004f84 <HAL_RTC_WaitForSynchro+0x30>
 8004f80:	2303      	movs	r3, #3
 8004f82:	e007      	b.n	8004f94 <HAL_RTC_WaitForSynchro+0x40>
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	68db      	ldr	r3, [r3, #12]
 8004f8a:	f003 0320 	and.w	r3, r3, #32
 8004f8e:	2b00      	cmp	r3, #0
 8004f90:	d0ee      	beq.n	8004f70 <HAL_RTC_WaitForSynchro+0x1c>
 8004f92:	2300      	movs	r3, #0
 8004f94:	4618      	mov	r0, r3
 8004f96:	3710      	adds	r7, #16
 8004f98:	46bd      	mov	sp, r7
 8004f9a:	bd80      	pop	{r7, pc}
 8004f9c:	00017f5f 	.word	0x00017f5f

08004fa0 <RTC_EnterInitMode>:
 8004fa0:	b580      	push	{r7, lr}
 8004fa2:	b084      	sub	sp, #16
 8004fa4:	af00      	add	r7, sp, #0
 8004fa6:	6078      	str	r0, [r7, #4]
 8004fa8:	2300      	movs	r3, #0
 8004faa:	60bb      	str	r3, [r7, #8]
 8004fac:	2300      	movs	r3, #0
 8004fae:	73fb      	strb	r3, [r7, #15]
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	681b      	ldr	r3, [r3, #0]
 8004fb4:	68db      	ldr	r3, [r3, #12]
 8004fb6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004fba:	2b00      	cmp	r3, #0
 8004fbc:	d122      	bne.n	8005004 <RTC_EnterInitMode+0x64>
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	681b      	ldr	r3, [r3, #0]
 8004fc2:	68da      	ldr	r2, [r3, #12]
 8004fc4:	687b      	ldr	r3, [r7, #4]
 8004fc6:	681b      	ldr	r3, [r3, #0]
 8004fc8:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8004fcc:	60da      	str	r2, [r3, #12]
 8004fce:	f7fe fa2f 	bl	8003430 <HAL_GetTick>
 8004fd2:	60b8      	str	r0, [r7, #8]
 8004fd4:	e00c      	b.n	8004ff0 <RTC_EnterInitMode+0x50>
 8004fd6:	f7fe fa2b 	bl	8003430 <HAL_GetTick>
 8004fda:	4602      	mov	r2, r0
 8004fdc:	68bb      	ldr	r3, [r7, #8]
 8004fde:	1ad3      	subs	r3, r2, r3
 8004fe0:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8004fe4:	d904      	bls.n	8004ff0 <RTC_EnterInitMode+0x50>
 8004fe6:	687b      	ldr	r3, [r7, #4]
 8004fe8:	2204      	movs	r2, #4
 8004fea:	775a      	strb	r2, [r3, #29]
 8004fec:	2301      	movs	r3, #1
 8004fee:	73fb      	strb	r3, [r7, #15]
 8004ff0:	687b      	ldr	r3, [r7, #4]
 8004ff2:	681b      	ldr	r3, [r3, #0]
 8004ff4:	68db      	ldr	r3, [r3, #12]
 8004ff6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004ffa:	2b00      	cmp	r3, #0
 8004ffc:	d102      	bne.n	8005004 <RTC_EnterInitMode+0x64>
 8004ffe:	7bfb      	ldrb	r3, [r7, #15]
 8005000:	2b01      	cmp	r3, #1
 8005002:	d1e8      	bne.n	8004fd6 <RTC_EnterInitMode+0x36>
 8005004:	7bfb      	ldrb	r3, [r7, #15]
 8005006:	4618      	mov	r0, r3
 8005008:	3710      	adds	r7, #16
 800500a:	46bd      	mov	sp, r7
 800500c:	bd80      	pop	{r7, pc}

0800500e <RTC_ExitInitMode>:
 800500e:	b580      	push	{r7, lr}
 8005010:	b084      	sub	sp, #16
 8005012:	af00      	add	r7, sp, #0
 8005014:	6078      	str	r0, [r7, #4]
 8005016:	2300      	movs	r3, #0
 8005018:	73fb      	strb	r3, [r7, #15]
 800501a:	687b      	ldr	r3, [r7, #4]
 800501c:	681b      	ldr	r3, [r3, #0]
 800501e:	68da      	ldr	r2, [r3, #12]
 8005020:	687b      	ldr	r3, [r7, #4]
 8005022:	681b      	ldr	r3, [r3, #0]
 8005024:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8005028:	60da      	str	r2, [r3, #12]
 800502a:	687b      	ldr	r3, [r7, #4]
 800502c:	681b      	ldr	r3, [r3, #0]
 800502e:	689b      	ldr	r3, [r3, #8]
 8005030:	f003 0320 	and.w	r3, r3, #32
 8005034:	2b00      	cmp	r3, #0
 8005036:	d10a      	bne.n	800504e <RTC_ExitInitMode+0x40>
 8005038:	6878      	ldr	r0, [r7, #4]
 800503a:	f7ff ff8b 	bl	8004f54 <HAL_RTC_WaitForSynchro>
 800503e:	4603      	mov	r3, r0
 8005040:	2b00      	cmp	r3, #0
 8005042:	d004      	beq.n	800504e <RTC_ExitInitMode+0x40>
 8005044:	687b      	ldr	r3, [r7, #4]
 8005046:	2204      	movs	r2, #4
 8005048:	775a      	strb	r2, [r3, #29]
 800504a:	2301      	movs	r3, #1
 800504c:	73fb      	strb	r3, [r7, #15]
 800504e:	7bfb      	ldrb	r3, [r7, #15]
 8005050:	4618      	mov	r0, r3
 8005052:	3710      	adds	r7, #16
 8005054:	46bd      	mov	sp, r7
 8005056:	bd80      	pop	{r7, pc}

08005058 <HAL_SPI_Init>:
 8005058:	b580      	push	{r7, lr}
 800505a:	b082      	sub	sp, #8
 800505c:	af00      	add	r7, sp, #0
 800505e:	6078      	str	r0, [r7, #4]
 8005060:	687b      	ldr	r3, [r7, #4]
 8005062:	2b00      	cmp	r3, #0
 8005064:	d101      	bne.n	800506a <HAL_SPI_Init+0x12>
 8005066:	2301      	movs	r3, #1
 8005068:	e07b      	b.n	8005162 <HAL_SPI_Init+0x10a>
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800506e:	2b00      	cmp	r3, #0
 8005070:	d108      	bne.n	8005084 <HAL_SPI_Init+0x2c>
 8005072:	687b      	ldr	r3, [r7, #4]
 8005074:	685b      	ldr	r3, [r3, #4]
 8005076:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800507a:	d009      	beq.n	8005090 <HAL_SPI_Init+0x38>
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	2200      	movs	r2, #0
 8005080:	61da      	str	r2, [r3, #28]
 8005082:	e005      	b.n	8005090 <HAL_SPI_Init+0x38>
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	2200      	movs	r2, #0
 8005088:	611a      	str	r2, [r3, #16]
 800508a:	687b      	ldr	r3, [r7, #4]
 800508c:	2200      	movs	r2, #0
 800508e:	615a      	str	r2, [r3, #20]
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	2200      	movs	r2, #0
 8005094:	629a      	str	r2, [r3, #40]	@ 0x28
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800509c:	b2db      	uxtb	r3, r3
 800509e:	2b00      	cmp	r3, #0
 80050a0:	d106      	bne.n	80050b0 <HAL_SPI_Init+0x58>
 80050a2:	687b      	ldr	r3, [r7, #4]
 80050a4:	2200      	movs	r2, #0
 80050a6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80050aa:	6878      	ldr	r0, [r7, #4]
 80050ac:	f7fd ff5c 	bl	8002f68 <HAL_SPI_MspInit>
 80050b0:	687b      	ldr	r3, [r7, #4]
 80050b2:	2202      	movs	r2, #2
 80050b4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80050b8:	687b      	ldr	r3, [r7, #4]
 80050ba:	681b      	ldr	r3, [r3, #0]
 80050bc:	681a      	ldr	r2, [r3, #0]
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	681b      	ldr	r3, [r3, #0]
 80050c2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80050c6:	601a      	str	r2, [r3, #0]
 80050c8:	687b      	ldr	r3, [r7, #4]
 80050ca:	685b      	ldr	r3, [r3, #4]
 80050cc:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 80050d0:	687b      	ldr	r3, [r7, #4]
 80050d2:	689b      	ldr	r3, [r3, #8]
 80050d4:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 80050d8:	431a      	orrs	r2, r3
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	68db      	ldr	r3, [r3, #12]
 80050de:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80050e2:	431a      	orrs	r2, r3
 80050e4:	687b      	ldr	r3, [r7, #4]
 80050e6:	691b      	ldr	r3, [r3, #16]
 80050e8:	f003 0302 	and.w	r3, r3, #2
 80050ec:	431a      	orrs	r2, r3
 80050ee:	687b      	ldr	r3, [r7, #4]
 80050f0:	695b      	ldr	r3, [r3, #20]
 80050f2:	f003 0301 	and.w	r3, r3, #1
 80050f6:	431a      	orrs	r2, r3
 80050f8:	687b      	ldr	r3, [r7, #4]
 80050fa:	699b      	ldr	r3, [r3, #24]
 80050fc:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005100:	431a      	orrs	r2, r3
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	69db      	ldr	r3, [r3, #28]
 8005106:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800510a:	431a      	orrs	r2, r3
 800510c:	687b      	ldr	r3, [r7, #4]
 800510e:	6a1b      	ldr	r3, [r3, #32]
 8005110:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005114:	ea42 0103 	orr.w	r1, r2, r3
 8005118:	687b      	ldr	r3, [r7, #4]
 800511a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800511c:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	681b      	ldr	r3, [r3, #0]
 8005124:	430a      	orrs	r2, r1
 8005126:	601a      	str	r2, [r3, #0]
 8005128:	687b      	ldr	r3, [r7, #4]
 800512a:	699b      	ldr	r3, [r3, #24]
 800512c:	0c1b      	lsrs	r3, r3, #16
 800512e:	f003 0104 	and.w	r1, r3, #4
 8005132:	687b      	ldr	r3, [r7, #4]
 8005134:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005136:	f003 0210 	and.w	r2, r3, #16
 800513a:	687b      	ldr	r3, [r7, #4]
 800513c:	681b      	ldr	r3, [r3, #0]
 800513e:	430a      	orrs	r2, r1
 8005140:	605a      	str	r2, [r3, #4]
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	681b      	ldr	r3, [r3, #0]
 8005146:	69da      	ldr	r2, [r3, #28]
 8005148:	687b      	ldr	r3, [r7, #4]
 800514a:	681b      	ldr	r3, [r3, #0]
 800514c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005150:	61da      	str	r2, [r3, #28]
 8005152:	687b      	ldr	r3, [r7, #4]
 8005154:	2200      	movs	r2, #0
 8005156:	655a      	str	r2, [r3, #84]	@ 0x54
 8005158:	687b      	ldr	r3, [r7, #4]
 800515a:	2201      	movs	r2, #1
 800515c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005160:	2300      	movs	r3, #0
 8005162:	4618      	mov	r0, r3
 8005164:	3708      	adds	r7, #8
 8005166:	46bd      	mov	sp, r7
 8005168:	bd80      	pop	{r7, pc}

0800516a <HAL_SPI_Transmit>:
 800516a:	b580      	push	{r7, lr}
 800516c:	b088      	sub	sp, #32
 800516e:	af00      	add	r7, sp, #0
 8005170:	60f8      	str	r0, [r7, #12]
 8005172:	60b9      	str	r1, [r7, #8]
 8005174:	603b      	str	r3, [r7, #0]
 8005176:	4613      	mov	r3, r2
 8005178:	80fb      	strh	r3, [r7, #6]
 800517a:	f7fe f959 	bl	8003430 <HAL_GetTick>
 800517e:	61f8      	str	r0, [r7, #28]
 8005180:	88fb      	ldrh	r3, [r7, #6]
 8005182:	837b      	strh	r3, [r7, #26]
 8005184:	68fb      	ldr	r3, [r7, #12]
 8005186:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800518a:	b2db      	uxtb	r3, r3
 800518c:	2b01      	cmp	r3, #1
 800518e:	d001      	beq.n	8005194 <HAL_SPI_Transmit+0x2a>
 8005190:	2302      	movs	r3, #2
 8005192:	e12a      	b.n	80053ea <HAL_SPI_Transmit+0x280>
 8005194:	68bb      	ldr	r3, [r7, #8]
 8005196:	2b00      	cmp	r3, #0
 8005198:	d002      	beq.n	80051a0 <HAL_SPI_Transmit+0x36>
 800519a:	88fb      	ldrh	r3, [r7, #6]
 800519c:	2b00      	cmp	r3, #0
 800519e:	d101      	bne.n	80051a4 <HAL_SPI_Transmit+0x3a>
 80051a0:	2301      	movs	r3, #1
 80051a2:	e122      	b.n	80053ea <HAL_SPI_Transmit+0x280>
 80051a4:	68fb      	ldr	r3, [r7, #12]
 80051a6:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80051aa:	2b01      	cmp	r3, #1
 80051ac:	d101      	bne.n	80051b2 <HAL_SPI_Transmit+0x48>
 80051ae:	2302      	movs	r3, #2
 80051b0:	e11b      	b.n	80053ea <HAL_SPI_Transmit+0x280>
 80051b2:	68fb      	ldr	r3, [r7, #12]
 80051b4:	2201      	movs	r2, #1
 80051b6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80051ba:	68fb      	ldr	r3, [r7, #12]
 80051bc:	2203      	movs	r2, #3
 80051be:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80051c2:	68fb      	ldr	r3, [r7, #12]
 80051c4:	2200      	movs	r2, #0
 80051c6:	655a      	str	r2, [r3, #84]	@ 0x54
 80051c8:	68fb      	ldr	r3, [r7, #12]
 80051ca:	68ba      	ldr	r2, [r7, #8]
 80051cc:	631a      	str	r2, [r3, #48]	@ 0x30
 80051ce:	68fb      	ldr	r3, [r7, #12]
 80051d0:	88fa      	ldrh	r2, [r7, #6]
 80051d2:	869a      	strh	r2, [r3, #52]	@ 0x34
 80051d4:	68fb      	ldr	r3, [r7, #12]
 80051d6:	88fa      	ldrh	r2, [r7, #6]
 80051d8:	86da      	strh	r2, [r3, #54]	@ 0x36
 80051da:	68fb      	ldr	r3, [r7, #12]
 80051dc:	2200      	movs	r2, #0
 80051de:	639a      	str	r2, [r3, #56]	@ 0x38
 80051e0:	68fb      	ldr	r3, [r7, #12]
 80051e2:	2200      	movs	r2, #0
 80051e4:	879a      	strh	r2, [r3, #60]	@ 0x3c
 80051e6:	68fb      	ldr	r3, [r7, #12]
 80051e8:	2200      	movs	r2, #0
 80051ea:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80051ec:	68fb      	ldr	r3, [r7, #12]
 80051ee:	2200      	movs	r2, #0
 80051f0:	645a      	str	r2, [r3, #68]	@ 0x44
 80051f2:	68fb      	ldr	r3, [r7, #12]
 80051f4:	2200      	movs	r2, #0
 80051f6:	641a      	str	r2, [r3, #64]	@ 0x40
 80051f8:	68fb      	ldr	r3, [r7, #12]
 80051fa:	689b      	ldr	r3, [r3, #8]
 80051fc:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005200:	d10f      	bne.n	8005222 <HAL_SPI_Transmit+0xb8>
 8005202:	68fb      	ldr	r3, [r7, #12]
 8005204:	681b      	ldr	r3, [r3, #0]
 8005206:	681a      	ldr	r2, [r3, #0]
 8005208:	68fb      	ldr	r3, [r7, #12]
 800520a:	681b      	ldr	r3, [r3, #0]
 800520c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005210:	601a      	str	r2, [r3, #0]
 8005212:	68fb      	ldr	r3, [r7, #12]
 8005214:	681b      	ldr	r3, [r3, #0]
 8005216:	681a      	ldr	r2, [r3, #0]
 8005218:	68fb      	ldr	r3, [r7, #12]
 800521a:	681b      	ldr	r3, [r3, #0]
 800521c:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005220:	601a      	str	r2, [r3, #0]
 8005222:	68fb      	ldr	r3, [r7, #12]
 8005224:	681b      	ldr	r3, [r3, #0]
 8005226:	681b      	ldr	r3, [r3, #0]
 8005228:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800522c:	2b40      	cmp	r3, #64	@ 0x40
 800522e:	d007      	beq.n	8005240 <HAL_SPI_Transmit+0xd6>
 8005230:	68fb      	ldr	r3, [r7, #12]
 8005232:	681b      	ldr	r3, [r3, #0]
 8005234:	681a      	ldr	r2, [r3, #0]
 8005236:	68fb      	ldr	r3, [r7, #12]
 8005238:	681b      	ldr	r3, [r3, #0]
 800523a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800523e:	601a      	str	r2, [r3, #0]
 8005240:	68fb      	ldr	r3, [r7, #12]
 8005242:	68db      	ldr	r3, [r3, #12]
 8005244:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8005248:	d152      	bne.n	80052f0 <HAL_SPI_Transmit+0x186>
 800524a:	68fb      	ldr	r3, [r7, #12]
 800524c:	685b      	ldr	r3, [r3, #4]
 800524e:	2b00      	cmp	r3, #0
 8005250:	d002      	beq.n	8005258 <HAL_SPI_Transmit+0xee>
 8005252:	8b7b      	ldrh	r3, [r7, #26]
 8005254:	2b01      	cmp	r3, #1
 8005256:	d145      	bne.n	80052e4 <HAL_SPI_Transmit+0x17a>
 8005258:	68fb      	ldr	r3, [r7, #12]
 800525a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800525c:	881a      	ldrh	r2, [r3, #0]
 800525e:	68fb      	ldr	r3, [r7, #12]
 8005260:	681b      	ldr	r3, [r3, #0]
 8005262:	60da      	str	r2, [r3, #12]
 8005264:	68fb      	ldr	r3, [r7, #12]
 8005266:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005268:	1c9a      	adds	r2, r3, #2
 800526a:	68fb      	ldr	r3, [r7, #12]
 800526c:	631a      	str	r2, [r3, #48]	@ 0x30
 800526e:	68fb      	ldr	r3, [r7, #12]
 8005270:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005272:	b29b      	uxth	r3, r3
 8005274:	3b01      	subs	r3, #1
 8005276:	b29a      	uxth	r2, r3
 8005278:	68fb      	ldr	r3, [r7, #12]
 800527a:	86da      	strh	r2, [r3, #54]	@ 0x36
 800527c:	e032      	b.n	80052e4 <HAL_SPI_Transmit+0x17a>
 800527e:	68fb      	ldr	r3, [r7, #12]
 8005280:	681b      	ldr	r3, [r3, #0]
 8005282:	689b      	ldr	r3, [r3, #8]
 8005284:	f003 0302 	and.w	r3, r3, #2
 8005288:	2b02      	cmp	r3, #2
 800528a:	d112      	bne.n	80052b2 <HAL_SPI_Transmit+0x148>
 800528c:	68fb      	ldr	r3, [r7, #12]
 800528e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005290:	881a      	ldrh	r2, [r3, #0]
 8005292:	68fb      	ldr	r3, [r7, #12]
 8005294:	681b      	ldr	r3, [r3, #0]
 8005296:	60da      	str	r2, [r3, #12]
 8005298:	68fb      	ldr	r3, [r7, #12]
 800529a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800529c:	1c9a      	adds	r2, r3, #2
 800529e:	68fb      	ldr	r3, [r7, #12]
 80052a0:	631a      	str	r2, [r3, #48]	@ 0x30
 80052a2:	68fb      	ldr	r3, [r7, #12]
 80052a4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80052a6:	b29b      	uxth	r3, r3
 80052a8:	3b01      	subs	r3, #1
 80052aa:	b29a      	uxth	r2, r3
 80052ac:	68fb      	ldr	r3, [r7, #12]
 80052ae:	86da      	strh	r2, [r3, #54]	@ 0x36
 80052b0:	e018      	b.n	80052e4 <HAL_SPI_Transmit+0x17a>
 80052b2:	f7fe f8bd 	bl	8003430 <HAL_GetTick>
 80052b6:	4602      	mov	r2, r0
 80052b8:	69fb      	ldr	r3, [r7, #28]
 80052ba:	1ad3      	subs	r3, r2, r3
 80052bc:	683a      	ldr	r2, [r7, #0]
 80052be:	429a      	cmp	r2, r3
 80052c0:	d803      	bhi.n	80052ca <HAL_SPI_Transmit+0x160>
 80052c2:	683b      	ldr	r3, [r7, #0]
 80052c4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80052c8:	d102      	bne.n	80052d0 <HAL_SPI_Transmit+0x166>
 80052ca:	683b      	ldr	r3, [r7, #0]
 80052cc:	2b00      	cmp	r3, #0
 80052ce:	d109      	bne.n	80052e4 <HAL_SPI_Transmit+0x17a>
 80052d0:	68fb      	ldr	r3, [r7, #12]
 80052d2:	2201      	movs	r2, #1
 80052d4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80052d8:	68fb      	ldr	r3, [r7, #12]
 80052da:	2200      	movs	r2, #0
 80052dc:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80052e0:	2303      	movs	r3, #3
 80052e2:	e082      	b.n	80053ea <HAL_SPI_Transmit+0x280>
 80052e4:	68fb      	ldr	r3, [r7, #12]
 80052e6:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80052e8:	b29b      	uxth	r3, r3
 80052ea:	2b00      	cmp	r3, #0
 80052ec:	d1c7      	bne.n	800527e <HAL_SPI_Transmit+0x114>
 80052ee:	e053      	b.n	8005398 <HAL_SPI_Transmit+0x22e>
 80052f0:	68fb      	ldr	r3, [r7, #12]
 80052f2:	685b      	ldr	r3, [r3, #4]
 80052f4:	2b00      	cmp	r3, #0
 80052f6:	d002      	beq.n	80052fe <HAL_SPI_Transmit+0x194>
 80052f8:	8b7b      	ldrh	r3, [r7, #26]
 80052fa:	2b01      	cmp	r3, #1
 80052fc:	d147      	bne.n	800538e <HAL_SPI_Transmit+0x224>
 80052fe:	68fb      	ldr	r3, [r7, #12]
 8005300:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005302:	68fb      	ldr	r3, [r7, #12]
 8005304:	681b      	ldr	r3, [r3, #0]
 8005306:	330c      	adds	r3, #12
 8005308:	7812      	ldrb	r2, [r2, #0]
 800530a:	701a      	strb	r2, [r3, #0]
 800530c:	68fb      	ldr	r3, [r7, #12]
 800530e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005310:	1c5a      	adds	r2, r3, #1
 8005312:	68fb      	ldr	r3, [r7, #12]
 8005314:	631a      	str	r2, [r3, #48]	@ 0x30
 8005316:	68fb      	ldr	r3, [r7, #12]
 8005318:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800531a:	b29b      	uxth	r3, r3
 800531c:	3b01      	subs	r3, #1
 800531e:	b29a      	uxth	r2, r3
 8005320:	68fb      	ldr	r3, [r7, #12]
 8005322:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005324:	e033      	b.n	800538e <HAL_SPI_Transmit+0x224>
 8005326:	68fb      	ldr	r3, [r7, #12]
 8005328:	681b      	ldr	r3, [r3, #0]
 800532a:	689b      	ldr	r3, [r3, #8]
 800532c:	f003 0302 	and.w	r3, r3, #2
 8005330:	2b02      	cmp	r3, #2
 8005332:	d113      	bne.n	800535c <HAL_SPI_Transmit+0x1f2>
 8005334:	68fb      	ldr	r3, [r7, #12]
 8005336:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005338:	68fb      	ldr	r3, [r7, #12]
 800533a:	681b      	ldr	r3, [r3, #0]
 800533c:	330c      	adds	r3, #12
 800533e:	7812      	ldrb	r2, [r2, #0]
 8005340:	701a      	strb	r2, [r3, #0]
 8005342:	68fb      	ldr	r3, [r7, #12]
 8005344:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005346:	1c5a      	adds	r2, r3, #1
 8005348:	68fb      	ldr	r3, [r7, #12]
 800534a:	631a      	str	r2, [r3, #48]	@ 0x30
 800534c:	68fb      	ldr	r3, [r7, #12]
 800534e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005350:	b29b      	uxth	r3, r3
 8005352:	3b01      	subs	r3, #1
 8005354:	b29a      	uxth	r2, r3
 8005356:	68fb      	ldr	r3, [r7, #12]
 8005358:	86da      	strh	r2, [r3, #54]	@ 0x36
 800535a:	e018      	b.n	800538e <HAL_SPI_Transmit+0x224>
 800535c:	f7fe f868 	bl	8003430 <HAL_GetTick>
 8005360:	4602      	mov	r2, r0
 8005362:	69fb      	ldr	r3, [r7, #28]
 8005364:	1ad3      	subs	r3, r2, r3
 8005366:	683a      	ldr	r2, [r7, #0]
 8005368:	429a      	cmp	r2, r3
 800536a:	d803      	bhi.n	8005374 <HAL_SPI_Transmit+0x20a>
 800536c:	683b      	ldr	r3, [r7, #0]
 800536e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005372:	d102      	bne.n	800537a <HAL_SPI_Transmit+0x210>
 8005374:	683b      	ldr	r3, [r7, #0]
 8005376:	2b00      	cmp	r3, #0
 8005378:	d109      	bne.n	800538e <HAL_SPI_Transmit+0x224>
 800537a:	68fb      	ldr	r3, [r7, #12]
 800537c:	2201      	movs	r2, #1
 800537e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005382:	68fb      	ldr	r3, [r7, #12]
 8005384:	2200      	movs	r2, #0
 8005386:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800538a:	2303      	movs	r3, #3
 800538c:	e02d      	b.n	80053ea <HAL_SPI_Transmit+0x280>
 800538e:	68fb      	ldr	r3, [r7, #12]
 8005390:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005392:	b29b      	uxth	r3, r3
 8005394:	2b00      	cmp	r3, #0
 8005396:	d1c6      	bne.n	8005326 <HAL_SPI_Transmit+0x1bc>
 8005398:	69fa      	ldr	r2, [r7, #28]
 800539a:	6839      	ldr	r1, [r7, #0]
 800539c:	68f8      	ldr	r0, [r7, #12]
 800539e:	f000 f9f9 	bl	8005794 <SPI_EndRxTxTransaction>
 80053a2:	4603      	mov	r3, r0
 80053a4:	2b00      	cmp	r3, #0
 80053a6:	d002      	beq.n	80053ae <HAL_SPI_Transmit+0x244>
 80053a8:	68fb      	ldr	r3, [r7, #12]
 80053aa:	2220      	movs	r2, #32
 80053ac:	655a      	str	r2, [r3, #84]	@ 0x54
 80053ae:	68fb      	ldr	r3, [r7, #12]
 80053b0:	689b      	ldr	r3, [r3, #8]
 80053b2:	2b00      	cmp	r3, #0
 80053b4:	d10a      	bne.n	80053cc <HAL_SPI_Transmit+0x262>
 80053b6:	2300      	movs	r3, #0
 80053b8:	617b      	str	r3, [r7, #20]
 80053ba:	68fb      	ldr	r3, [r7, #12]
 80053bc:	681b      	ldr	r3, [r3, #0]
 80053be:	68db      	ldr	r3, [r3, #12]
 80053c0:	617b      	str	r3, [r7, #20]
 80053c2:	68fb      	ldr	r3, [r7, #12]
 80053c4:	681b      	ldr	r3, [r3, #0]
 80053c6:	689b      	ldr	r3, [r3, #8]
 80053c8:	617b      	str	r3, [r7, #20]
 80053ca:	697b      	ldr	r3, [r7, #20]
 80053cc:	68fb      	ldr	r3, [r7, #12]
 80053ce:	2201      	movs	r2, #1
 80053d0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80053d4:	68fb      	ldr	r3, [r7, #12]
 80053d6:	2200      	movs	r2, #0
 80053d8:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80053dc:	68fb      	ldr	r3, [r7, #12]
 80053de:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80053e0:	2b00      	cmp	r3, #0
 80053e2:	d001      	beq.n	80053e8 <HAL_SPI_Transmit+0x27e>
 80053e4:	2301      	movs	r3, #1
 80053e6:	e000      	b.n	80053ea <HAL_SPI_Transmit+0x280>
 80053e8:	2300      	movs	r3, #0
 80053ea:	4618      	mov	r0, r3
 80053ec:	3720      	adds	r7, #32
 80053ee:	46bd      	mov	sp, r7
 80053f0:	bd80      	pop	{r7, pc}
	...

080053f4 <HAL_SPI_Transmit_DMA>:
 80053f4:	b580      	push	{r7, lr}
 80053f6:	b084      	sub	sp, #16
 80053f8:	af00      	add	r7, sp, #0
 80053fa:	60f8      	str	r0, [r7, #12]
 80053fc:	60b9      	str	r1, [r7, #8]
 80053fe:	4613      	mov	r3, r2
 8005400:	80fb      	strh	r3, [r7, #6]
 8005402:	68fb      	ldr	r3, [r7, #12]
 8005404:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005408:	b2db      	uxtb	r3, r3
 800540a:	2b01      	cmp	r3, #1
 800540c:	d001      	beq.n	8005412 <HAL_SPI_Transmit_DMA+0x1e>
 800540e:	2302      	movs	r3, #2
 8005410:	e097      	b.n	8005542 <HAL_SPI_Transmit_DMA+0x14e>
 8005412:	68bb      	ldr	r3, [r7, #8]
 8005414:	2b00      	cmp	r3, #0
 8005416:	d002      	beq.n	800541e <HAL_SPI_Transmit_DMA+0x2a>
 8005418:	88fb      	ldrh	r3, [r7, #6]
 800541a:	2b00      	cmp	r3, #0
 800541c:	d101      	bne.n	8005422 <HAL_SPI_Transmit_DMA+0x2e>
 800541e:	2301      	movs	r3, #1
 8005420:	e08f      	b.n	8005542 <HAL_SPI_Transmit_DMA+0x14e>
 8005422:	68fb      	ldr	r3, [r7, #12]
 8005424:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8005428:	2b01      	cmp	r3, #1
 800542a:	d101      	bne.n	8005430 <HAL_SPI_Transmit_DMA+0x3c>
 800542c:	2302      	movs	r3, #2
 800542e:	e088      	b.n	8005542 <HAL_SPI_Transmit_DMA+0x14e>
 8005430:	68fb      	ldr	r3, [r7, #12]
 8005432:	2201      	movs	r2, #1
 8005434:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005438:	68fb      	ldr	r3, [r7, #12]
 800543a:	2203      	movs	r2, #3
 800543c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005440:	68fb      	ldr	r3, [r7, #12]
 8005442:	2200      	movs	r2, #0
 8005444:	655a      	str	r2, [r3, #84]	@ 0x54
 8005446:	68fb      	ldr	r3, [r7, #12]
 8005448:	68ba      	ldr	r2, [r7, #8]
 800544a:	631a      	str	r2, [r3, #48]	@ 0x30
 800544c:	68fb      	ldr	r3, [r7, #12]
 800544e:	88fa      	ldrh	r2, [r7, #6]
 8005450:	869a      	strh	r2, [r3, #52]	@ 0x34
 8005452:	68fb      	ldr	r3, [r7, #12]
 8005454:	88fa      	ldrh	r2, [r7, #6]
 8005456:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005458:	68fb      	ldr	r3, [r7, #12]
 800545a:	2200      	movs	r2, #0
 800545c:	639a      	str	r2, [r3, #56]	@ 0x38
 800545e:	68fb      	ldr	r3, [r7, #12]
 8005460:	2200      	movs	r2, #0
 8005462:	645a      	str	r2, [r3, #68]	@ 0x44
 8005464:	68fb      	ldr	r3, [r7, #12]
 8005466:	2200      	movs	r2, #0
 8005468:	641a      	str	r2, [r3, #64]	@ 0x40
 800546a:	68fb      	ldr	r3, [r7, #12]
 800546c:	2200      	movs	r2, #0
 800546e:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8005470:	68fb      	ldr	r3, [r7, #12]
 8005472:	2200      	movs	r2, #0
 8005474:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8005476:	68fb      	ldr	r3, [r7, #12]
 8005478:	689b      	ldr	r3, [r3, #8]
 800547a:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800547e:	d10f      	bne.n	80054a0 <HAL_SPI_Transmit_DMA+0xac>
 8005480:	68fb      	ldr	r3, [r7, #12]
 8005482:	681b      	ldr	r3, [r3, #0]
 8005484:	681a      	ldr	r2, [r3, #0]
 8005486:	68fb      	ldr	r3, [r7, #12]
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800548e:	601a      	str	r2, [r3, #0]
 8005490:	68fb      	ldr	r3, [r7, #12]
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	681a      	ldr	r2, [r3, #0]
 8005496:	68fb      	ldr	r3, [r7, #12]
 8005498:	681b      	ldr	r3, [r3, #0]
 800549a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800549e:	601a      	str	r2, [r3, #0]
 80054a0:	68fb      	ldr	r3, [r7, #12]
 80054a2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80054a4:	4a29      	ldr	r2, [pc, #164]	@ (800554c <HAL_SPI_Transmit_DMA+0x158>)
 80054a6:	641a      	str	r2, [r3, #64]	@ 0x40
 80054a8:	68fb      	ldr	r3, [r7, #12]
 80054aa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80054ac:	4a28      	ldr	r2, [pc, #160]	@ (8005550 <HAL_SPI_Transmit_DMA+0x15c>)
 80054ae:	63da      	str	r2, [r3, #60]	@ 0x3c
 80054b0:	68fb      	ldr	r3, [r7, #12]
 80054b2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80054b4:	4a27      	ldr	r2, [pc, #156]	@ (8005554 <HAL_SPI_Transmit_DMA+0x160>)
 80054b6:	64da      	str	r2, [r3, #76]	@ 0x4c
 80054b8:	68fb      	ldr	r3, [r7, #12]
 80054ba:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80054bc:	2200      	movs	r2, #0
 80054be:	651a      	str	r2, [r3, #80]	@ 0x50
 80054c0:	68fb      	ldr	r3, [r7, #12]
 80054c2:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 80054c4:	68fb      	ldr	r3, [r7, #12]
 80054c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80054c8:	4619      	mov	r1, r3
 80054ca:	68fb      	ldr	r3, [r7, #12]
 80054cc:	681b      	ldr	r3, [r3, #0]
 80054ce:	330c      	adds	r3, #12
 80054d0:	461a      	mov	r2, r3
 80054d2:	68fb      	ldr	r3, [r7, #12]
 80054d4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80054d6:	b29b      	uxth	r3, r3
 80054d8:	f7fe f99a 	bl	8003810 <HAL_DMA_Start_IT>
 80054dc:	4603      	mov	r3, r0
 80054de:	2b00      	cmp	r3, #0
 80054e0:	d00b      	beq.n	80054fa <HAL_SPI_Transmit_DMA+0x106>
 80054e2:	68fb      	ldr	r3, [r7, #12]
 80054e4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80054e6:	f043 0210 	orr.w	r2, r3, #16
 80054ea:	68fb      	ldr	r3, [r7, #12]
 80054ec:	655a      	str	r2, [r3, #84]	@ 0x54
 80054ee:	68fb      	ldr	r3, [r7, #12]
 80054f0:	2200      	movs	r2, #0
 80054f2:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80054f6:	2301      	movs	r3, #1
 80054f8:	e023      	b.n	8005542 <HAL_SPI_Transmit_DMA+0x14e>
 80054fa:	68fb      	ldr	r3, [r7, #12]
 80054fc:	681b      	ldr	r3, [r3, #0]
 80054fe:	681b      	ldr	r3, [r3, #0]
 8005500:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005504:	2b40      	cmp	r3, #64	@ 0x40
 8005506:	d007      	beq.n	8005518 <HAL_SPI_Transmit_DMA+0x124>
 8005508:	68fb      	ldr	r3, [r7, #12]
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	681a      	ldr	r2, [r3, #0]
 800550e:	68fb      	ldr	r3, [r7, #12]
 8005510:	681b      	ldr	r3, [r3, #0]
 8005512:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005516:	601a      	str	r2, [r3, #0]
 8005518:	68fb      	ldr	r3, [r7, #12]
 800551a:	2200      	movs	r2, #0
 800551c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005520:	68fb      	ldr	r3, [r7, #12]
 8005522:	681b      	ldr	r3, [r3, #0]
 8005524:	685a      	ldr	r2, [r3, #4]
 8005526:	68fb      	ldr	r3, [r7, #12]
 8005528:	681b      	ldr	r3, [r3, #0]
 800552a:	f042 0220 	orr.w	r2, r2, #32
 800552e:	605a      	str	r2, [r3, #4]
 8005530:	68fb      	ldr	r3, [r7, #12]
 8005532:	681b      	ldr	r3, [r3, #0]
 8005534:	685a      	ldr	r2, [r3, #4]
 8005536:	68fb      	ldr	r3, [r7, #12]
 8005538:	681b      	ldr	r3, [r3, #0]
 800553a:	f042 0202 	orr.w	r2, r2, #2
 800553e:	605a      	str	r2, [r3, #4]
 8005540:	2300      	movs	r3, #0
 8005542:	4618      	mov	r0, r3
 8005544:	3710      	adds	r7, #16
 8005546:	46bd      	mov	sp, r7
 8005548:	bd80      	pop	{r7, pc}
 800554a:	bf00      	nop
 800554c:	08005629 	.word	0x08005629
 8005550:	08005581 	.word	0x08005581
 8005554:	08005645 	.word	0x08005645

08005558 <HAL_SPI_TxHalfCpltCallback>:
 8005558:	b480      	push	{r7}
 800555a:	b083      	sub	sp, #12
 800555c:	af00      	add	r7, sp, #0
 800555e:	6078      	str	r0, [r7, #4]
 8005560:	bf00      	nop
 8005562:	370c      	adds	r7, #12
 8005564:	46bd      	mov	sp, r7
 8005566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800556a:	4770      	bx	lr

0800556c <HAL_SPI_ErrorCallback>:
 800556c:	b480      	push	{r7}
 800556e:	b083      	sub	sp, #12
 8005570:	af00      	add	r7, sp, #0
 8005572:	6078      	str	r0, [r7, #4]
 8005574:	bf00      	nop
 8005576:	370c      	adds	r7, #12
 8005578:	46bd      	mov	sp, r7
 800557a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800557e:	4770      	bx	lr

08005580 <SPI_DMATransmitCplt>:
 8005580:	b580      	push	{r7, lr}
 8005582:	b086      	sub	sp, #24
 8005584:	af00      	add	r7, sp, #0
 8005586:	6078      	str	r0, [r7, #4]
 8005588:	687b      	ldr	r3, [r7, #4]
 800558a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800558c:	617b      	str	r3, [r7, #20]
 800558e:	f7fd ff4f 	bl	8003430 <HAL_GetTick>
 8005592:	6138      	str	r0, [r7, #16]
 8005594:	687b      	ldr	r3, [r7, #4]
 8005596:	681b      	ldr	r3, [r3, #0]
 8005598:	681b      	ldr	r3, [r3, #0]
 800559a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800559e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80055a2:	d03b      	beq.n	800561c <SPI_DMATransmitCplt+0x9c>
 80055a4:	697b      	ldr	r3, [r7, #20]
 80055a6:	681b      	ldr	r3, [r3, #0]
 80055a8:	685a      	ldr	r2, [r3, #4]
 80055aa:	697b      	ldr	r3, [r7, #20]
 80055ac:	681b      	ldr	r3, [r3, #0]
 80055ae:	f022 0220 	bic.w	r2, r2, #32
 80055b2:	605a      	str	r2, [r3, #4]
 80055b4:	697b      	ldr	r3, [r7, #20]
 80055b6:	681b      	ldr	r3, [r3, #0]
 80055b8:	685a      	ldr	r2, [r3, #4]
 80055ba:	697b      	ldr	r3, [r7, #20]
 80055bc:	681b      	ldr	r3, [r3, #0]
 80055be:	f022 0202 	bic.w	r2, r2, #2
 80055c2:	605a      	str	r2, [r3, #4]
 80055c4:	693a      	ldr	r2, [r7, #16]
 80055c6:	2164      	movs	r1, #100	@ 0x64
 80055c8:	6978      	ldr	r0, [r7, #20]
 80055ca:	f000 f8e3 	bl	8005794 <SPI_EndRxTxTransaction>
 80055ce:	4603      	mov	r3, r0
 80055d0:	2b00      	cmp	r3, #0
 80055d2:	d005      	beq.n	80055e0 <SPI_DMATransmitCplt+0x60>
 80055d4:	697b      	ldr	r3, [r7, #20]
 80055d6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80055d8:	f043 0220 	orr.w	r2, r3, #32
 80055dc:	697b      	ldr	r3, [r7, #20]
 80055de:	655a      	str	r2, [r3, #84]	@ 0x54
 80055e0:	697b      	ldr	r3, [r7, #20]
 80055e2:	689b      	ldr	r3, [r3, #8]
 80055e4:	2b00      	cmp	r3, #0
 80055e6:	d10a      	bne.n	80055fe <SPI_DMATransmitCplt+0x7e>
 80055e8:	2300      	movs	r3, #0
 80055ea:	60fb      	str	r3, [r7, #12]
 80055ec:	697b      	ldr	r3, [r7, #20]
 80055ee:	681b      	ldr	r3, [r3, #0]
 80055f0:	68db      	ldr	r3, [r3, #12]
 80055f2:	60fb      	str	r3, [r7, #12]
 80055f4:	697b      	ldr	r3, [r7, #20]
 80055f6:	681b      	ldr	r3, [r3, #0]
 80055f8:	689b      	ldr	r3, [r3, #8]
 80055fa:	60fb      	str	r3, [r7, #12]
 80055fc:	68fb      	ldr	r3, [r7, #12]
 80055fe:	697b      	ldr	r3, [r7, #20]
 8005600:	2200      	movs	r2, #0
 8005602:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005604:	697b      	ldr	r3, [r7, #20]
 8005606:	2201      	movs	r2, #1
 8005608:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800560c:	697b      	ldr	r3, [r7, #20]
 800560e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005610:	2b00      	cmp	r3, #0
 8005612:	d003      	beq.n	800561c <SPI_DMATransmitCplt+0x9c>
 8005614:	6978      	ldr	r0, [r7, #20]
 8005616:	f7ff ffa9 	bl	800556c <HAL_SPI_ErrorCallback>
 800561a:	e002      	b.n	8005622 <SPI_DMATransmitCplt+0xa2>
 800561c:	6978      	ldr	r0, [r7, #20]
 800561e:	f7fb f9cd 	bl	80009bc <HAL_SPI_TxCpltCallback>
 8005622:	3718      	adds	r7, #24
 8005624:	46bd      	mov	sp, r7
 8005626:	bd80      	pop	{r7, pc}

08005628 <SPI_DMAHalfTransmitCplt>:
 8005628:	b580      	push	{r7, lr}
 800562a:	b084      	sub	sp, #16
 800562c:	af00      	add	r7, sp, #0
 800562e:	6078      	str	r0, [r7, #4]
 8005630:	687b      	ldr	r3, [r7, #4]
 8005632:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005634:	60fb      	str	r3, [r7, #12]
 8005636:	68f8      	ldr	r0, [r7, #12]
 8005638:	f7ff ff8e 	bl	8005558 <HAL_SPI_TxHalfCpltCallback>
 800563c:	bf00      	nop
 800563e:	3710      	adds	r7, #16
 8005640:	46bd      	mov	sp, r7
 8005642:	bd80      	pop	{r7, pc}

08005644 <SPI_DMAError>:
 8005644:	b580      	push	{r7, lr}
 8005646:	b084      	sub	sp, #16
 8005648:	af00      	add	r7, sp, #0
 800564a:	6078      	str	r0, [r7, #4]
 800564c:	687b      	ldr	r3, [r7, #4]
 800564e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005650:	60fb      	str	r3, [r7, #12]
 8005652:	68fb      	ldr	r3, [r7, #12]
 8005654:	681b      	ldr	r3, [r3, #0]
 8005656:	685a      	ldr	r2, [r3, #4]
 8005658:	68fb      	ldr	r3, [r7, #12]
 800565a:	681b      	ldr	r3, [r3, #0]
 800565c:	f022 0203 	bic.w	r2, r2, #3
 8005660:	605a      	str	r2, [r3, #4]
 8005662:	68fb      	ldr	r3, [r7, #12]
 8005664:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005666:	f043 0210 	orr.w	r2, r3, #16
 800566a:	68fb      	ldr	r3, [r7, #12]
 800566c:	655a      	str	r2, [r3, #84]	@ 0x54
 800566e:	68fb      	ldr	r3, [r7, #12]
 8005670:	2201      	movs	r2, #1
 8005672:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005676:	68f8      	ldr	r0, [r7, #12]
 8005678:	f7ff ff78 	bl	800556c <HAL_SPI_ErrorCallback>
 800567c:	bf00      	nop
 800567e:	3710      	adds	r7, #16
 8005680:	46bd      	mov	sp, r7
 8005682:	bd80      	pop	{r7, pc}

08005684 <SPI_WaitFlagStateUntilTimeout>:
 8005684:	b580      	push	{r7, lr}
 8005686:	b088      	sub	sp, #32
 8005688:	af00      	add	r7, sp, #0
 800568a:	60f8      	str	r0, [r7, #12]
 800568c:	60b9      	str	r1, [r7, #8]
 800568e:	603b      	str	r3, [r7, #0]
 8005690:	4613      	mov	r3, r2
 8005692:	71fb      	strb	r3, [r7, #7]
 8005694:	f7fd fecc 	bl	8003430 <HAL_GetTick>
 8005698:	4602      	mov	r2, r0
 800569a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800569c:	1a9b      	subs	r3, r3, r2
 800569e:	683a      	ldr	r2, [r7, #0]
 80056a0:	4413      	add	r3, r2
 80056a2:	61fb      	str	r3, [r7, #28]
 80056a4:	f7fd fec4 	bl	8003430 <HAL_GetTick>
 80056a8:	61b8      	str	r0, [r7, #24]
 80056aa:	4b39      	ldr	r3, [pc, #228]	@ (8005790 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80056ac:	681b      	ldr	r3, [r3, #0]
 80056ae:	015b      	lsls	r3, r3, #5
 80056b0:	0d1b      	lsrs	r3, r3, #20
 80056b2:	69fa      	ldr	r2, [r7, #28]
 80056b4:	fb02 f303 	mul.w	r3, r2, r3
 80056b8:	617b      	str	r3, [r7, #20]
 80056ba:	e055      	b.n	8005768 <SPI_WaitFlagStateUntilTimeout+0xe4>
 80056bc:	683b      	ldr	r3, [r7, #0]
 80056be:	f1b3 3fff 	cmp.w	r3, #4294967295
 80056c2:	d051      	beq.n	8005768 <SPI_WaitFlagStateUntilTimeout+0xe4>
 80056c4:	f7fd feb4 	bl	8003430 <HAL_GetTick>
 80056c8:	4602      	mov	r2, r0
 80056ca:	69bb      	ldr	r3, [r7, #24]
 80056cc:	1ad3      	subs	r3, r2, r3
 80056ce:	69fa      	ldr	r2, [r7, #28]
 80056d0:	429a      	cmp	r2, r3
 80056d2:	d902      	bls.n	80056da <SPI_WaitFlagStateUntilTimeout+0x56>
 80056d4:	69fb      	ldr	r3, [r7, #28]
 80056d6:	2b00      	cmp	r3, #0
 80056d8:	d13d      	bne.n	8005756 <SPI_WaitFlagStateUntilTimeout+0xd2>
 80056da:	68fb      	ldr	r3, [r7, #12]
 80056dc:	681b      	ldr	r3, [r3, #0]
 80056de:	685a      	ldr	r2, [r3, #4]
 80056e0:	68fb      	ldr	r3, [r7, #12]
 80056e2:	681b      	ldr	r3, [r3, #0]
 80056e4:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 80056e8:	605a      	str	r2, [r3, #4]
 80056ea:	68fb      	ldr	r3, [r7, #12]
 80056ec:	685b      	ldr	r3, [r3, #4]
 80056ee:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80056f2:	d111      	bne.n	8005718 <SPI_WaitFlagStateUntilTimeout+0x94>
 80056f4:	68fb      	ldr	r3, [r7, #12]
 80056f6:	689b      	ldr	r3, [r3, #8]
 80056f8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80056fc:	d004      	beq.n	8005708 <SPI_WaitFlagStateUntilTimeout+0x84>
 80056fe:	68fb      	ldr	r3, [r7, #12]
 8005700:	689b      	ldr	r3, [r3, #8]
 8005702:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005706:	d107      	bne.n	8005718 <SPI_WaitFlagStateUntilTimeout+0x94>
 8005708:	68fb      	ldr	r3, [r7, #12]
 800570a:	681b      	ldr	r3, [r3, #0]
 800570c:	681a      	ldr	r2, [r3, #0]
 800570e:	68fb      	ldr	r3, [r7, #12]
 8005710:	681b      	ldr	r3, [r3, #0]
 8005712:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005716:	601a      	str	r2, [r3, #0]
 8005718:	68fb      	ldr	r3, [r7, #12]
 800571a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800571c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005720:	d10f      	bne.n	8005742 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8005722:	68fb      	ldr	r3, [r7, #12]
 8005724:	681b      	ldr	r3, [r3, #0]
 8005726:	681a      	ldr	r2, [r3, #0]
 8005728:	68fb      	ldr	r3, [r7, #12]
 800572a:	681b      	ldr	r3, [r3, #0]
 800572c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005730:	601a      	str	r2, [r3, #0]
 8005732:	68fb      	ldr	r3, [r7, #12]
 8005734:	681b      	ldr	r3, [r3, #0]
 8005736:	681a      	ldr	r2, [r3, #0]
 8005738:	68fb      	ldr	r3, [r7, #12]
 800573a:	681b      	ldr	r3, [r3, #0]
 800573c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005740:	601a      	str	r2, [r3, #0]
 8005742:	68fb      	ldr	r3, [r7, #12]
 8005744:	2201      	movs	r2, #1
 8005746:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800574a:	68fb      	ldr	r3, [r7, #12]
 800574c:	2200      	movs	r2, #0
 800574e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005752:	2303      	movs	r3, #3
 8005754:	e018      	b.n	8005788 <SPI_WaitFlagStateUntilTimeout+0x104>
 8005756:	697b      	ldr	r3, [r7, #20]
 8005758:	2b00      	cmp	r3, #0
 800575a:	d102      	bne.n	8005762 <SPI_WaitFlagStateUntilTimeout+0xde>
 800575c:	2300      	movs	r3, #0
 800575e:	61fb      	str	r3, [r7, #28]
 8005760:	e002      	b.n	8005768 <SPI_WaitFlagStateUntilTimeout+0xe4>
 8005762:	697b      	ldr	r3, [r7, #20]
 8005764:	3b01      	subs	r3, #1
 8005766:	617b      	str	r3, [r7, #20]
 8005768:	68fb      	ldr	r3, [r7, #12]
 800576a:	681b      	ldr	r3, [r3, #0]
 800576c:	689a      	ldr	r2, [r3, #8]
 800576e:	68bb      	ldr	r3, [r7, #8]
 8005770:	4013      	ands	r3, r2
 8005772:	68ba      	ldr	r2, [r7, #8]
 8005774:	429a      	cmp	r2, r3
 8005776:	bf0c      	ite	eq
 8005778:	2301      	moveq	r3, #1
 800577a:	2300      	movne	r3, #0
 800577c:	b2db      	uxtb	r3, r3
 800577e:	461a      	mov	r2, r3
 8005780:	79fb      	ldrb	r3, [r7, #7]
 8005782:	429a      	cmp	r2, r3
 8005784:	d19a      	bne.n	80056bc <SPI_WaitFlagStateUntilTimeout+0x38>
 8005786:	2300      	movs	r3, #0
 8005788:	4618      	mov	r0, r3
 800578a:	3720      	adds	r7, #32
 800578c:	46bd      	mov	sp, r7
 800578e:	bd80      	pop	{r7, pc}
 8005790:	20000018 	.word	0x20000018

08005794 <SPI_EndRxTxTransaction>:
 8005794:	b580      	push	{r7, lr}
 8005796:	b088      	sub	sp, #32
 8005798:	af02      	add	r7, sp, #8
 800579a:	60f8      	str	r0, [r7, #12]
 800579c:	60b9      	str	r1, [r7, #8]
 800579e:	607a      	str	r2, [r7, #4]
 80057a0:	687b      	ldr	r3, [r7, #4]
 80057a2:	9300      	str	r3, [sp, #0]
 80057a4:	68bb      	ldr	r3, [r7, #8]
 80057a6:	2201      	movs	r2, #1
 80057a8:	2102      	movs	r1, #2
 80057aa:	68f8      	ldr	r0, [r7, #12]
 80057ac:	f7ff ff6a 	bl	8005684 <SPI_WaitFlagStateUntilTimeout>
 80057b0:	4603      	mov	r3, r0
 80057b2:	2b00      	cmp	r3, #0
 80057b4:	d007      	beq.n	80057c6 <SPI_EndRxTxTransaction+0x32>
 80057b6:	68fb      	ldr	r3, [r7, #12]
 80057b8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80057ba:	f043 0220 	orr.w	r2, r3, #32
 80057be:	68fb      	ldr	r3, [r7, #12]
 80057c0:	655a      	str	r2, [r3, #84]	@ 0x54
 80057c2:	2303      	movs	r3, #3
 80057c4:	e032      	b.n	800582c <SPI_EndRxTxTransaction+0x98>
 80057c6:	4b1b      	ldr	r3, [pc, #108]	@ (8005834 <SPI_EndRxTxTransaction+0xa0>)
 80057c8:	681b      	ldr	r3, [r3, #0]
 80057ca:	4a1b      	ldr	r2, [pc, #108]	@ (8005838 <SPI_EndRxTxTransaction+0xa4>)
 80057cc:	fba2 2303 	umull	r2, r3, r2, r3
 80057d0:	0d5b      	lsrs	r3, r3, #21
 80057d2:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80057d6:	fb02 f303 	mul.w	r3, r2, r3
 80057da:	617b      	str	r3, [r7, #20]
 80057dc:	68fb      	ldr	r3, [r7, #12]
 80057de:	685b      	ldr	r3, [r3, #4]
 80057e0:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80057e4:	d112      	bne.n	800580c <SPI_EndRxTxTransaction+0x78>
 80057e6:	687b      	ldr	r3, [r7, #4]
 80057e8:	9300      	str	r3, [sp, #0]
 80057ea:	68bb      	ldr	r3, [r7, #8]
 80057ec:	2200      	movs	r2, #0
 80057ee:	2180      	movs	r1, #128	@ 0x80
 80057f0:	68f8      	ldr	r0, [r7, #12]
 80057f2:	f7ff ff47 	bl	8005684 <SPI_WaitFlagStateUntilTimeout>
 80057f6:	4603      	mov	r3, r0
 80057f8:	2b00      	cmp	r3, #0
 80057fa:	d016      	beq.n	800582a <SPI_EndRxTxTransaction+0x96>
 80057fc:	68fb      	ldr	r3, [r7, #12]
 80057fe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005800:	f043 0220 	orr.w	r2, r3, #32
 8005804:	68fb      	ldr	r3, [r7, #12]
 8005806:	655a      	str	r2, [r3, #84]	@ 0x54
 8005808:	2303      	movs	r3, #3
 800580a:	e00f      	b.n	800582c <SPI_EndRxTxTransaction+0x98>
 800580c:	697b      	ldr	r3, [r7, #20]
 800580e:	2b00      	cmp	r3, #0
 8005810:	d00a      	beq.n	8005828 <SPI_EndRxTxTransaction+0x94>
 8005812:	697b      	ldr	r3, [r7, #20]
 8005814:	3b01      	subs	r3, #1
 8005816:	617b      	str	r3, [r7, #20]
 8005818:	68fb      	ldr	r3, [r7, #12]
 800581a:	681b      	ldr	r3, [r3, #0]
 800581c:	689b      	ldr	r3, [r3, #8]
 800581e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005822:	2b80      	cmp	r3, #128	@ 0x80
 8005824:	d0f2      	beq.n	800580c <SPI_EndRxTxTransaction+0x78>
 8005826:	e000      	b.n	800582a <SPI_EndRxTxTransaction+0x96>
 8005828:	bf00      	nop
 800582a:	2300      	movs	r3, #0
 800582c:	4618      	mov	r0, r3
 800582e:	3718      	adds	r7, #24
 8005830:	46bd      	mov	sp, r7
 8005832:	bd80      	pop	{r7, pc}
 8005834:	20000018 	.word	0x20000018
 8005838:	165e9f81 	.word	0x165e9f81

0800583c <srand>:
 800583c:	b538      	push	{r3, r4, r5, lr}
 800583e:	4b10      	ldr	r3, [pc, #64]	@ (8005880 <srand+0x44>)
 8005840:	681d      	ldr	r5, [r3, #0]
 8005842:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8005844:	4604      	mov	r4, r0
 8005846:	b9b3      	cbnz	r3, 8005876 <srand+0x3a>
 8005848:	2018      	movs	r0, #24
 800584a:	f000 fa9d 	bl	8005d88 <malloc>
 800584e:	4602      	mov	r2, r0
 8005850:	6328      	str	r0, [r5, #48]	@ 0x30
 8005852:	b920      	cbnz	r0, 800585e <srand+0x22>
 8005854:	4b0b      	ldr	r3, [pc, #44]	@ (8005884 <srand+0x48>)
 8005856:	480c      	ldr	r0, [pc, #48]	@ (8005888 <srand+0x4c>)
 8005858:	2146      	movs	r1, #70	@ 0x46
 800585a:	f000 fa2d 	bl	8005cb8 <__assert_func>
 800585e:	490b      	ldr	r1, [pc, #44]	@ (800588c <srand+0x50>)
 8005860:	4b0b      	ldr	r3, [pc, #44]	@ (8005890 <srand+0x54>)
 8005862:	e9c0 1300 	strd	r1, r3, [r0]
 8005866:	4b0b      	ldr	r3, [pc, #44]	@ (8005894 <srand+0x58>)
 8005868:	6083      	str	r3, [r0, #8]
 800586a:	230b      	movs	r3, #11
 800586c:	8183      	strh	r3, [r0, #12]
 800586e:	2100      	movs	r1, #0
 8005870:	2001      	movs	r0, #1
 8005872:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8005876:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 8005878:	2200      	movs	r2, #0
 800587a:	611c      	str	r4, [r3, #16]
 800587c:	615a      	str	r2, [r3, #20]
 800587e:	bd38      	pop	{r3, r4, r5, pc}
 8005880:	20000030 	.word	0x20000030
 8005884:	080084c4 	.word	0x080084c4
 8005888:	080084db 	.word	0x080084db
 800588c:	abcd330e 	.word	0xabcd330e
 8005890:	e66d1234 	.word	0xe66d1234
 8005894:	0005deec 	.word	0x0005deec

08005898 <rand>:
 8005898:	4b16      	ldr	r3, [pc, #88]	@ (80058f4 <rand+0x5c>)
 800589a:	b510      	push	{r4, lr}
 800589c:	681c      	ldr	r4, [r3, #0]
 800589e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80058a0:	b9b3      	cbnz	r3, 80058d0 <rand+0x38>
 80058a2:	2018      	movs	r0, #24
 80058a4:	f000 fa70 	bl	8005d88 <malloc>
 80058a8:	4602      	mov	r2, r0
 80058aa:	6320      	str	r0, [r4, #48]	@ 0x30
 80058ac:	b920      	cbnz	r0, 80058b8 <rand+0x20>
 80058ae:	4b12      	ldr	r3, [pc, #72]	@ (80058f8 <rand+0x60>)
 80058b0:	4812      	ldr	r0, [pc, #72]	@ (80058fc <rand+0x64>)
 80058b2:	2152      	movs	r1, #82	@ 0x52
 80058b4:	f000 fa00 	bl	8005cb8 <__assert_func>
 80058b8:	4911      	ldr	r1, [pc, #68]	@ (8005900 <rand+0x68>)
 80058ba:	4b12      	ldr	r3, [pc, #72]	@ (8005904 <rand+0x6c>)
 80058bc:	e9c0 1300 	strd	r1, r3, [r0]
 80058c0:	4b11      	ldr	r3, [pc, #68]	@ (8005908 <rand+0x70>)
 80058c2:	6083      	str	r3, [r0, #8]
 80058c4:	230b      	movs	r3, #11
 80058c6:	8183      	strh	r3, [r0, #12]
 80058c8:	2100      	movs	r1, #0
 80058ca:	2001      	movs	r0, #1
 80058cc:	e9c2 0104 	strd	r0, r1, [r2, #16]
 80058d0:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80058d2:	480e      	ldr	r0, [pc, #56]	@ (800590c <rand+0x74>)
 80058d4:	690b      	ldr	r3, [r1, #16]
 80058d6:	694c      	ldr	r4, [r1, #20]
 80058d8:	4a0d      	ldr	r2, [pc, #52]	@ (8005910 <rand+0x78>)
 80058da:	4358      	muls	r0, r3
 80058dc:	fb02 0004 	mla	r0, r2, r4, r0
 80058e0:	fba3 3202 	umull	r3, r2, r3, r2
 80058e4:	3301      	adds	r3, #1
 80058e6:	eb40 0002 	adc.w	r0, r0, r2
 80058ea:	e9c1 3004 	strd	r3, r0, [r1, #16]
 80058ee:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 80058f2:	bd10      	pop	{r4, pc}
 80058f4:	20000030 	.word	0x20000030
 80058f8:	080084c4 	.word	0x080084c4
 80058fc:	080084db 	.word	0x080084db
 8005900:	abcd330e 	.word	0xabcd330e
 8005904:	e66d1234 	.word	0xe66d1234
 8005908:	0005deec 	.word	0x0005deec
 800590c:	5851f42d 	.word	0x5851f42d
 8005910:	4c957f2d 	.word	0x4c957f2d

08005914 <std>:
 8005914:	2300      	movs	r3, #0
 8005916:	b510      	push	{r4, lr}
 8005918:	4604      	mov	r4, r0
 800591a:	e9c0 3300 	strd	r3, r3, [r0]
 800591e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8005922:	6083      	str	r3, [r0, #8]
 8005924:	8181      	strh	r1, [r0, #12]
 8005926:	6643      	str	r3, [r0, #100]	@ 0x64
 8005928:	81c2      	strh	r2, [r0, #14]
 800592a:	6183      	str	r3, [r0, #24]
 800592c:	4619      	mov	r1, r3
 800592e:	2208      	movs	r2, #8
 8005930:	305c      	adds	r0, #92	@ 0x5c
 8005932:	f000 f916 	bl	8005b62 <memset>
 8005936:	4b0d      	ldr	r3, [pc, #52]	@ (800596c <std+0x58>)
 8005938:	6263      	str	r3, [r4, #36]	@ 0x24
 800593a:	4b0d      	ldr	r3, [pc, #52]	@ (8005970 <std+0x5c>)
 800593c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800593e:	4b0d      	ldr	r3, [pc, #52]	@ (8005974 <std+0x60>)
 8005940:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8005942:	4b0d      	ldr	r3, [pc, #52]	@ (8005978 <std+0x64>)
 8005944:	6323      	str	r3, [r4, #48]	@ 0x30
 8005946:	4b0d      	ldr	r3, [pc, #52]	@ (800597c <std+0x68>)
 8005948:	6224      	str	r4, [r4, #32]
 800594a:	429c      	cmp	r4, r3
 800594c:	d006      	beq.n	800595c <std+0x48>
 800594e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8005952:	4294      	cmp	r4, r2
 8005954:	d002      	beq.n	800595c <std+0x48>
 8005956:	33d0      	adds	r3, #208	@ 0xd0
 8005958:	429c      	cmp	r4, r3
 800595a:	d105      	bne.n	8005968 <std+0x54>
 800595c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8005960:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005964:	f000 b9a4 	b.w	8005cb0 <__retarget_lock_init_recursive>
 8005968:	bd10      	pop	{r4, pc}
 800596a:	bf00      	nop
 800596c:	08005add 	.word	0x08005add
 8005970:	08005aff 	.word	0x08005aff
 8005974:	08005b37 	.word	0x08005b37
 8005978:	08005b5b 	.word	0x08005b5b
 800597c:	200004f0 	.word	0x200004f0

08005980 <stdio_exit_handler>:
 8005980:	4a02      	ldr	r2, [pc, #8]	@ (800598c <stdio_exit_handler+0xc>)
 8005982:	4903      	ldr	r1, [pc, #12]	@ (8005990 <stdio_exit_handler+0x10>)
 8005984:	4803      	ldr	r0, [pc, #12]	@ (8005994 <stdio_exit_handler+0x14>)
 8005986:	f000 b869 	b.w	8005a5c <_fwalk_sglue>
 800598a:	bf00      	nop
 800598c:	20000024 	.word	0x20000024
 8005990:	080065c5 	.word	0x080065c5
 8005994:	20000034 	.word	0x20000034

08005998 <cleanup_stdio>:
 8005998:	6841      	ldr	r1, [r0, #4]
 800599a:	4b0c      	ldr	r3, [pc, #48]	@ (80059cc <cleanup_stdio+0x34>)
 800599c:	4299      	cmp	r1, r3
 800599e:	b510      	push	{r4, lr}
 80059a0:	4604      	mov	r4, r0
 80059a2:	d001      	beq.n	80059a8 <cleanup_stdio+0x10>
 80059a4:	f000 fe0e 	bl	80065c4 <_fflush_r>
 80059a8:	68a1      	ldr	r1, [r4, #8]
 80059aa:	4b09      	ldr	r3, [pc, #36]	@ (80059d0 <cleanup_stdio+0x38>)
 80059ac:	4299      	cmp	r1, r3
 80059ae:	d002      	beq.n	80059b6 <cleanup_stdio+0x1e>
 80059b0:	4620      	mov	r0, r4
 80059b2:	f000 fe07 	bl	80065c4 <_fflush_r>
 80059b6:	68e1      	ldr	r1, [r4, #12]
 80059b8:	4b06      	ldr	r3, [pc, #24]	@ (80059d4 <cleanup_stdio+0x3c>)
 80059ba:	4299      	cmp	r1, r3
 80059bc:	d004      	beq.n	80059c8 <cleanup_stdio+0x30>
 80059be:	4620      	mov	r0, r4
 80059c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80059c4:	f000 bdfe 	b.w	80065c4 <_fflush_r>
 80059c8:	bd10      	pop	{r4, pc}
 80059ca:	bf00      	nop
 80059cc:	200004f0 	.word	0x200004f0
 80059d0:	20000558 	.word	0x20000558
 80059d4:	200005c0 	.word	0x200005c0

080059d8 <global_stdio_init.part.0>:
 80059d8:	b510      	push	{r4, lr}
 80059da:	4b0b      	ldr	r3, [pc, #44]	@ (8005a08 <global_stdio_init.part.0+0x30>)
 80059dc:	4c0b      	ldr	r4, [pc, #44]	@ (8005a0c <global_stdio_init.part.0+0x34>)
 80059de:	4a0c      	ldr	r2, [pc, #48]	@ (8005a10 <global_stdio_init.part.0+0x38>)
 80059e0:	601a      	str	r2, [r3, #0]
 80059e2:	4620      	mov	r0, r4
 80059e4:	2200      	movs	r2, #0
 80059e6:	2104      	movs	r1, #4
 80059e8:	f7ff ff94 	bl	8005914 <std>
 80059ec:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80059f0:	2201      	movs	r2, #1
 80059f2:	2109      	movs	r1, #9
 80059f4:	f7ff ff8e 	bl	8005914 <std>
 80059f8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80059fc:	2202      	movs	r2, #2
 80059fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005a02:	2112      	movs	r1, #18
 8005a04:	f7ff bf86 	b.w	8005914 <std>
 8005a08:	20000628 	.word	0x20000628
 8005a0c:	200004f0 	.word	0x200004f0
 8005a10:	08005981 	.word	0x08005981

08005a14 <__sfp_lock_acquire>:
 8005a14:	4801      	ldr	r0, [pc, #4]	@ (8005a1c <__sfp_lock_acquire+0x8>)
 8005a16:	f000 b94c 	b.w	8005cb2 <__retarget_lock_acquire_recursive>
 8005a1a:	bf00      	nop
 8005a1c:	20000631 	.word	0x20000631

08005a20 <__sfp_lock_release>:
 8005a20:	4801      	ldr	r0, [pc, #4]	@ (8005a28 <__sfp_lock_release+0x8>)
 8005a22:	f000 b947 	b.w	8005cb4 <__retarget_lock_release_recursive>
 8005a26:	bf00      	nop
 8005a28:	20000631 	.word	0x20000631

08005a2c <__sinit>:
 8005a2c:	b510      	push	{r4, lr}
 8005a2e:	4604      	mov	r4, r0
 8005a30:	f7ff fff0 	bl	8005a14 <__sfp_lock_acquire>
 8005a34:	6a23      	ldr	r3, [r4, #32]
 8005a36:	b11b      	cbz	r3, 8005a40 <__sinit+0x14>
 8005a38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005a3c:	f7ff bff0 	b.w	8005a20 <__sfp_lock_release>
 8005a40:	4b04      	ldr	r3, [pc, #16]	@ (8005a54 <__sinit+0x28>)
 8005a42:	6223      	str	r3, [r4, #32]
 8005a44:	4b04      	ldr	r3, [pc, #16]	@ (8005a58 <__sinit+0x2c>)
 8005a46:	681b      	ldr	r3, [r3, #0]
 8005a48:	2b00      	cmp	r3, #0
 8005a4a:	d1f5      	bne.n	8005a38 <__sinit+0xc>
 8005a4c:	f7ff ffc4 	bl	80059d8 <global_stdio_init.part.0>
 8005a50:	e7f2      	b.n	8005a38 <__sinit+0xc>
 8005a52:	bf00      	nop
 8005a54:	08005999 	.word	0x08005999
 8005a58:	20000628 	.word	0x20000628

08005a5c <_fwalk_sglue>:
 8005a5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005a60:	4607      	mov	r7, r0
 8005a62:	4688      	mov	r8, r1
 8005a64:	4614      	mov	r4, r2
 8005a66:	2600      	movs	r6, #0
 8005a68:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8005a6c:	f1b9 0901 	subs.w	r9, r9, #1
 8005a70:	d505      	bpl.n	8005a7e <_fwalk_sglue+0x22>
 8005a72:	6824      	ldr	r4, [r4, #0]
 8005a74:	2c00      	cmp	r4, #0
 8005a76:	d1f7      	bne.n	8005a68 <_fwalk_sglue+0xc>
 8005a78:	4630      	mov	r0, r6
 8005a7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005a7e:	89ab      	ldrh	r3, [r5, #12]
 8005a80:	2b01      	cmp	r3, #1
 8005a82:	d907      	bls.n	8005a94 <_fwalk_sglue+0x38>
 8005a84:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005a88:	3301      	adds	r3, #1
 8005a8a:	d003      	beq.n	8005a94 <_fwalk_sglue+0x38>
 8005a8c:	4629      	mov	r1, r5
 8005a8e:	4638      	mov	r0, r7
 8005a90:	47c0      	blx	r8
 8005a92:	4306      	orrs	r6, r0
 8005a94:	3568      	adds	r5, #104	@ 0x68
 8005a96:	e7e9      	b.n	8005a6c <_fwalk_sglue+0x10>

08005a98 <siprintf>:
 8005a98:	b40e      	push	{r1, r2, r3}
 8005a9a:	b510      	push	{r4, lr}
 8005a9c:	b09d      	sub	sp, #116	@ 0x74
 8005a9e:	ab1f      	add	r3, sp, #124	@ 0x7c
 8005aa0:	9002      	str	r0, [sp, #8]
 8005aa2:	9006      	str	r0, [sp, #24]
 8005aa4:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8005aa8:	480a      	ldr	r0, [pc, #40]	@ (8005ad4 <siprintf+0x3c>)
 8005aaa:	9107      	str	r1, [sp, #28]
 8005aac:	9104      	str	r1, [sp, #16]
 8005aae:	490a      	ldr	r1, [pc, #40]	@ (8005ad8 <siprintf+0x40>)
 8005ab0:	f853 2b04 	ldr.w	r2, [r3], #4
 8005ab4:	9105      	str	r1, [sp, #20]
 8005ab6:	2400      	movs	r4, #0
 8005ab8:	a902      	add	r1, sp, #8
 8005aba:	6800      	ldr	r0, [r0, #0]
 8005abc:	9301      	str	r3, [sp, #4]
 8005abe:	941b      	str	r4, [sp, #108]	@ 0x6c
 8005ac0:	f000 fa74 	bl	8005fac <_svfiprintf_r>
 8005ac4:	9b02      	ldr	r3, [sp, #8]
 8005ac6:	701c      	strb	r4, [r3, #0]
 8005ac8:	b01d      	add	sp, #116	@ 0x74
 8005aca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005ace:	b003      	add	sp, #12
 8005ad0:	4770      	bx	lr
 8005ad2:	bf00      	nop
 8005ad4:	20000030 	.word	0x20000030
 8005ad8:	ffff0208 	.word	0xffff0208

08005adc <__sread>:
 8005adc:	b510      	push	{r4, lr}
 8005ade:	460c      	mov	r4, r1
 8005ae0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005ae4:	f000 f896 	bl	8005c14 <_read_r>
 8005ae8:	2800      	cmp	r0, #0
 8005aea:	bfab      	itete	ge
 8005aec:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8005aee:	89a3      	ldrhlt	r3, [r4, #12]
 8005af0:	181b      	addge	r3, r3, r0
 8005af2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8005af6:	bfac      	ite	ge
 8005af8:	6563      	strge	r3, [r4, #84]	@ 0x54
 8005afa:	81a3      	strhlt	r3, [r4, #12]
 8005afc:	bd10      	pop	{r4, pc}

08005afe <__swrite>:
 8005afe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005b02:	461f      	mov	r7, r3
 8005b04:	898b      	ldrh	r3, [r1, #12]
 8005b06:	05db      	lsls	r3, r3, #23
 8005b08:	4605      	mov	r5, r0
 8005b0a:	460c      	mov	r4, r1
 8005b0c:	4616      	mov	r6, r2
 8005b0e:	d505      	bpl.n	8005b1c <__swrite+0x1e>
 8005b10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005b14:	2302      	movs	r3, #2
 8005b16:	2200      	movs	r2, #0
 8005b18:	f000 f86a 	bl	8005bf0 <_lseek_r>
 8005b1c:	89a3      	ldrh	r3, [r4, #12]
 8005b1e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005b22:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005b26:	81a3      	strh	r3, [r4, #12]
 8005b28:	4632      	mov	r2, r6
 8005b2a:	463b      	mov	r3, r7
 8005b2c:	4628      	mov	r0, r5
 8005b2e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005b32:	f000 b881 	b.w	8005c38 <_write_r>

08005b36 <__sseek>:
 8005b36:	b510      	push	{r4, lr}
 8005b38:	460c      	mov	r4, r1
 8005b3a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005b3e:	f000 f857 	bl	8005bf0 <_lseek_r>
 8005b42:	1c43      	adds	r3, r0, #1
 8005b44:	89a3      	ldrh	r3, [r4, #12]
 8005b46:	bf15      	itete	ne
 8005b48:	6560      	strne	r0, [r4, #84]	@ 0x54
 8005b4a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8005b4e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8005b52:	81a3      	strheq	r3, [r4, #12]
 8005b54:	bf18      	it	ne
 8005b56:	81a3      	strhne	r3, [r4, #12]
 8005b58:	bd10      	pop	{r4, pc}

08005b5a <__sclose>:
 8005b5a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005b5e:	f000 b825 	b.w	8005bac <_close_r>

08005b62 <memset>:
 8005b62:	4402      	add	r2, r0
 8005b64:	4603      	mov	r3, r0
 8005b66:	4293      	cmp	r3, r2
 8005b68:	d100      	bne.n	8005b6c <memset+0xa>
 8005b6a:	4770      	bx	lr
 8005b6c:	f803 1b01 	strb.w	r1, [r3], #1
 8005b70:	e7f9      	b.n	8005b66 <memset+0x4>
	...

08005b74 <time>:
 8005b74:	b5df      	push	{r0, r1, r2, r3, r4, r6, r7, lr}
 8005b76:	4b0c      	ldr	r3, [pc, #48]	@ (8005ba8 <time+0x34>)
 8005b78:	f04f 36ff 	mov.w	r6, #4294967295
 8005b7c:	f04f 37ff 	mov.w	r7, #4294967295
 8005b80:	4669      	mov	r1, sp
 8005b82:	4604      	mov	r4, r0
 8005b84:	2200      	movs	r2, #0
 8005b86:	6818      	ldr	r0, [r3, #0]
 8005b88:	e9cd 6700 	strd	r6, r7, [sp]
 8005b8c:	f000 f81e 	bl	8005bcc <_gettimeofday_r>
 8005b90:	2800      	cmp	r0, #0
 8005b92:	bfb8      	it	lt
 8005b94:	e9cd 6700 	strdlt	r6, r7, [sp]
 8005b98:	e9dd 0100 	ldrd	r0, r1, [sp]
 8005b9c:	b10c      	cbz	r4, 8005ba2 <time+0x2e>
 8005b9e:	e9c4 0100 	strd	r0, r1, [r4]
 8005ba2:	b004      	add	sp, #16
 8005ba4:	bdd0      	pop	{r4, r6, r7, pc}
 8005ba6:	bf00      	nop
 8005ba8:	20000030 	.word	0x20000030

08005bac <_close_r>:
 8005bac:	b538      	push	{r3, r4, r5, lr}
 8005bae:	4d06      	ldr	r5, [pc, #24]	@ (8005bc8 <_close_r+0x1c>)
 8005bb0:	2300      	movs	r3, #0
 8005bb2:	4604      	mov	r4, r0
 8005bb4:	4608      	mov	r0, r1
 8005bb6:	602b      	str	r3, [r5, #0]
 8005bb8:	f7fd fb2e 	bl	8003218 <_close>
 8005bbc:	1c43      	adds	r3, r0, #1
 8005bbe:	d102      	bne.n	8005bc6 <_close_r+0x1a>
 8005bc0:	682b      	ldr	r3, [r5, #0]
 8005bc2:	b103      	cbz	r3, 8005bc6 <_close_r+0x1a>
 8005bc4:	6023      	str	r3, [r4, #0]
 8005bc6:	bd38      	pop	{r3, r4, r5, pc}
 8005bc8:	2000062c 	.word	0x2000062c

08005bcc <_gettimeofday_r>:
 8005bcc:	b538      	push	{r3, r4, r5, lr}
 8005bce:	4d07      	ldr	r5, [pc, #28]	@ (8005bec <_gettimeofday_r+0x20>)
 8005bd0:	2300      	movs	r3, #0
 8005bd2:	4604      	mov	r4, r0
 8005bd4:	4608      	mov	r0, r1
 8005bd6:	4611      	mov	r1, r2
 8005bd8:	602b      	str	r3, [r5, #0]
 8005bda:	f001 f83f 	bl	8006c5c <_gettimeofday>
 8005bde:	1c43      	adds	r3, r0, #1
 8005be0:	d102      	bne.n	8005be8 <_gettimeofday_r+0x1c>
 8005be2:	682b      	ldr	r3, [r5, #0]
 8005be4:	b103      	cbz	r3, 8005be8 <_gettimeofday_r+0x1c>
 8005be6:	6023      	str	r3, [r4, #0]
 8005be8:	bd38      	pop	{r3, r4, r5, pc}
 8005bea:	bf00      	nop
 8005bec:	2000062c 	.word	0x2000062c

08005bf0 <_lseek_r>:
 8005bf0:	b538      	push	{r3, r4, r5, lr}
 8005bf2:	4d07      	ldr	r5, [pc, #28]	@ (8005c10 <_lseek_r+0x20>)
 8005bf4:	4604      	mov	r4, r0
 8005bf6:	4608      	mov	r0, r1
 8005bf8:	4611      	mov	r1, r2
 8005bfa:	2200      	movs	r2, #0
 8005bfc:	602a      	str	r2, [r5, #0]
 8005bfe:	461a      	mov	r2, r3
 8005c00:	f7fd fb31 	bl	8003266 <_lseek>
 8005c04:	1c43      	adds	r3, r0, #1
 8005c06:	d102      	bne.n	8005c0e <_lseek_r+0x1e>
 8005c08:	682b      	ldr	r3, [r5, #0]
 8005c0a:	b103      	cbz	r3, 8005c0e <_lseek_r+0x1e>
 8005c0c:	6023      	str	r3, [r4, #0]
 8005c0e:	bd38      	pop	{r3, r4, r5, pc}
 8005c10:	2000062c 	.word	0x2000062c

08005c14 <_read_r>:
 8005c14:	b538      	push	{r3, r4, r5, lr}
 8005c16:	4d07      	ldr	r5, [pc, #28]	@ (8005c34 <_read_r+0x20>)
 8005c18:	4604      	mov	r4, r0
 8005c1a:	4608      	mov	r0, r1
 8005c1c:	4611      	mov	r1, r2
 8005c1e:	2200      	movs	r2, #0
 8005c20:	602a      	str	r2, [r5, #0]
 8005c22:	461a      	mov	r2, r3
 8005c24:	f7fd fabf 	bl	80031a6 <_read>
 8005c28:	1c43      	adds	r3, r0, #1
 8005c2a:	d102      	bne.n	8005c32 <_read_r+0x1e>
 8005c2c:	682b      	ldr	r3, [r5, #0]
 8005c2e:	b103      	cbz	r3, 8005c32 <_read_r+0x1e>
 8005c30:	6023      	str	r3, [r4, #0]
 8005c32:	bd38      	pop	{r3, r4, r5, pc}
 8005c34:	2000062c 	.word	0x2000062c

08005c38 <_write_r>:
 8005c38:	b538      	push	{r3, r4, r5, lr}
 8005c3a:	4d07      	ldr	r5, [pc, #28]	@ (8005c58 <_write_r+0x20>)
 8005c3c:	4604      	mov	r4, r0
 8005c3e:	4608      	mov	r0, r1
 8005c40:	4611      	mov	r1, r2
 8005c42:	2200      	movs	r2, #0
 8005c44:	602a      	str	r2, [r5, #0]
 8005c46:	461a      	mov	r2, r3
 8005c48:	f7fd faca 	bl	80031e0 <_write>
 8005c4c:	1c43      	adds	r3, r0, #1
 8005c4e:	d102      	bne.n	8005c56 <_write_r+0x1e>
 8005c50:	682b      	ldr	r3, [r5, #0]
 8005c52:	b103      	cbz	r3, 8005c56 <_write_r+0x1e>
 8005c54:	6023      	str	r3, [r4, #0]
 8005c56:	bd38      	pop	{r3, r4, r5, pc}
 8005c58:	2000062c 	.word	0x2000062c

08005c5c <__errno>:
 8005c5c:	4b01      	ldr	r3, [pc, #4]	@ (8005c64 <__errno+0x8>)
 8005c5e:	6818      	ldr	r0, [r3, #0]
 8005c60:	4770      	bx	lr
 8005c62:	bf00      	nop
 8005c64:	20000030 	.word	0x20000030

08005c68 <__libc_init_array>:
 8005c68:	b570      	push	{r4, r5, r6, lr}
 8005c6a:	4d0d      	ldr	r5, [pc, #52]	@ (8005ca0 <__libc_init_array+0x38>)
 8005c6c:	4c0d      	ldr	r4, [pc, #52]	@ (8005ca4 <__libc_init_array+0x3c>)
 8005c6e:	1b64      	subs	r4, r4, r5
 8005c70:	10a4      	asrs	r4, r4, #2
 8005c72:	2600      	movs	r6, #0
 8005c74:	42a6      	cmp	r6, r4
 8005c76:	d109      	bne.n	8005c8c <__libc_init_array+0x24>
 8005c78:	4d0b      	ldr	r5, [pc, #44]	@ (8005ca8 <__libc_init_array+0x40>)
 8005c7a:	4c0c      	ldr	r4, [pc, #48]	@ (8005cac <__libc_init_array+0x44>)
 8005c7c:	f000 fff6 	bl	8006c6c <_init>
 8005c80:	1b64      	subs	r4, r4, r5
 8005c82:	10a4      	asrs	r4, r4, #2
 8005c84:	2600      	movs	r6, #0
 8005c86:	42a6      	cmp	r6, r4
 8005c88:	d105      	bne.n	8005c96 <__libc_init_array+0x2e>
 8005c8a:	bd70      	pop	{r4, r5, r6, pc}
 8005c8c:	f855 3b04 	ldr.w	r3, [r5], #4
 8005c90:	4798      	blx	r3
 8005c92:	3601      	adds	r6, #1
 8005c94:	e7ee      	b.n	8005c74 <__libc_init_array+0xc>
 8005c96:	f855 3b04 	ldr.w	r3, [r5], #4
 8005c9a:	4798      	blx	r3
 8005c9c:	3601      	adds	r6, #1
 8005c9e:	e7f2      	b.n	8005c86 <__libc_init_array+0x1e>
 8005ca0:	080085ac 	.word	0x080085ac
 8005ca4:	080085ac 	.word	0x080085ac
 8005ca8:	080085ac 	.word	0x080085ac
 8005cac:	080085b0 	.word	0x080085b0

08005cb0 <__retarget_lock_init_recursive>:
 8005cb0:	4770      	bx	lr

08005cb2 <__retarget_lock_acquire_recursive>:
 8005cb2:	4770      	bx	lr

08005cb4 <__retarget_lock_release_recursive>:
 8005cb4:	4770      	bx	lr
	...

08005cb8 <__assert_func>:
 8005cb8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005cba:	4614      	mov	r4, r2
 8005cbc:	461a      	mov	r2, r3
 8005cbe:	4b09      	ldr	r3, [pc, #36]	@ (8005ce4 <__assert_func+0x2c>)
 8005cc0:	681b      	ldr	r3, [r3, #0]
 8005cc2:	4605      	mov	r5, r0
 8005cc4:	68d8      	ldr	r0, [r3, #12]
 8005cc6:	b14c      	cbz	r4, 8005cdc <__assert_func+0x24>
 8005cc8:	4b07      	ldr	r3, [pc, #28]	@ (8005ce8 <__assert_func+0x30>)
 8005cca:	9100      	str	r1, [sp, #0]
 8005ccc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005cd0:	4906      	ldr	r1, [pc, #24]	@ (8005cec <__assert_func+0x34>)
 8005cd2:	462b      	mov	r3, r5
 8005cd4:	f000 fc9e 	bl	8006614 <fiprintf>
 8005cd8:	f000 fce6 	bl	80066a8 <abort>
 8005cdc:	4b04      	ldr	r3, [pc, #16]	@ (8005cf0 <__assert_func+0x38>)
 8005cde:	461c      	mov	r4, r3
 8005ce0:	e7f3      	b.n	8005cca <__assert_func+0x12>
 8005ce2:	bf00      	nop
 8005ce4:	20000030 	.word	0x20000030
 8005ce8:	08008533 	.word	0x08008533
 8005cec:	08008540 	.word	0x08008540
 8005cf0:	0800856e 	.word	0x0800856e

08005cf4 <_free_r>:
 8005cf4:	b538      	push	{r3, r4, r5, lr}
 8005cf6:	4605      	mov	r5, r0
 8005cf8:	2900      	cmp	r1, #0
 8005cfa:	d041      	beq.n	8005d80 <_free_r+0x8c>
 8005cfc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005d00:	1f0c      	subs	r4, r1, #4
 8005d02:	2b00      	cmp	r3, #0
 8005d04:	bfb8      	it	lt
 8005d06:	18e4      	addlt	r4, r4, r3
 8005d08:	f000 f8e8 	bl	8005edc <__malloc_lock>
 8005d0c:	4a1d      	ldr	r2, [pc, #116]	@ (8005d84 <_free_r+0x90>)
 8005d0e:	6813      	ldr	r3, [r2, #0]
 8005d10:	b933      	cbnz	r3, 8005d20 <_free_r+0x2c>
 8005d12:	6063      	str	r3, [r4, #4]
 8005d14:	6014      	str	r4, [r2, #0]
 8005d16:	4628      	mov	r0, r5
 8005d18:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005d1c:	f000 b8e4 	b.w	8005ee8 <__malloc_unlock>
 8005d20:	42a3      	cmp	r3, r4
 8005d22:	d908      	bls.n	8005d36 <_free_r+0x42>
 8005d24:	6820      	ldr	r0, [r4, #0]
 8005d26:	1821      	adds	r1, r4, r0
 8005d28:	428b      	cmp	r3, r1
 8005d2a:	bf01      	itttt	eq
 8005d2c:	6819      	ldreq	r1, [r3, #0]
 8005d2e:	685b      	ldreq	r3, [r3, #4]
 8005d30:	1809      	addeq	r1, r1, r0
 8005d32:	6021      	streq	r1, [r4, #0]
 8005d34:	e7ed      	b.n	8005d12 <_free_r+0x1e>
 8005d36:	461a      	mov	r2, r3
 8005d38:	685b      	ldr	r3, [r3, #4]
 8005d3a:	b10b      	cbz	r3, 8005d40 <_free_r+0x4c>
 8005d3c:	42a3      	cmp	r3, r4
 8005d3e:	d9fa      	bls.n	8005d36 <_free_r+0x42>
 8005d40:	6811      	ldr	r1, [r2, #0]
 8005d42:	1850      	adds	r0, r2, r1
 8005d44:	42a0      	cmp	r0, r4
 8005d46:	d10b      	bne.n	8005d60 <_free_r+0x6c>
 8005d48:	6820      	ldr	r0, [r4, #0]
 8005d4a:	4401      	add	r1, r0
 8005d4c:	1850      	adds	r0, r2, r1
 8005d4e:	4283      	cmp	r3, r0
 8005d50:	6011      	str	r1, [r2, #0]
 8005d52:	d1e0      	bne.n	8005d16 <_free_r+0x22>
 8005d54:	6818      	ldr	r0, [r3, #0]
 8005d56:	685b      	ldr	r3, [r3, #4]
 8005d58:	6053      	str	r3, [r2, #4]
 8005d5a:	4408      	add	r0, r1
 8005d5c:	6010      	str	r0, [r2, #0]
 8005d5e:	e7da      	b.n	8005d16 <_free_r+0x22>
 8005d60:	d902      	bls.n	8005d68 <_free_r+0x74>
 8005d62:	230c      	movs	r3, #12
 8005d64:	602b      	str	r3, [r5, #0]
 8005d66:	e7d6      	b.n	8005d16 <_free_r+0x22>
 8005d68:	6820      	ldr	r0, [r4, #0]
 8005d6a:	1821      	adds	r1, r4, r0
 8005d6c:	428b      	cmp	r3, r1
 8005d6e:	bf04      	itt	eq
 8005d70:	6819      	ldreq	r1, [r3, #0]
 8005d72:	685b      	ldreq	r3, [r3, #4]
 8005d74:	6063      	str	r3, [r4, #4]
 8005d76:	bf04      	itt	eq
 8005d78:	1809      	addeq	r1, r1, r0
 8005d7a:	6021      	streq	r1, [r4, #0]
 8005d7c:	6054      	str	r4, [r2, #4]
 8005d7e:	e7ca      	b.n	8005d16 <_free_r+0x22>
 8005d80:	bd38      	pop	{r3, r4, r5, pc}
 8005d82:	bf00      	nop
 8005d84:	20000638 	.word	0x20000638

08005d88 <malloc>:
 8005d88:	4b02      	ldr	r3, [pc, #8]	@ (8005d94 <malloc+0xc>)
 8005d8a:	4601      	mov	r1, r0
 8005d8c:	6818      	ldr	r0, [r3, #0]
 8005d8e:	f000 b825 	b.w	8005ddc <_malloc_r>
 8005d92:	bf00      	nop
 8005d94:	20000030 	.word	0x20000030

08005d98 <sbrk_aligned>:
 8005d98:	b570      	push	{r4, r5, r6, lr}
 8005d9a:	4e0f      	ldr	r6, [pc, #60]	@ (8005dd8 <sbrk_aligned+0x40>)
 8005d9c:	460c      	mov	r4, r1
 8005d9e:	6831      	ldr	r1, [r6, #0]
 8005da0:	4605      	mov	r5, r0
 8005da2:	b911      	cbnz	r1, 8005daa <sbrk_aligned+0x12>
 8005da4:	f000 fc62 	bl	800666c <_sbrk_r>
 8005da8:	6030      	str	r0, [r6, #0]
 8005daa:	4621      	mov	r1, r4
 8005dac:	4628      	mov	r0, r5
 8005dae:	f000 fc5d 	bl	800666c <_sbrk_r>
 8005db2:	1c43      	adds	r3, r0, #1
 8005db4:	d103      	bne.n	8005dbe <sbrk_aligned+0x26>
 8005db6:	f04f 34ff 	mov.w	r4, #4294967295
 8005dba:	4620      	mov	r0, r4
 8005dbc:	bd70      	pop	{r4, r5, r6, pc}
 8005dbe:	1cc4      	adds	r4, r0, #3
 8005dc0:	f024 0403 	bic.w	r4, r4, #3
 8005dc4:	42a0      	cmp	r0, r4
 8005dc6:	d0f8      	beq.n	8005dba <sbrk_aligned+0x22>
 8005dc8:	1a21      	subs	r1, r4, r0
 8005dca:	4628      	mov	r0, r5
 8005dcc:	f000 fc4e 	bl	800666c <_sbrk_r>
 8005dd0:	3001      	adds	r0, #1
 8005dd2:	d1f2      	bne.n	8005dba <sbrk_aligned+0x22>
 8005dd4:	e7ef      	b.n	8005db6 <sbrk_aligned+0x1e>
 8005dd6:	bf00      	nop
 8005dd8:	20000634 	.word	0x20000634

08005ddc <_malloc_r>:
 8005ddc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005de0:	1ccd      	adds	r5, r1, #3
 8005de2:	f025 0503 	bic.w	r5, r5, #3
 8005de6:	3508      	adds	r5, #8
 8005de8:	2d0c      	cmp	r5, #12
 8005dea:	bf38      	it	cc
 8005dec:	250c      	movcc	r5, #12
 8005dee:	2d00      	cmp	r5, #0
 8005df0:	4606      	mov	r6, r0
 8005df2:	db01      	blt.n	8005df8 <_malloc_r+0x1c>
 8005df4:	42a9      	cmp	r1, r5
 8005df6:	d904      	bls.n	8005e02 <_malloc_r+0x26>
 8005df8:	230c      	movs	r3, #12
 8005dfa:	6033      	str	r3, [r6, #0]
 8005dfc:	2000      	movs	r0, #0
 8005dfe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005e02:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8005ed8 <_malloc_r+0xfc>
 8005e06:	f000 f869 	bl	8005edc <__malloc_lock>
 8005e0a:	f8d8 3000 	ldr.w	r3, [r8]
 8005e0e:	461c      	mov	r4, r3
 8005e10:	bb44      	cbnz	r4, 8005e64 <_malloc_r+0x88>
 8005e12:	4629      	mov	r1, r5
 8005e14:	4630      	mov	r0, r6
 8005e16:	f7ff ffbf 	bl	8005d98 <sbrk_aligned>
 8005e1a:	1c43      	adds	r3, r0, #1
 8005e1c:	4604      	mov	r4, r0
 8005e1e:	d158      	bne.n	8005ed2 <_malloc_r+0xf6>
 8005e20:	f8d8 4000 	ldr.w	r4, [r8]
 8005e24:	4627      	mov	r7, r4
 8005e26:	2f00      	cmp	r7, #0
 8005e28:	d143      	bne.n	8005eb2 <_malloc_r+0xd6>
 8005e2a:	2c00      	cmp	r4, #0
 8005e2c:	d04b      	beq.n	8005ec6 <_malloc_r+0xea>
 8005e2e:	6823      	ldr	r3, [r4, #0]
 8005e30:	4639      	mov	r1, r7
 8005e32:	4630      	mov	r0, r6
 8005e34:	eb04 0903 	add.w	r9, r4, r3
 8005e38:	f000 fc18 	bl	800666c <_sbrk_r>
 8005e3c:	4581      	cmp	r9, r0
 8005e3e:	d142      	bne.n	8005ec6 <_malloc_r+0xea>
 8005e40:	6821      	ldr	r1, [r4, #0]
 8005e42:	1a6d      	subs	r5, r5, r1
 8005e44:	4629      	mov	r1, r5
 8005e46:	4630      	mov	r0, r6
 8005e48:	f7ff ffa6 	bl	8005d98 <sbrk_aligned>
 8005e4c:	3001      	adds	r0, #1
 8005e4e:	d03a      	beq.n	8005ec6 <_malloc_r+0xea>
 8005e50:	6823      	ldr	r3, [r4, #0]
 8005e52:	442b      	add	r3, r5
 8005e54:	6023      	str	r3, [r4, #0]
 8005e56:	f8d8 3000 	ldr.w	r3, [r8]
 8005e5a:	685a      	ldr	r2, [r3, #4]
 8005e5c:	bb62      	cbnz	r2, 8005eb8 <_malloc_r+0xdc>
 8005e5e:	f8c8 7000 	str.w	r7, [r8]
 8005e62:	e00f      	b.n	8005e84 <_malloc_r+0xa8>
 8005e64:	6822      	ldr	r2, [r4, #0]
 8005e66:	1b52      	subs	r2, r2, r5
 8005e68:	d420      	bmi.n	8005eac <_malloc_r+0xd0>
 8005e6a:	2a0b      	cmp	r2, #11
 8005e6c:	d917      	bls.n	8005e9e <_malloc_r+0xc2>
 8005e6e:	1961      	adds	r1, r4, r5
 8005e70:	42a3      	cmp	r3, r4
 8005e72:	6025      	str	r5, [r4, #0]
 8005e74:	bf18      	it	ne
 8005e76:	6059      	strne	r1, [r3, #4]
 8005e78:	6863      	ldr	r3, [r4, #4]
 8005e7a:	bf08      	it	eq
 8005e7c:	f8c8 1000 	streq.w	r1, [r8]
 8005e80:	5162      	str	r2, [r4, r5]
 8005e82:	604b      	str	r3, [r1, #4]
 8005e84:	4630      	mov	r0, r6
 8005e86:	f000 f82f 	bl	8005ee8 <__malloc_unlock>
 8005e8a:	f104 000b 	add.w	r0, r4, #11
 8005e8e:	1d23      	adds	r3, r4, #4
 8005e90:	f020 0007 	bic.w	r0, r0, #7
 8005e94:	1ac2      	subs	r2, r0, r3
 8005e96:	bf1c      	itt	ne
 8005e98:	1a1b      	subne	r3, r3, r0
 8005e9a:	50a3      	strne	r3, [r4, r2]
 8005e9c:	e7af      	b.n	8005dfe <_malloc_r+0x22>
 8005e9e:	6862      	ldr	r2, [r4, #4]
 8005ea0:	42a3      	cmp	r3, r4
 8005ea2:	bf0c      	ite	eq
 8005ea4:	f8c8 2000 	streq.w	r2, [r8]
 8005ea8:	605a      	strne	r2, [r3, #4]
 8005eaa:	e7eb      	b.n	8005e84 <_malloc_r+0xa8>
 8005eac:	4623      	mov	r3, r4
 8005eae:	6864      	ldr	r4, [r4, #4]
 8005eb0:	e7ae      	b.n	8005e10 <_malloc_r+0x34>
 8005eb2:	463c      	mov	r4, r7
 8005eb4:	687f      	ldr	r7, [r7, #4]
 8005eb6:	e7b6      	b.n	8005e26 <_malloc_r+0x4a>
 8005eb8:	461a      	mov	r2, r3
 8005eba:	685b      	ldr	r3, [r3, #4]
 8005ebc:	42a3      	cmp	r3, r4
 8005ebe:	d1fb      	bne.n	8005eb8 <_malloc_r+0xdc>
 8005ec0:	2300      	movs	r3, #0
 8005ec2:	6053      	str	r3, [r2, #4]
 8005ec4:	e7de      	b.n	8005e84 <_malloc_r+0xa8>
 8005ec6:	230c      	movs	r3, #12
 8005ec8:	6033      	str	r3, [r6, #0]
 8005eca:	4630      	mov	r0, r6
 8005ecc:	f000 f80c 	bl	8005ee8 <__malloc_unlock>
 8005ed0:	e794      	b.n	8005dfc <_malloc_r+0x20>
 8005ed2:	6005      	str	r5, [r0, #0]
 8005ed4:	e7d6      	b.n	8005e84 <_malloc_r+0xa8>
 8005ed6:	bf00      	nop
 8005ed8:	20000638 	.word	0x20000638

08005edc <__malloc_lock>:
 8005edc:	4801      	ldr	r0, [pc, #4]	@ (8005ee4 <__malloc_lock+0x8>)
 8005ede:	f7ff bee8 	b.w	8005cb2 <__retarget_lock_acquire_recursive>
 8005ee2:	bf00      	nop
 8005ee4:	20000630 	.word	0x20000630

08005ee8 <__malloc_unlock>:
 8005ee8:	4801      	ldr	r0, [pc, #4]	@ (8005ef0 <__malloc_unlock+0x8>)
 8005eea:	f7ff bee3 	b.w	8005cb4 <__retarget_lock_release_recursive>
 8005eee:	bf00      	nop
 8005ef0:	20000630 	.word	0x20000630

08005ef4 <__ssputs_r>:
 8005ef4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005ef8:	688e      	ldr	r6, [r1, #8]
 8005efa:	461f      	mov	r7, r3
 8005efc:	42be      	cmp	r6, r7
 8005efe:	680b      	ldr	r3, [r1, #0]
 8005f00:	4682      	mov	sl, r0
 8005f02:	460c      	mov	r4, r1
 8005f04:	4690      	mov	r8, r2
 8005f06:	d82d      	bhi.n	8005f64 <__ssputs_r+0x70>
 8005f08:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005f0c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8005f10:	d026      	beq.n	8005f60 <__ssputs_r+0x6c>
 8005f12:	6965      	ldr	r5, [r4, #20]
 8005f14:	6909      	ldr	r1, [r1, #16]
 8005f16:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005f1a:	eba3 0901 	sub.w	r9, r3, r1
 8005f1e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005f22:	1c7b      	adds	r3, r7, #1
 8005f24:	444b      	add	r3, r9
 8005f26:	106d      	asrs	r5, r5, #1
 8005f28:	429d      	cmp	r5, r3
 8005f2a:	bf38      	it	cc
 8005f2c:	461d      	movcc	r5, r3
 8005f2e:	0553      	lsls	r3, r2, #21
 8005f30:	d527      	bpl.n	8005f82 <__ssputs_r+0x8e>
 8005f32:	4629      	mov	r1, r5
 8005f34:	f7ff ff52 	bl	8005ddc <_malloc_r>
 8005f38:	4606      	mov	r6, r0
 8005f3a:	b360      	cbz	r0, 8005f96 <__ssputs_r+0xa2>
 8005f3c:	6921      	ldr	r1, [r4, #16]
 8005f3e:	464a      	mov	r2, r9
 8005f40:	f000 fba4 	bl	800668c <memcpy>
 8005f44:	89a3      	ldrh	r3, [r4, #12]
 8005f46:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8005f4a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005f4e:	81a3      	strh	r3, [r4, #12]
 8005f50:	6126      	str	r6, [r4, #16]
 8005f52:	6165      	str	r5, [r4, #20]
 8005f54:	444e      	add	r6, r9
 8005f56:	eba5 0509 	sub.w	r5, r5, r9
 8005f5a:	6026      	str	r6, [r4, #0]
 8005f5c:	60a5      	str	r5, [r4, #8]
 8005f5e:	463e      	mov	r6, r7
 8005f60:	42be      	cmp	r6, r7
 8005f62:	d900      	bls.n	8005f66 <__ssputs_r+0x72>
 8005f64:	463e      	mov	r6, r7
 8005f66:	6820      	ldr	r0, [r4, #0]
 8005f68:	4632      	mov	r2, r6
 8005f6a:	4641      	mov	r1, r8
 8005f6c:	f000 fb64 	bl	8006638 <memmove>
 8005f70:	68a3      	ldr	r3, [r4, #8]
 8005f72:	1b9b      	subs	r3, r3, r6
 8005f74:	60a3      	str	r3, [r4, #8]
 8005f76:	6823      	ldr	r3, [r4, #0]
 8005f78:	4433      	add	r3, r6
 8005f7a:	6023      	str	r3, [r4, #0]
 8005f7c:	2000      	movs	r0, #0
 8005f7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005f82:	462a      	mov	r2, r5
 8005f84:	f000 fb97 	bl	80066b6 <_realloc_r>
 8005f88:	4606      	mov	r6, r0
 8005f8a:	2800      	cmp	r0, #0
 8005f8c:	d1e0      	bne.n	8005f50 <__ssputs_r+0x5c>
 8005f8e:	6921      	ldr	r1, [r4, #16]
 8005f90:	4650      	mov	r0, sl
 8005f92:	f7ff feaf 	bl	8005cf4 <_free_r>
 8005f96:	230c      	movs	r3, #12
 8005f98:	f8ca 3000 	str.w	r3, [sl]
 8005f9c:	89a3      	ldrh	r3, [r4, #12]
 8005f9e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005fa2:	81a3      	strh	r3, [r4, #12]
 8005fa4:	f04f 30ff 	mov.w	r0, #4294967295
 8005fa8:	e7e9      	b.n	8005f7e <__ssputs_r+0x8a>
	...

08005fac <_svfiprintf_r>:
 8005fac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005fb0:	4698      	mov	r8, r3
 8005fb2:	898b      	ldrh	r3, [r1, #12]
 8005fb4:	061b      	lsls	r3, r3, #24
 8005fb6:	b09d      	sub	sp, #116	@ 0x74
 8005fb8:	4607      	mov	r7, r0
 8005fba:	460d      	mov	r5, r1
 8005fbc:	4614      	mov	r4, r2
 8005fbe:	d510      	bpl.n	8005fe2 <_svfiprintf_r+0x36>
 8005fc0:	690b      	ldr	r3, [r1, #16]
 8005fc2:	b973      	cbnz	r3, 8005fe2 <_svfiprintf_r+0x36>
 8005fc4:	2140      	movs	r1, #64	@ 0x40
 8005fc6:	f7ff ff09 	bl	8005ddc <_malloc_r>
 8005fca:	6028      	str	r0, [r5, #0]
 8005fcc:	6128      	str	r0, [r5, #16]
 8005fce:	b930      	cbnz	r0, 8005fde <_svfiprintf_r+0x32>
 8005fd0:	230c      	movs	r3, #12
 8005fd2:	603b      	str	r3, [r7, #0]
 8005fd4:	f04f 30ff 	mov.w	r0, #4294967295
 8005fd8:	b01d      	add	sp, #116	@ 0x74
 8005fda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005fde:	2340      	movs	r3, #64	@ 0x40
 8005fe0:	616b      	str	r3, [r5, #20]
 8005fe2:	2300      	movs	r3, #0
 8005fe4:	9309      	str	r3, [sp, #36]	@ 0x24
 8005fe6:	2320      	movs	r3, #32
 8005fe8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8005fec:	f8cd 800c 	str.w	r8, [sp, #12]
 8005ff0:	2330      	movs	r3, #48	@ 0x30
 8005ff2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8006190 <_svfiprintf_r+0x1e4>
 8005ff6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8005ffa:	f04f 0901 	mov.w	r9, #1
 8005ffe:	4623      	mov	r3, r4
 8006000:	469a      	mov	sl, r3
 8006002:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006006:	b10a      	cbz	r2, 800600c <_svfiprintf_r+0x60>
 8006008:	2a25      	cmp	r2, #37	@ 0x25
 800600a:	d1f9      	bne.n	8006000 <_svfiprintf_r+0x54>
 800600c:	ebba 0b04 	subs.w	fp, sl, r4
 8006010:	d00b      	beq.n	800602a <_svfiprintf_r+0x7e>
 8006012:	465b      	mov	r3, fp
 8006014:	4622      	mov	r2, r4
 8006016:	4629      	mov	r1, r5
 8006018:	4638      	mov	r0, r7
 800601a:	f7ff ff6b 	bl	8005ef4 <__ssputs_r>
 800601e:	3001      	adds	r0, #1
 8006020:	f000 80a7 	beq.w	8006172 <_svfiprintf_r+0x1c6>
 8006024:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006026:	445a      	add	r2, fp
 8006028:	9209      	str	r2, [sp, #36]	@ 0x24
 800602a:	f89a 3000 	ldrb.w	r3, [sl]
 800602e:	2b00      	cmp	r3, #0
 8006030:	f000 809f 	beq.w	8006172 <_svfiprintf_r+0x1c6>
 8006034:	2300      	movs	r3, #0
 8006036:	f04f 32ff 	mov.w	r2, #4294967295
 800603a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800603e:	f10a 0a01 	add.w	sl, sl, #1
 8006042:	9304      	str	r3, [sp, #16]
 8006044:	9307      	str	r3, [sp, #28]
 8006046:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800604a:	931a      	str	r3, [sp, #104]	@ 0x68
 800604c:	4654      	mov	r4, sl
 800604e:	2205      	movs	r2, #5
 8006050:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006054:	484e      	ldr	r0, [pc, #312]	@ (8006190 <_svfiprintf_r+0x1e4>)
 8006056:	f7fa f8cb 	bl	80001f0 <memchr>
 800605a:	9a04      	ldr	r2, [sp, #16]
 800605c:	b9d8      	cbnz	r0, 8006096 <_svfiprintf_r+0xea>
 800605e:	06d0      	lsls	r0, r2, #27
 8006060:	bf44      	itt	mi
 8006062:	2320      	movmi	r3, #32
 8006064:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006068:	0711      	lsls	r1, r2, #28
 800606a:	bf44      	itt	mi
 800606c:	232b      	movmi	r3, #43	@ 0x2b
 800606e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006072:	f89a 3000 	ldrb.w	r3, [sl]
 8006076:	2b2a      	cmp	r3, #42	@ 0x2a
 8006078:	d015      	beq.n	80060a6 <_svfiprintf_r+0xfa>
 800607a:	9a07      	ldr	r2, [sp, #28]
 800607c:	4654      	mov	r4, sl
 800607e:	2000      	movs	r0, #0
 8006080:	f04f 0c0a 	mov.w	ip, #10
 8006084:	4621      	mov	r1, r4
 8006086:	f811 3b01 	ldrb.w	r3, [r1], #1
 800608a:	3b30      	subs	r3, #48	@ 0x30
 800608c:	2b09      	cmp	r3, #9
 800608e:	d94b      	bls.n	8006128 <_svfiprintf_r+0x17c>
 8006090:	b1b0      	cbz	r0, 80060c0 <_svfiprintf_r+0x114>
 8006092:	9207      	str	r2, [sp, #28]
 8006094:	e014      	b.n	80060c0 <_svfiprintf_r+0x114>
 8006096:	eba0 0308 	sub.w	r3, r0, r8
 800609a:	fa09 f303 	lsl.w	r3, r9, r3
 800609e:	4313      	orrs	r3, r2
 80060a0:	9304      	str	r3, [sp, #16]
 80060a2:	46a2      	mov	sl, r4
 80060a4:	e7d2      	b.n	800604c <_svfiprintf_r+0xa0>
 80060a6:	9b03      	ldr	r3, [sp, #12]
 80060a8:	1d19      	adds	r1, r3, #4
 80060aa:	681b      	ldr	r3, [r3, #0]
 80060ac:	9103      	str	r1, [sp, #12]
 80060ae:	2b00      	cmp	r3, #0
 80060b0:	bfbb      	ittet	lt
 80060b2:	425b      	neglt	r3, r3
 80060b4:	f042 0202 	orrlt.w	r2, r2, #2
 80060b8:	9307      	strge	r3, [sp, #28]
 80060ba:	9307      	strlt	r3, [sp, #28]
 80060bc:	bfb8      	it	lt
 80060be:	9204      	strlt	r2, [sp, #16]
 80060c0:	7823      	ldrb	r3, [r4, #0]
 80060c2:	2b2e      	cmp	r3, #46	@ 0x2e
 80060c4:	d10a      	bne.n	80060dc <_svfiprintf_r+0x130>
 80060c6:	7863      	ldrb	r3, [r4, #1]
 80060c8:	2b2a      	cmp	r3, #42	@ 0x2a
 80060ca:	d132      	bne.n	8006132 <_svfiprintf_r+0x186>
 80060cc:	9b03      	ldr	r3, [sp, #12]
 80060ce:	1d1a      	adds	r2, r3, #4
 80060d0:	681b      	ldr	r3, [r3, #0]
 80060d2:	9203      	str	r2, [sp, #12]
 80060d4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80060d8:	3402      	adds	r4, #2
 80060da:	9305      	str	r3, [sp, #20]
 80060dc:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 80061a0 <_svfiprintf_r+0x1f4>
 80060e0:	7821      	ldrb	r1, [r4, #0]
 80060e2:	2203      	movs	r2, #3
 80060e4:	4650      	mov	r0, sl
 80060e6:	f7fa f883 	bl	80001f0 <memchr>
 80060ea:	b138      	cbz	r0, 80060fc <_svfiprintf_r+0x150>
 80060ec:	9b04      	ldr	r3, [sp, #16]
 80060ee:	eba0 000a 	sub.w	r0, r0, sl
 80060f2:	2240      	movs	r2, #64	@ 0x40
 80060f4:	4082      	lsls	r2, r0
 80060f6:	4313      	orrs	r3, r2
 80060f8:	3401      	adds	r4, #1
 80060fa:	9304      	str	r3, [sp, #16]
 80060fc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006100:	4824      	ldr	r0, [pc, #144]	@ (8006194 <_svfiprintf_r+0x1e8>)
 8006102:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8006106:	2206      	movs	r2, #6
 8006108:	f7fa f872 	bl	80001f0 <memchr>
 800610c:	2800      	cmp	r0, #0
 800610e:	d036      	beq.n	800617e <_svfiprintf_r+0x1d2>
 8006110:	4b21      	ldr	r3, [pc, #132]	@ (8006198 <_svfiprintf_r+0x1ec>)
 8006112:	bb1b      	cbnz	r3, 800615c <_svfiprintf_r+0x1b0>
 8006114:	9b03      	ldr	r3, [sp, #12]
 8006116:	3307      	adds	r3, #7
 8006118:	f023 0307 	bic.w	r3, r3, #7
 800611c:	3308      	adds	r3, #8
 800611e:	9303      	str	r3, [sp, #12]
 8006120:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006122:	4433      	add	r3, r6
 8006124:	9309      	str	r3, [sp, #36]	@ 0x24
 8006126:	e76a      	b.n	8005ffe <_svfiprintf_r+0x52>
 8006128:	fb0c 3202 	mla	r2, ip, r2, r3
 800612c:	460c      	mov	r4, r1
 800612e:	2001      	movs	r0, #1
 8006130:	e7a8      	b.n	8006084 <_svfiprintf_r+0xd8>
 8006132:	2300      	movs	r3, #0
 8006134:	3401      	adds	r4, #1
 8006136:	9305      	str	r3, [sp, #20]
 8006138:	4619      	mov	r1, r3
 800613a:	f04f 0c0a 	mov.w	ip, #10
 800613e:	4620      	mov	r0, r4
 8006140:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006144:	3a30      	subs	r2, #48	@ 0x30
 8006146:	2a09      	cmp	r2, #9
 8006148:	d903      	bls.n	8006152 <_svfiprintf_r+0x1a6>
 800614a:	2b00      	cmp	r3, #0
 800614c:	d0c6      	beq.n	80060dc <_svfiprintf_r+0x130>
 800614e:	9105      	str	r1, [sp, #20]
 8006150:	e7c4      	b.n	80060dc <_svfiprintf_r+0x130>
 8006152:	fb0c 2101 	mla	r1, ip, r1, r2
 8006156:	4604      	mov	r4, r0
 8006158:	2301      	movs	r3, #1
 800615a:	e7f0      	b.n	800613e <_svfiprintf_r+0x192>
 800615c:	ab03      	add	r3, sp, #12
 800615e:	9300      	str	r3, [sp, #0]
 8006160:	462a      	mov	r2, r5
 8006162:	4b0e      	ldr	r3, [pc, #56]	@ (800619c <_svfiprintf_r+0x1f0>)
 8006164:	a904      	add	r1, sp, #16
 8006166:	4638      	mov	r0, r7
 8006168:	f3af 8000 	nop.w
 800616c:	1c42      	adds	r2, r0, #1
 800616e:	4606      	mov	r6, r0
 8006170:	d1d6      	bne.n	8006120 <_svfiprintf_r+0x174>
 8006172:	89ab      	ldrh	r3, [r5, #12]
 8006174:	065b      	lsls	r3, r3, #25
 8006176:	f53f af2d 	bmi.w	8005fd4 <_svfiprintf_r+0x28>
 800617a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800617c:	e72c      	b.n	8005fd8 <_svfiprintf_r+0x2c>
 800617e:	ab03      	add	r3, sp, #12
 8006180:	9300      	str	r3, [sp, #0]
 8006182:	462a      	mov	r2, r5
 8006184:	4b05      	ldr	r3, [pc, #20]	@ (800619c <_svfiprintf_r+0x1f0>)
 8006186:	a904      	add	r1, sp, #16
 8006188:	4638      	mov	r0, r7
 800618a:	f000 f879 	bl	8006280 <_printf_i>
 800618e:	e7ed      	b.n	800616c <_svfiprintf_r+0x1c0>
 8006190:	0800856f 	.word	0x0800856f
 8006194:	08008579 	.word	0x08008579
 8006198:	00000000 	.word	0x00000000
 800619c:	08005ef5 	.word	0x08005ef5
 80061a0:	08008575 	.word	0x08008575

080061a4 <_printf_common>:
 80061a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80061a8:	4616      	mov	r6, r2
 80061aa:	4698      	mov	r8, r3
 80061ac:	688a      	ldr	r2, [r1, #8]
 80061ae:	690b      	ldr	r3, [r1, #16]
 80061b0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80061b4:	4293      	cmp	r3, r2
 80061b6:	bfb8      	it	lt
 80061b8:	4613      	movlt	r3, r2
 80061ba:	6033      	str	r3, [r6, #0]
 80061bc:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80061c0:	4607      	mov	r7, r0
 80061c2:	460c      	mov	r4, r1
 80061c4:	b10a      	cbz	r2, 80061ca <_printf_common+0x26>
 80061c6:	3301      	adds	r3, #1
 80061c8:	6033      	str	r3, [r6, #0]
 80061ca:	6823      	ldr	r3, [r4, #0]
 80061cc:	0699      	lsls	r1, r3, #26
 80061ce:	bf42      	ittt	mi
 80061d0:	6833      	ldrmi	r3, [r6, #0]
 80061d2:	3302      	addmi	r3, #2
 80061d4:	6033      	strmi	r3, [r6, #0]
 80061d6:	6825      	ldr	r5, [r4, #0]
 80061d8:	f015 0506 	ands.w	r5, r5, #6
 80061dc:	d106      	bne.n	80061ec <_printf_common+0x48>
 80061de:	f104 0a19 	add.w	sl, r4, #25
 80061e2:	68e3      	ldr	r3, [r4, #12]
 80061e4:	6832      	ldr	r2, [r6, #0]
 80061e6:	1a9b      	subs	r3, r3, r2
 80061e8:	42ab      	cmp	r3, r5
 80061ea:	dc26      	bgt.n	800623a <_printf_common+0x96>
 80061ec:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80061f0:	6822      	ldr	r2, [r4, #0]
 80061f2:	3b00      	subs	r3, #0
 80061f4:	bf18      	it	ne
 80061f6:	2301      	movne	r3, #1
 80061f8:	0692      	lsls	r2, r2, #26
 80061fa:	d42b      	bmi.n	8006254 <_printf_common+0xb0>
 80061fc:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8006200:	4641      	mov	r1, r8
 8006202:	4638      	mov	r0, r7
 8006204:	47c8      	blx	r9
 8006206:	3001      	adds	r0, #1
 8006208:	d01e      	beq.n	8006248 <_printf_common+0xa4>
 800620a:	6823      	ldr	r3, [r4, #0]
 800620c:	6922      	ldr	r2, [r4, #16]
 800620e:	f003 0306 	and.w	r3, r3, #6
 8006212:	2b04      	cmp	r3, #4
 8006214:	bf02      	ittt	eq
 8006216:	68e5      	ldreq	r5, [r4, #12]
 8006218:	6833      	ldreq	r3, [r6, #0]
 800621a:	1aed      	subeq	r5, r5, r3
 800621c:	68a3      	ldr	r3, [r4, #8]
 800621e:	bf0c      	ite	eq
 8006220:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8006224:	2500      	movne	r5, #0
 8006226:	4293      	cmp	r3, r2
 8006228:	bfc4      	itt	gt
 800622a:	1a9b      	subgt	r3, r3, r2
 800622c:	18ed      	addgt	r5, r5, r3
 800622e:	2600      	movs	r6, #0
 8006230:	341a      	adds	r4, #26
 8006232:	42b5      	cmp	r5, r6
 8006234:	d11a      	bne.n	800626c <_printf_common+0xc8>
 8006236:	2000      	movs	r0, #0
 8006238:	e008      	b.n	800624c <_printf_common+0xa8>
 800623a:	2301      	movs	r3, #1
 800623c:	4652      	mov	r2, sl
 800623e:	4641      	mov	r1, r8
 8006240:	4638      	mov	r0, r7
 8006242:	47c8      	blx	r9
 8006244:	3001      	adds	r0, #1
 8006246:	d103      	bne.n	8006250 <_printf_common+0xac>
 8006248:	f04f 30ff 	mov.w	r0, #4294967295
 800624c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006250:	3501      	adds	r5, #1
 8006252:	e7c6      	b.n	80061e2 <_printf_common+0x3e>
 8006254:	18e1      	adds	r1, r4, r3
 8006256:	1c5a      	adds	r2, r3, #1
 8006258:	2030      	movs	r0, #48	@ 0x30
 800625a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800625e:	4422      	add	r2, r4
 8006260:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8006264:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8006268:	3302      	adds	r3, #2
 800626a:	e7c7      	b.n	80061fc <_printf_common+0x58>
 800626c:	2301      	movs	r3, #1
 800626e:	4622      	mov	r2, r4
 8006270:	4641      	mov	r1, r8
 8006272:	4638      	mov	r0, r7
 8006274:	47c8      	blx	r9
 8006276:	3001      	adds	r0, #1
 8006278:	d0e6      	beq.n	8006248 <_printf_common+0xa4>
 800627a:	3601      	adds	r6, #1
 800627c:	e7d9      	b.n	8006232 <_printf_common+0x8e>
	...

08006280 <_printf_i>:
 8006280:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006284:	7e0f      	ldrb	r7, [r1, #24]
 8006286:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8006288:	2f78      	cmp	r7, #120	@ 0x78
 800628a:	4691      	mov	r9, r2
 800628c:	4680      	mov	r8, r0
 800628e:	460c      	mov	r4, r1
 8006290:	469a      	mov	sl, r3
 8006292:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8006296:	d807      	bhi.n	80062a8 <_printf_i+0x28>
 8006298:	2f62      	cmp	r7, #98	@ 0x62
 800629a:	d80a      	bhi.n	80062b2 <_printf_i+0x32>
 800629c:	2f00      	cmp	r7, #0
 800629e:	f000 80d1 	beq.w	8006444 <_printf_i+0x1c4>
 80062a2:	2f58      	cmp	r7, #88	@ 0x58
 80062a4:	f000 80b8 	beq.w	8006418 <_printf_i+0x198>
 80062a8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80062ac:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80062b0:	e03a      	b.n	8006328 <_printf_i+0xa8>
 80062b2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80062b6:	2b15      	cmp	r3, #21
 80062b8:	d8f6      	bhi.n	80062a8 <_printf_i+0x28>
 80062ba:	a101      	add	r1, pc, #4	@ (adr r1, 80062c0 <_printf_i+0x40>)
 80062bc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80062c0:	08006319 	.word	0x08006319
 80062c4:	0800632d 	.word	0x0800632d
 80062c8:	080062a9 	.word	0x080062a9
 80062cc:	080062a9 	.word	0x080062a9
 80062d0:	080062a9 	.word	0x080062a9
 80062d4:	080062a9 	.word	0x080062a9
 80062d8:	0800632d 	.word	0x0800632d
 80062dc:	080062a9 	.word	0x080062a9
 80062e0:	080062a9 	.word	0x080062a9
 80062e4:	080062a9 	.word	0x080062a9
 80062e8:	080062a9 	.word	0x080062a9
 80062ec:	0800642b 	.word	0x0800642b
 80062f0:	08006357 	.word	0x08006357
 80062f4:	080063e5 	.word	0x080063e5
 80062f8:	080062a9 	.word	0x080062a9
 80062fc:	080062a9 	.word	0x080062a9
 8006300:	0800644d 	.word	0x0800644d
 8006304:	080062a9 	.word	0x080062a9
 8006308:	08006357 	.word	0x08006357
 800630c:	080062a9 	.word	0x080062a9
 8006310:	080062a9 	.word	0x080062a9
 8006314:	080063ed 	.word	0x080063ed
 8006318:	6833      	ldr	r3, [r6, #0]
 800631a:	1d1a      	adds	r2, r3, #4
 800631c:	681b      	ldr	r3, [r3, #0]
 800631e:	6032      	str	r2, [r6, #0]
 8006320:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8006324:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8006328:	2301      	movs	r3, #1
 800632a:	e09c      	b.n	8006466 <_printf_i+0x1e6>
 800632c:	6833      	ldr	r3, [r6, #0]
 800632e:	6820      	ldr	r0, [r4, #0]
 8006330:	1d19      	adds	r1, r3, #4
 8006332:	6031      	str	r1, [r6, #0]
 8006334:	0606      	lsls	r6, r0, #24
 8006336:	d501      	bpl.n	800633c <_printf_i+0xbc>
 8006338:	681d      	ldr	r5, [r3, #0]
 800633a:	e003      	b.n	8006344 <_printf_i+0xc4>
 800633c:	0645      	lsls	r5, r0, #25
 800633e:	d5fb      	bpl.n	8006338 <_printf_i+0xb8>
 8006340:	f9b3 5000 	ldrsh.w	r5, [r3]
 8006344:	2d00      	cmp	r5, #0
 8006346:	da03      	bge.n	8006350 <_printf_i+0xd0>
 8006348:	232d      	movs	r3, #45	@ 0x2d
 800634a:	426d      	negs	r5, r5
 800634c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006350:	4858      	ldr	r0, [pc, #352]	@ (80064b4 <_printf_i+0x234>)
 8006352:	230a      	movs	r3, #10
 8006354:	e011      	b.n	800637a <_printf_i+0xfa>
 8006356:	6821      	ldr	r1, [r4, #0]
 8006358:	6833      	ldr	r3, [r6, #0]
 800635a:	0608      	lsls	r0, r1, #24
 800635c:	f853 5b04 	ldr.w	r5, [r3], #4
 8006360:	d402      	bmi.n	8006368 <_printf_i+0xe8>
 8006362:	0649      	lsls	r1, r1, #25
 8006364:	bf48      	it	mi
 8006366:	b2ad      	uxthmi	r5, r5
 8006368:	2f6f      	cmp	r7, #111	@ 0x6f
 800636a:	4852      	ldr	r0, [pc, #328]	@ (80064b4 <_printf_i+0x234>)
 800636c:	6033      	str	r3, [r6, #0]
 800636e:	bf14      	ite	ne
 8006370:	230a      	movne	r3, #10
 8006372:	2308      	moveq	r3, #8
 8006374:	2100      	movs	r1, #0
 8006376:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800637a:	6866      	ldr	r6, [r4, #4]
 800637c:	60a6      	str	r6, [r4, #8]
 800637e:	2e00      	cmp	r6, #0
 8006380:	db05      	blt.n	800638e <_printf_i+0x10e>
 8006382:	6821      	ldr	r1, [r4, #0]
 8006384:	432e      	orrs	r6, r5
 8006386:	f021 0104 	bic.w	r1, r1, #4
 800638a:	6021      	str	r1, [r4, #0]
 800638c:	d04b      	beq.n	8006426 <_printf_i+0x1a6>
 800638e:	4616      	mov	r6, r2
 8006390:	fbb5 f1f3 	udiv	r1, r5, r3
 8006394:	fb03 5711 	mls	r7, r3, r1, r5
 8006398:	5dc7      	ldrb	r7, [r0, r7]
 800639a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800639e:	462f      	mov	r7, r5
 80063a0:	42bb      	cmp	r3, r7
 80063a2:	460d      	mov	r5, r1
 80063a4:	d9f4      	bls.n	8006390 <_printf_i+0x110>
 80063a6:	2b08      	cmp	r3, #8
 80063a8:	d10b      	bne.n	80063c2 <_printf_i+0x142>
 80063aa:	6823      	ldr	r3, [r4, #0]
 80063ac:	07df      	lsls	r7, r3, #31
 80063ae:	d508      	bpl.n	80063c2 <_printf_i+0x142>
 80063b0:	6923      	ldr	r3, [r4, #16]
 80063b2:	6861      	ldr	r1, [r4, #4]
 80063b4:	4299      	cmp	r1, r3
 80063b6:	bfde      	ittt	le
 80063b8:	2330      	movle	r3, #48	@ 0x30
 80063ba:	f806 3c01 	strble.w	r3, [r6, #-1]
 80063be:	f106 36ff 	addle.w	r6, r6, #4294967295
 80063c2:	1b92      	subs	r2, r2, r6
 80063c4:	6122      	str	r2, [r4, #16]
 80063c6:	f8cd a000 	str.w	sl, [sp]
 80063ca:	464b      	mov	r3, r9
 80063cc:	aa03      	add	r2, sp, #12
 80063ce:	4621      	mov	r1, r4
 80063d0:	4640      	mov	r0, r8
 80063d2:	f7ff fee7 	bl	80061a4 <_printf_common>
 80063d6:	3001      	adds	r0, #1
 80063d8:	d14a      	bne.n	8006470 <_printf_i+0x1f0>
 80063da:	f04f 30ff 	mov.w	r0, #4294967295
 80063de:	b004      	add	sp, #16
 80063e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80063e4:	6823      	ldr	r3, [r4, #0]
 80063e6:	f043 0320 	orr.w	r3, r3, #32
 80063ea:	6023      	str	r3, [r4, #0]
 80063ec:	4832      	ldr	r0, [pc, #200]	@ (80064b8 <_printf_i+0x238>)
 80063ee:	2778      	movs	r7, #120	@ 0x78
 80063f0:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80063f4:	6823      	ldr	r3, [r4, #0]
 80063f6:	6831      	ldr	r1, [r6, #0]
 80063f8:	061f      	lsls	r7, r3, #24
 80063fa:	f851 5b04 	ldr.w	r5, [r1], #4
 80063fe:	d402      	bmi.n	8006406 <_printf_i+0x186>
 8006400:	065f      	lsls	r7, r3, #25
 8006402:	bf48      	it	mi
 8006404:	b2ad      	uxthmi	r5, r5
 8006406:	6031      	str	r1, [r6, #0]
 8006408:	07d9      	lsls	r1, r3, #31
 800640a:	bf44      	itt	mi
 800640c:	f043 0320 	orrmi.w	r3, r3, #32
 8006410:	6023      	strmi	r3, [r4, #0]
 8006412:	b11d      	cbz	r5, 800641c <_printf_i+0x19c>
 8006414:	2310      	movs	r3, #16
 8006416:	e7ad      	b.n	8006374 <_printf_i+0xf4>
 8006418:	4826      	ldr	r0, [pc, #152]	@ (80064b4 <_printf_i+0x234>)
 800641a:	e7e9      	b.n	80063f0 <_printf_i+0x170>
 800641c:	6823      	ldr	r3, [r4, #0]
 800641e:	f023 0320 	bic.w	r3, r3, #32
 8006422:	6023      	str	r3, [r4, #0]
 8006424:	e7f6      	b.n	8006414 <_printf_i+0x194>
 8006426:	4616      	mov	r6, r2
 8006428:	e7bd      	b.n	80063a6 <_printf_i+0x126>
 800642a:	6833      	ldr	r3, [r6, #0]
 800642c:	6825      	ldr	r5, [r4, #0]
 800642e:	6961      	ldr	r1, [r4, #20]
 8006430:	1d18      	adds	r0, r3, #4
 8006432:	6030      	str	r0, [r6, #0]
 8006434:	062e      	lsls	r6, r5, #24
 8006436:	681b      	ldr	r3, [r3, #0]
 8006438:	d501      	bpl.n	800643e <_printf_i+0x1be>
 800643a:	6019      	str	r1, [r3, #0]
 800643c:	e002      	b.n	8006444 <_printf_i+0x1c4>
 800643e:	0668      	lsls	r0, r5, #25
 8006440:	d5fb      	bpl.n	800643a <_printf_i+0x1ba>
 8006442:	8019      	strh	r1, [r3, #0]
 8006444:	2300      	movs	r3, #0
 8006446:	6123      	str	r3, [r4, #16]
 8006448:	4616      	mov	r6, r2
 800644a:	e7bc      	b.n	80063c6 <_printf_i+0x146>
 800644c:	6833      	ldr	r3, [r6, #0]
 800644e:	1d1a      	adds	r2, r3, #4
 8006450:	6032      	str	r2, [r6, #0]
 8006452:	681e      	ldr	r6, [r3, #0]
 8006454:	6862      	ldr	r2, [r4, #4]
 8006456:	2100      	movs	r1, #0
 8006458:	4630      	mov	r0, r6
 800645a:	f7f9 fec9 	bl	80001f0 <memchr>
 800645e:	b108      	cbz	r0, 8006464 <_printf_i+0x1e4>
 8006460:	1b80      	subs	r0, r0, r6
 8006462:	6060      	str	r0, [r4, #4]
 8006464:	6863      	ldr	r3, [r4, #4]
 8006466:	6123      	str	r3, [r4, #16]
 8006468:	2300      	movs	r3, #0
 800646a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800646e:	e7aa      	b.n	80063c6 <_printf_i+0x146>
 8006470:	6923      	ldr	r3, [r4, #16]
 8006472:	4632      	mov	r2, r6
 8006474:	4649      	mov	r1, r9
 8006476:	4640      	mov	r0, r8
 8006478:	47d0      	blx	sl
 800647a:	3001      	adds	r0, #1
 800647c:	d0ad      	beq.n	80063da <_printf_i+0x15a>
 800647e:	6823      	ldr	r3, [r4, #0]
 8006480:	079b      	lsls	r3, r3, #30
 8006482:	d413      	bmi.n	80064ac <_printf_i+0x22c>
 8006484:	68e0      	ldr	r0, [r4, #12]
 8006486:	9b03      	ldr	r3, [sp, #12]
 8006488:	4298      	cmp	r0, r3
 800648a:	bfb8      	it	lt
 800648c:	4618      	movlt	r0, r3
 800648e:	e7a6      	b.n	80063de <_printf_i+0x15e>
 8006490:	2301      	movs	r3, #1
 8006492:	4632      	mov	r2, r6
 8006494:	4649      	mov	r1, r9
 8006496:	4640      	mov	r0, r8
 8006498:	47d0      	blx	sl
 800649a:	3001      	adds	r0, #1
 800649c:	d09d      	beq.n	80063da <_printf_i+0x15a>
 800649e:	3501      	adds	r5, #1
 80064a0:	68e3      	ldr	r3, [r4, #12]
 80064a2:	9903      	ldr	r1, [sp, #12]
 80064a4:	1a5b      	subs	r3, r3, r1
 80064a6:	42ab      	cmp	r3, r5
 80064a8:	dcf2      	bgt.n	8006490 <_printf_i+0x210>
 80064aa:	e7eb      	b.n	8006484 <_printf_i+0x204>
 80064ac:	2500      	movs	r5, #0
 80064ae:	f104 0619 	add.w	r6, r4, #25
 80064b2:	e7f5      	b.n	80064a0 <_printf_i+0x220>
 80064b4:	08008580 	.word	0x08008580
 80064b8:	08008591 	.word	0x08008591

080064bc <__sflush_r>:
 80064bc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80064c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80064c4:	0716      	lsls	r6, r2, #28
 80064c6:	4605      	mov	r5, r0
 80064c8:	460c      	mov	r4, r1
 80064ca:	d454      	bmi.n	8006576 <__sflush_r+0xba>
 80064cc:	684b      	ldr	r3, [r1, #4]
 80064ce:	2b00      	cmp	r3, #0
 80064d0:	dc02      	bgt.n	80064d8 <__sflush_r+0x1c>
 80064d2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80064d4:	2b00      	cmp	r3, #0
 80064d6:	dd48      	ble.n	800656a <__sflush_r+0xae>
 80064d8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80064da:	2e00      	cmp	r6, #0
 80064dc:	d045      	beq.n	800656a <__sflush_r+0xae>
 80064de:	2300      	movs	r3, #0
 80064e0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80064e4:	682f      	ldr	r7, [r5, #0]
 80064e6:	6a21      	ldr	r1, [r4, #32]
 80064e8:	602b      	str	r3, [r5, #0]
 80064ea:	d030      	beq.n	800654e <__sflush_r+0x92>
 80064ec:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80064ee:	89a3      	ldrh	r3, [r4, #12]
 80064f0:	0759      	lsls	r1, r3, #29
 80064f2:	d505      	bpl.n	8006500 <__sflush_r+0x44>
 80064f4:	6863      	ldr	r3, [r4, #4]
 80064f6:	1ad2      	subs	r2, r2, r3
 80064f8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80064fa:	b10b      	cbz	r3, 8006500 <__sflush_r+0x44>
 80064fc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80064fe:	1ad2      	subs	r2, r2, r3
 8006500:	2300      	movs	r3, #0
 8006502:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8006504:	6a21      	ldr	r1, [r4, #32]
 8006506:	4628      	mov	r0, r5
 8006508:	47b0      	blx	r6
 800650a:	1c43      	adds	r3, r0, #1
 800650c:	89a3      	ldrh	r3, [r4, #12]
 800650e:	d106      	bne.n	800651e <__sflush_r+0x62>
 8006510:	6829      	ldr	r1, [r5, #0]
 8006512:	291d      	cmp	r1, #29
 8006514:	d82b      	bhi.n	800656e <__sflush_r+0xb2>
 8006516:	4a2a      	ldr	r2, [pc, #168]	@ (80065c0 <__sflush_r+0x104>)
 8006518:	40ca      	lsrs	r2, r1
 800651a:	07d6      	lsls	r6, r2, #31
 800651c:	d527      	bpl.n	800656e <__sflush_r+0xb2>
 800651e:	2200      	movs	r2, #0
 8006520:	6062      	str	r2, [r4, #4]
 8006522:	04d9      	lsls	r1, r3, #19
 8006524:	6922      	ldr	r2, [r4, #16]
 8006526:	6022      	str	r2, [r4, #0]
 8006528:	d504      	bpl.n	8006534 <__sflush_r+0x78>
 800652a:	1c42      	adds	r2, r0, #1
 800652c:	d101      	bne.n	8006532 <__sflush_r+0x76>
 800652e:	682b      	ldr	r3, [r5, #0]
 8006530:	b903      	cbnz	r3, 8006534 <__sflush_r+0x78>
 8006532:	6560      	str	r0, [r4, #84]	@ 0x54
 8006534:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006536:	602f      	str	r7, [r5, #0]
 8006538:	b1b9      	cbz	r1, 800656a <__sflush_r+0xae>
 800653a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800653e:	4299      	cmp	r1, r3
 8006540:	d002      	beq.n	8006548 <__sflush_r+0x8c>
 8006542:	4628      	mov	r0, r5
 8006544:	f7ff fbd6 	bl	8005cf4 <_free_r>
 8006548:	2300      	movs	r3, #0
 800654a:	6363      	str	r3, [r4, #52]	@ 0x34
 800654c:	e00d      	b.n	800656a <__sflush_r+0xae>
 800654e:	2301      	movs	r3, #1
 8006550:	4628      	mov	r0, r5
 8006552:	47b0      	blx	r6
 8006554:	4602      	mov	r2, r0
 8006556:	1c50      	adds	r0, r2, #1
 8006558:	d1c9      	bne.n	80064ee <__sflush_r+0x32>
 800655a:	682b      	ldr	r3, [r5, #0]
 800655c:	2b00      	cmp	r3, #0
 800655e:	d0c6      	beq.n	80064ee <__sflush_r+0x32>
 8006560:	2b1d      	cmp	r3, #29
 8006562:	d001      	beq.n	8006568 <__sflush_r+0xac>
 8006564:	2b16      	cmp	r3, #22
 8006566:	d11e      	bne.n	80065a6 <__sflush_r+0xea>
 8006568:	602f      	str	r7, [r5, #0]
 800656a:	2000      	movs	r0, #0
 800656c:	e022      	b.n	80065b4 <__sflush_r+0xf8>
 800656e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006572:	b21b      	sxth	r3, r3
 8006574:	e01b      	b.n	80065ae <__sflush_r+0xf2>
 8006576:	690f      	ldr	r7, [r1, #16]
 8006578:	2f00      	cmp	r7, #0
 800657a:	d0f6      	beq.n	800656a <__sflush_r+0xae>
 800657c:	0793      	lsls	r3, r2, #30
 800657e:	680e      	ldr	r6, [r1, #0]
 8006580:	bf08      	it	eq
 8006582:	694b      	ldreq	r3, [r1, #20]
 8006584:	600f      	str	r7, [r1, #0]
 8006586:	bf18      	it	ne
 8006588:	2300      	movne	r3, #0
 800658a:	eba6 0807 	sub.w	r8, r6, r7
 800658e:	608b      	str	r3, [r1, #8]
 8006590:	f1b8 0f00 	cmp.w	r8, #0
 8006594:	dde9      	ble.n	800656a <__sflush_r+0xae>
 8006596:	6a21      	ldr	r1, [r4, #32]
 8006598:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800659a:	4643      	mov	r3, r8
 800659c:	463a      	mov	r2, r7
 800659e:	4628      	mov	r0, r5
 80065a0:	47b0      	blx	r6
 80065a2:	2800      	cmp	r0, #0
 80065a4:	dc08      	bgt.n	80065b8 <__sflush_r+0xfc>
 80065a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80065aa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80065ae:	81a3      	strh	r3, [r4, #12]
 80065b0:	f04f 30ff 	mov.w	r0, #4294967295
 80065b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80065b8:	4407      	add	r7, r0
 80065ba:	eba8 0800 	sub.w	r8, r8, r0
 80065be:	e7e7      	b.n	8006590 <__sflush_r+0xd4>
 80065c0:	20400001 	.word	0x20400001

080065c4 <_fflush_r>:
 80065c4:	b538      	push	{r3, r4, r5, lr}
 80065c6:	690b      	ldr	r3, [r1, #16]
 80065c8:	4605      	mov	r5, r0
 80065ca:	460c      	mov	r4, r1
 80065cc:	b913      	cbnz	r3, 80065d4 <_fflush_r+0x10>
 80065ce:	2500      	movs	r5, #0
 80065d0:	4628      	mov	r0, r5
 80065d2:	bd38      	pop	{r3, r4, r5, pc}
 80065d4:	b118      	cbz	r0, 80065de <_fflush_r+0x1a>
 80065d6:	6a03      	ldr	r3, [r0, #32]
 80065d8:	b90b      	cbnz	r3, 80065de <_fflush_r+0x1a>
 80065da:	f7ff fa27 	bl	8005a2c <__sinit>
 80065de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80065e2:	2b00      	cmp	r3, #0
 80065e4:	d0f3      	beq.n	80065ce <_fflush_r+0xa>
 80065e6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80065e8:	07d0      	lsls	r0, r2, #31
 80065ea:	d404      	bmi.n	80065f6 <_fflush_r+0x32>
 80065ec:	0599      	lsls	r1, r3, #22
 80065ee:	d402      	bmi.n	80065f6 <_fflush_r+0x32>
 80065f0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80065f2:	f7ff fb5e 	bl	8005cb2 <__retarget_lock_acquire_recursive>
 80065f6:	4628      	mov	r0, r5
 80065f8:	4621      	mov	r1, r4
 80065fa:	f7ff ff5f 	bl	80064bc <__sflush_r>
 80065fe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8006600:	07da      	lsls	r2, r3, #31
 8006602:	4605      	mov	r5, r0
 8006604:	d4e4      	bmi.n	80065d0 <_fflush_r+0xc>
 8006606:	89a3      	ldrh	r3, [r4, #12]
 8006608:	059b      	lsls	r3, r3, #22
 800660a:	d4e1      	bmi.n	80065d0 <_fflush_r+0xc>
 800660c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800660e:	f7ff fb51 	bl	8005cb4 <__retarget_lock_release_recursive>
 8006612:	e7dd      	b.n	80065d0 <_fflush_r+0xc>

08006614 <fiprintf>:
 8006614:	b40e      	push	{r1, r2, r3}
 8006616:	b503      	push	{r0, r1, lr}
 8006618:	4601      	mov	r1, r0
 800661a:	ab03      	add	r3, sp, #12
 800661c:	4805      	ldr	r0, [pc, #20]	@ (8006634 <fiprintf+0x20>)
 800661e:	f853 2b04 	ldr.w	r2, [r3], #4
 8006622:	6800      	ldr	r0, [r0, #0]
 8006624:	9301      	str	r3, [sp, #4]
 8006626:	f000 f89d 	bl	8006764 <_vfiprintf_r>
 800662a:	b002      	add	sp, #8
 800662c:	f85d eb04 	ldr.w	lr, [sp], #4
 8006630:	b003      	add	sp, #12
 8006632:	4770      	bx	lr
 8006634:	20000030 	.word	0x20000030

08006638 <memmove>:
 8006638:	4288      	cmp	r0, r1
 800663a:	b510      	push	{r4, lr}
 800663c:	eb01 0402 	add.w	r4, r1, r2
 8006640:	d902      	bls.n	8006648 <memmove+0x10>
 8006642:	4284      	cmp	r4, r0
 8006644:	4623      	mov	r3, r4
 8006646:	d807      	bhi.n	8006658 <memmove+0x20>
 8006648:	1e43      	subs	r3, r0, #1
 800664a:	42a1      	cmp	r1, r4
 800664c:	d008      	beq.n	8006660 <memmove+0x28>
 800664e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8006652:	f803 2f01 	strb.w	r2, [r3, #1]!
 8006656:	e7f8      	b.n	800664a <memmove+0x12>
 8006658:	4402      	add	r2, r0
 800665a:	4601      	mov	r1, r0
 800665c:	428a      	cmp	r2, r1
 800665e:	d100      	bne.n	8006662 <memmove+0x2a>
 8006660:	bd10      	pop	{r4, pc}
 8006662:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8006666:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800666a:	e7f7      	b.n	800665c <memmove+0x24>

0800666c <_sbrk_r>:
 800666c:	b538      	push	{r3, r4, r5, lr}
 800666e:	4d06      	ldr	r5, [pc, #24]	@ (8006688 <_sbrk_r+0x1c>)
 8006670:	2300      	movs	r3, #0
 8006672:	4604      	mov	r4, r0
 8006674:	4608      	mov	r0, r1
 8006676:	602b      	str	r3, [r5, #0]
 8006678:	f7fc fe02 	bl	8003280 <_sbrk>
 800667c:	1c43      	adds	r3, r0, #1
 800667e:	d102      	bne.n	8006686 <_sbrk_r+0x1a>
 8006680:	682b      	ldr	r3, [r5, #0]
 8006682:	b103      	cbz	r3, 8006686 <_sbrk_r+0x1a>
 8006684:	6023      	str	r3, [r4, #0]
 8006686:	bd38      	pop	{r3, r4, r5, pc}
 8006688:	2000062c 	.word	0x2000062c

0800668c <memcpy>:
 800668c:	440a      	add	r2, r1
 800668e:	4291      	cmp	r1, r2
 8006690:	f100 33ff 	add.w	r3, r0, #4294967295
 8006694:	d100      	bne.n	8006698 <memcpy+0xc>
 8006696:	4770      	bx	lr
 8006698:	b510      	push	{r4, lr}
 800669a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800669e:	f803 4f01 	strb.w	r4, [r3, #1]!
 80066a2:	4291      	cmp	r1, r2
 80066a4:	d1f9      	bne.n	800669a <memcpy+0xe>
 80066a6:	bd10      	pop	{r4, pc}

080066a8 <abort>:
 80066a8:	b508      	push	{r3, lr}
 80066aa:	2006      	movs	r0, #6
 80066ac:	f000 fa2e 	bl	8006b0c <raise>
 80066b0:	2001      	movs	r0, #1
 80066b2:	f7fc fd6d 	bl	8003190 <_exit>

080066b6 <_realloc_r>:
 80066b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80066ba:	4607      	mov	r7, r0
 80066bc:	4614      	mov	r4, r2
 80066be:	460d      	mov	r5, r1
 80066c0:	b921      	cbnz	r1, 80066cc <_realloc_r+0x16>
 80066c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80066c6:	4611      	mov	r1, r2
 80066c8:	f7ff bb88 	b.w	8005ddc <_malloc_r>
 80066cc:	b92a      	cbnz	r2, 80066da <_realloc_r+0x24>
 80066ce:	f7ff fb11 	bl	8005cf4 <_free_r>
 80066d2:	4625      	mov	r5, r4
 80066d4:	4628      	mov	r0, r5
 80066d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80066da:	f000 fa33 	bl	8006b44 <_malloc_usable_size_r>
 80066de:	4284      	cmp	r4, r0
 80066e0:	4606      	mov	r6, r0
 80066e2:	d802      	bhi.n	80066ea <_realloc_r+0x34>
 80066e4:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80066e8:	d8f4      	bhi.n	80066d4 <_realloc_r+0x1e>
 80066ea:	4621      	mov	r1, r4
 80066ec:	4638      	mov	r0, r7
 80066ee:	f7ff fb75 	bl	8005ddc <_malloc_r>
 80066f2:	4680      	mov	r8, r0
 80066f4:	b908      	cbnz	r0, 80066fa <_realloc_r+0x44>
 80066f6:	4645      	mov	r5, r8
 80066f8:	e7ec      	b.n	80066d4 <_realloc_r+0x1e>
 80066fa:	42b4      	cmp	r4, r6
 80066fc:	4622      	mov	r2, r4
 80066fe:	4629      	mov	r1, r5
 8006700:	bf28      	it	cs
 8006702:	4632      	movcs	r2, r6
 8006704:	f7ff ffc2 	bl	800668c <memcpy>
 8006708:	4629      	mov	r1, r5
 800670a:	4638      	mov	r0, r7
 800670c:	f7ff faf2 	bl	8005cf4 <_free_r>
 8006710:	e7f1      	b.n	80066f6 <_realloc_r+0x40>

08006712 <__sfputc_r>:
 8006712:	6893      	ldr	r3, [r2, #8]
 8006714:	3b01      	subs	r3, #1
 8006716:	2b00      	cmp	r3, #0
 8006718:	b410      	push	{r4}
 800671a:	6093      	str	r3, [r2, #8]
 800671c:	da08      	bge.n	8006730 <__sfputc_r+0x1e>
 800671e:	6994      	ldr	r4, [r2, #24]
 8006720:	42a3      	cmp	r3, r4
 8006722:	db01      	blt.n	8006728 <__sfputc_r+0x16>
 8006724:	290a      	cmp	r1, #10
 8006726:	d103      	bne.n	8006730 <__sfputc_r+0x1e>
 8006728:	f85d 4b04 	ldr.w	r4, [sp], #4
 800672c:	f000 b932 	b.w	8006994 <__swbuf_r>
 8006730:	6813      	ldr	r3, [r2, #0]
 8006732:	1c58      	adds	r0, r3, #1
 8006734:	6010      	str	r0, [r2, #0]
 8006736:	7019      	strb	r1, [r3, #0]
 8006738:	4608      	mov	r0, r1
 800673a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800673e:	4770      	bx	lr

08006740 <__sfputs_r>:
 8006740:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006742:	4606      	mov	r6, r0
 8006744:	460f      	mov	r7, r1
 8006746:	4614      	mov	r4, r2
 8006748:	18d5      	adds	r5, r2, r3
 800674a:	42ac      	cmp	r4, r5
 800674c:	d101      	bne.n	8006752 <__sfputs_r+0x12>
 800674e:	2000      	movs	r0, #0
 8006750:	e007      	b.n	8006762 <__sfputs_r+0x22>
 8006752:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006756:	463a      	mov	r2, r7
 8006758:	4630      	mov	r0, r6
 800675a:	f7ff ffda 	bl	8006712 <__sfputc_r>
 800675e:	1c43      	adds	r3, r0, #1
 8006760:	d1f3      	bne.n	800674a <__sfputs_r+0xa>
 8006762:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006764 <_vfiprintf_r>:
 8006764:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006768:	460d      	mov	r5, r1
 800676a:	b09d      	sub	sp, #116	@ 0x74
 800676c:	4614      	mov	r4, r2
 800676e:	4698      	mov	r8, r3
 8006770:	4606      	mov	r6, r0
 8006772:	b118      	cbz	r0, 800677c <_vfiprintf_r+0x18>
 8006774:	6a03      	ldr	r3, [r0, #32]
 8006776:	b90b      	cbnz	r3, 800677c <_vfiprintf_r+0x18>
 8006778:	f7ff f958 	bl	8005a2c <__sinit>
 800677c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800677e:	07d9      	lsls	r1, r3, #31
 8006780:	d405      	bmi.n	800678e <_vfiprintf_r+0x2a>
 8006782:	89ab      	ldrh	r3, [r5, #12]
 8006784:	059a      	lsls	r2, r3, #22
 8006786:	d402      	bmi.n	800678e <_vfiprintf_r+0x2a>
 8006788:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800678a:	f7ff fa92 	bl	8005cb2 <__retarget_lock_acquire_recursive>
 800678e:	89ab      	ldrh	r3, [r5, #12]
 8006790:	071b      	lsls	r3, r3, #28
 8006792:	d501      	bpl.n	8006798 <_vfiprintf_r+0x34>
 8006794:	692b      	ldr	r3, [r5, #16]
 8006796:	b99b      	cbnz	r3, 80067c0 <_vfiprintf_r+0x5c>
 8006798:	4629      	mov	r1, r5
 800679a:	4630      	mov	r0, r6
 800679c:	f000 f938 	bl	8006a10 <__swsetup_r>
 80067a0:	b170      	cbz	r0, 80067c0 <_vfiprintf_r+0x5c>
 80067a2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80067a4:	07dc      	lsls	r4, r3, #31
 80067a6:	d504      	bpl.n	80067b2 <_vfiprintf_r+0x4e>
 80067a8:	f04f 30ff 	mov.w	r0, #4294967295
 80067ac:	b01d      	add	sp, #116	@ 0x74
 80067ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80067b2:	89ab      	ldrh	r3, [r5, #12]
 80067b4:	0598      	lsls	r0, r3, #22
 80067b6:	d4f7      	bmi.n	80067a8 <_vfiprintf_r+0x44>
 80067b8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80067ba:	f7ff fa7b 	bl	8005cb4 <__retarget_lock_release_recursive>
 80067be:	e7f3      	b.n	80067a8 <_vfiprintf_r+0x44>
 80067c0:	2300      	movs	r3, #0
 80067c2:	9309      	str	r3, [sp, #36]	@ 0x24
 80067c4:	2320      	movs	r3, #32
 80067c6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80067ca:	f8cd 800c 	str.w	r8, [sp, #12]
 80067ce:	2330      	movs	r3, #48	@ 0x30
 80067d0:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8006980 <_vfiprintf_r+0x21c>
 80067d4:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80067d8:	f04f 0901 	mov.w	r9, #1
 80067dc:	4623      	mov	r3, r4
 80067de:	469a      	mov	sl, r3
 80067e0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80067e4:	b10a      	cbz	r2, 80067ea <_vfiprintf_r+0x86>
 80067e6:	2a25      	cmp	r2, #37	@ 0x25
 80067e8:	d1f9      	bne.n	80067de <_vfiprintf_r+0x7a>
 80067ea:	ebba 0b04 	subs.w	fp, sl, r4
 80067ee:	d00b      	beq.n	8006808 <_vfiprintf_r+0xa4>
 80067f0:	465b      	mov	r3, fp
 80067f2:	4622      	mov	r2, r4
 80067f4:	4629      	mov	r1, r5
 80067f6:	4630      	mov	r0, r6
 80067f8:	f7ff ffa2 	bl	8006740 <__sfputs_r>
 80067fc:	3001      	adds	r0, #1
 80067fe:	f000 80a7 	beq.w	8006950 <_vfiprintf_r+0x1ec>
 8006802:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006804:	445a      	add	r2, fp
 8006806:	9209      	str	r2, [sp, #36]	@ 0x24
 8006808:	f89a 3000 	ldrb.w	r3, [sl]
 800680c:	2b00      	cmp	r3, #0
 800680e:	f000 809f 	beq.w	8006950 <_vfiprintf_r+0x1ec>
 8006812:	2300      	movs	r3, #0
 8006814:	f04f 32ff 	mov.w	r2, #4294967295
 8006818:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800681c:	f10a 0a01 	add.w	sl, sl, #1
 8006820:	9304      	str	r3, [sp, #16]
 8006822:	9307      	str	r3, [sp, #28]
 8006824:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8006828:	931a      	str	r3, [sp, #104]	@ 0x68
 800682a:	4654      	mov	r4, sl
 800682c:	2205      	movs	r2, #5
 800682e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006832:	4853      	ldr	r0, [pc, #332]	@ (8006980 <_vfiprintf_r+0x21c>)
 8006834:	f7f9 fcdc 	bl	80001f0 <memchr>
 8006838:	9a04      	ldr	r2, [sp, #16]
 800683a:	b9d8      	cbnz	r0, 8006874 <_vfiprintf_r+0x110>
 800683c:	06d1      	lsls	r1, r2, #27
 800683e:	bf44      	itt	mi
 8006840:	2320      	movmi	r3, #32
 8006842:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006846:	0713      	lsls	r3, r2, #28
 8006848:	bf44      	itt	mi
 800684a:	232b      	movmi	r3, #43	@ 0x2b
 800684c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006850:	f89a 3000 	ldrb.w	r3, [sl]
 8006854:	2b2a      	cmp	r3, #42	@ 0x2a
 8006856:	d015      	beq.n	8006884 <_vfiprintf_r+0x120>
 8006858:	9a07      	ldr	r2, [sp, #28]
 800685a:	4654      	mov	r4, sl
 800685c:	2000      	movs	r0, #0
 800685e:	f04f 0c0a 	mov.w	ip, #10
 8006862:	4621      	mov	r1, r4
 8006864:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006868:	3b30      	subs	r3, #48	@ 0x30
 800686a:	2b09      	cmp	r3, #9
 800686c:	d94b      	bls.n	8006906 <_vfiprintf_r+0x1a2>
 800686e:	b1b0      	cbz	r0, 800689e <_vfiprintf_r+0x13a>
 8006870:	9207      	str	r2, [sp, #28]
 8006872:	e014      	b.n	800689e <_vfiprintf_r+0x13a>
 8006874:	eba0 0308 	sub.w	r3, r0, r8
 8006878:	fa09 f303 	lsl.w	r3, r9, r3
 800687c:	4313      	orrs	r3, r2
 800687e:	9304      	str	r3, [sp, #16]
 8006880:	46a2      	mov	sl, r4
 8006882:	e7d2      	b.n	800682a <_vfiprintf_r+0xc6>
 8006884:	9b03      	ldr	r3, [sp, #12]
 8006886:	1d19      	adds	r1, r3, #4
 8006888:	681b      	ldr	r3, [r3, #0]
 800688a:	9103      	str	r1, [sp, #12]
 800688c:	2b00      	cmp	r3, #0
 800688e:	bfbb      	ittet	lt
 8006890:	425b      	neglt	r3, r3
 8006892:	f042 0202 	orrlt.w	r2, r2, #2
 8006896:	9307      	strge	r3, [sp, #28]
 8006898:	9307      	strlt	r3, [sp, #28]
 800689a:	bfb8      	it	lt
 800689c:	9204      	strlt	r2, [sp, #16]
 800689e:	7823      	ldrb	r3, [r4, #0]
 80068a0:	2b2e      	cmp	r3, #46	@ 0x2e
 80068a2:	d10a      	bne.n	80068ba <_vfiprintf_r+0x156>
 80068a4:	7863      	ldrb	r3, [r4, #1]
 80068a6:	2b2a      	cmp	r3, #42	@ 0x2a
 80068a8:	d132      	bne.n	8006910 <_vfiprintf_r+0x1ac>
 80068aa:	9b03      	ldr	r3, [sp, #12]
 80068ac:	1d1a      	adds	r2, r3, #4
 80068ae:	681b      	ldr	r3, [r3, #0]
 80068b0:	9203      	str	r2, [sp, #12]
 80068b2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80068b6:	3402      	adds	r4, #2
 80068b8:	9305      	str	r3, [sp, #20]
 80068ba:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8006990 <_vfiprintf_r+0x22c>
 80068be:	7821      	ldrb	r1, [r4, #0]
 80068c0:	2203      	movs	r2, #3
 80068c2:	4650      	mov	r0, sl
 80068c4:	f7f9 fc94 	bl	80001f0 <memchr>
 80068c8:	b138      	cbz	r0, 80068da <_vfiprintf_r+0x176>
 80068ca:	9b04      	ldr	r3, [sp, #16]
 80068cc:	eba0 000a 	sub.w	r0, r0, sl
 80068d0:	2240      	movs	r2, #64	@ 0x40
 80068d2:	4082      	lsls	r2, r0
 80068d4:	4313      	orrs	r3, r2
 80068d6:	3401      	adds	r4, #1
 80068d8:	9304      	str	r3, [sp, #16]
 80068da:	f814 1b01 	ldrb.w	r1, [r4], #1
 80068de:	4829      	ldr	r0, [pc, #164]	@ (8006984 <_vfiprintf_r+0x220>)
 80068e0:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80068e4:	2206      	movs	r2, #6
 80068e6:	f7f9 fc83 	bl	80001f0 <memchr>
 80068ea:	2800      	cmp	r0, #0
 80068ec:	d03f      	beq.n	800696e <_vfiprintf_r+0x20a>
 80068ee:	4b26      	ldr	r3, [pc, #152]	@ (8006988 <_vfiprintf_r+0x224>)
 80068f0:	bb1b      	cbnz	r3, 800693a <_vfiprintf_r+0x1d6>
 80068f2:	9b03      	ldr	r3, [sp, #12]
 80068f4:	3307      	adds	r3, #7
 80068f6:	f023 0307 	bic.w	r3, r3, #7
 80068fa:	3308      	adds	r3, #8
 80068fc:	9303      	str	r3, [sp, #12]
 80068fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006900:	443b      	add	r3, r7
 8006902:	9309      	str	r3, [sp, #36]	@ 0x24
 8006904:	e76a      	b.n	80067dc <_vfiprintf_r+0x78>
 8006906:	fb0c 3202 	mla	r2, ip, r2, r3
 800690a:	460c      	mov	r4, r1
 800690c:	2001      	movs	r0, #1
 800690e:	e7a8      	b.n	8006862 <_vfiprintf_r+0xfe>
 8006910:	2300      	movs	r3, #0
 8006912:	3401      	adds	r4, #1
 8006914:	9305      	str	r3, [sp, #20]
 8006916:	4619      	mov	r1, r3
 8006918:	f04f 0c0a 	mov.w	ip, #10
 800691c:	4620      	mov	r0, r4
 800691e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006922:	3a30      	subs	r2, #48	@ 0x30
 8006924:	2a09      	cmp	r2, #9
 8006926:	d903      	bls.n	8006930 <_vfiprintf_r+0x1cc>
 8006928:	2b00      	cmp	r3, #0
 800692a:	d0c6      	beq.n	80068ba <_vfiprintf_r+0x156>
 800692c:	9105      	str	r1, [sp, #20]
 800692e:	e7c4      	b.n	80068ba <_vfiprintf_r+0x156>
 8006930:	fb0c 2101 	mla	r1, ip, r1, r2
 8006934:	4604      	mov	r4, r0
 8006936:	2301      	movs	r3, #1
 8006938:	e7f0      	b.n	800691c <_vfiprintf_r+0x1b8>
 800693a:	ab03      	add	r3, sp, #12
 800693c:	9300      	str	r3, [sp, #0]
 800693e:	462a      	mov	r2, r5
 8006940:	4b12      	ldr	r3, [pc, #72]	@ (800698c <_vfiprintf_r+0x228>)
 8006942:	a904      	add	r1, sp, #16
 8006944:	4630      	mov	r0, r6
 8006946:	f3af 8000 	nop.w
 800694a:	4607      	mov	r7, r0
 800694c:	1c78      	adds	r0, r7, #1
 800694e:	d1d6      	bne.n	80068fe <_vfiprintf_r+0x19a>
 8006950:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006952:	07d9      	lsls	r1, r3, #31
 8006954:	d405      	bmi.n	8006962 <_vfiprintf_r+0x1fe>
 8006956:	89ab      	ldrh	r3, [r5, #12]
 8006958:	059a      	lsls	r2, r3, #22
 800695a:	d402      	bmi.n	8006962 <_vfiprintf_r+0x1fe>
 800695c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800695e:	f7ff f9a9 	bl	8005cb4 <__retarget_lock_release_recursive>
 8006962:	89ab      	ldrh	r3, [r5, #12]
 8006964:	065b      	lsls	r3, r3, #25
 8006966:	f53f af1f 	bmi.w	80067a8 <_vfiprintf_r+0x44>
 800696a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800696c:	e71e      	b.n	80067ac <_vfiprintf_r+0x48>
 800696e:	ab03      	add	r3, sp, #12
 8006970:	9300      	str	r3, [sp, #0]
 8006972:	462a      	mov	r2, r5
 8006974:	4b05      	ldr	r3, [pc, #20]	@ (800698c <_vfiprintf_r+0x228>)
 8006976:	a904      	add	r1, sp, #16
 8006978:	4630      	mov	r0, r6
 800697a:	f7ff fc81 	bl	8006280 <_printf_i>
 800697e:	e7e4      	b.n	800694a <_vfiprintf_r+0x1e6>
 8006980:	0800856f 	.word	0x0800856f
 8006984:	08008579 	.word	0x08008579
 8006988:	00000000 	.word	0x00000000
 800698c:	08006741 	.word	0x08006741
 8006990:	08008575 	.word	0x08008575

08006994 <__swbuf_r>:
 8006994:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006996:	460e      	mov	r6, r1
 8006998:	4614      	mov	r4, r2
 800699a:	4605      	mov	r5, r0
 800699c:	b118      	cbz	r0, 80069a6 <__swbuf_r+0x12>
 800699e:	6a03      	ldr	r3, [r0, #32]
 80069a0:	b90b      	cbnz	r3, 80069a6 <__swbuf_r+0x12>
 80069a2:	f7ff f843 	bl	8005a2c <__sinit>
 80069a6:	69a3      	ldr	r3, [r4, #24]
 80069a8:	60a3      	str	r3, [r4, #8]
 80069aa:	89a3      	ldrh	r3, [r4, #12]
 80069ac:	071a      	lsls	r2, r3, #28
 80069ae:	d501      	bpl.n	80069b4 <__swbuf_r+0x20>
 80069b0:	6923      	ldr	r3, [r4, #16]
 80069b2:	b943      	cbnz	r3, 80069c6 <__swbuf_r+0x32>
 80069b4:	4621      	mov	r1, r4
 80069b6:	4628      	mov	r0, r5
 80069b8:	f000 f82a 	bl	8006a10 <__swsetup_r>
 80069bc:	b118      	cbz	r0, 80069c6 <__swbuf_r+0x32>
 80069be:	f04f 37ff 	mov.w	r7, #4294967295
 80069c2:	4638      	mov	r0, r7
 80069c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80069c6:	6823      	ldr	r3, [r4, #0]
 80069c8:	6922      	ldr	r2, [r4, #16]
 80069ca:	1a98      	subs	r0, r3, r2
 80069cc:	6963      	ldr	r3, [r4, #20]
 80069ce:	b2f6      	uxtb	r6, r6
 80069d0:	4283      	cmp	r3, r0
 80069d2:	4637      	mov	r7, r6
 80069d4:	dc05      	bgt.n	80069e2 <__swbuf_r+0x4e>
 80069d6:	4621      	mov	r1, r4
 80069d8:	4628      	mov	r0, r5
 80069da:	f7ff fdf3 	bl	80065c4 <_fflush_r>
 80069de:	2800      	cmp	r0, #0
 80069e0:	d1ed      	bne.n	80069be <__swbuf_r+0x2a>
 80069e2:	68a3      	ldr	r3, [r4, #8]
 80069e4:	3b01      	subs	r3, #1
 80069e6:	60a3      	str	r3, [r4, #8]
 80069e8:	6823      	ldr	r3, [r4, #0]
 80069ea:	1c5a      	adds	r2, r3, #1
 80069ec:	6022      	str	r2, [r4, #0]
 80069ee:	701e      	strb	r6, [r3, #0]
 80069f0:	6962      	ldr	r2, [r4, #20]
 80069f2:	1c43      	adds	r3, r0, #1
 80069f4:	429a      	cmp	r2, r3
 80069f6:	d004      	beq.n	8006a02 <__swbuf_r+0x6e>
 80069f8:	89a3      	ldrh	r3, [r4, #12]
 80069fa:	07db      	lsls	r3, r3, #31
 80069fc:	d5e1      	bpl.n	80069c2 <__swbuf_r+0x2e>
 80069fe:	2e0a      	cmp	r6, #10
 8006a00:	d1df      	bne.n	80069c2 <__swbuf_r+0x2e>
 8006a02:	4621      	mov	r1, r4
 8006a04:	4628      	mov	r0, r5
 8006a06:	f7ff fddd 	bl	80065c4 <_fflush_r>
 8006a0a:	2800      	cmp	r0, #0
 8006a0c:	d0d9      	beq.n	80069c2 <__swbuf_r+0x2e>
 8006a0e:	e7d6      	b.n	80069be <__swbuf_r+0x2a>

08006a10 <__swsetup_r>:
 8006a10:	b538      	push	{r3, r4, r5, lr}
 8006a12:	4b29      	ldr	r3, [pc, #164]	@ (8006ab8 <__swsetup_r+0xa8>)
 8006a14:	4605      	mov	r5, r0
 8006a16:	6818      	ldr	r0, [r3, #0]
 8006a18:	460c      	mov	r4, r1
 8006a1a:	b118      	cbz	r0, 8006a24 <__swsetup_r+0x14>
 8006a1c:	6a03      	ldr	r3, [r0, #32]
 8006a1e:	b90b      	cbnz	r3, 8006a24 <__swsetup_r+0x14>
 8006a20:	f7ff f804 	bl	8005a2c <__sinit>
 8006a24:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006a28:	0719      	lsls	r1, r3, #28
 8006a2a:	d422      	bmi.n	8006a72 <__swsetup_r+0x62>
 8006a2c:	06da      	lsls	r2, r3, #27
 8006a2e:	d407      	bmi.n	8006a40 <__swsetup_r+0x30>
 8006a30:	2209      	movs	r2, #9
 8006a32:	602a      	str	r2, [r5, #0]
 8006a34:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006a38:	81a3      	strh	r3, [r4, #12]
 8006a3a:	f04f 30ff 	mov.w	r0, #4294967295
 8006a3e:	e033      	b.n	8006aa8 <__swsetup_r+0x98>
 8006a40:	0758      	lsls	r0, r3, #29
 8006a42:	d512      	bpl.n	8006a6a <__swsetup_r+0x5a>
 8006a44:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006a46:	b141      	cbz	r1, 8006a5a <__swsetup_r+0x4a>
 8006a48:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8006a4c:	4299      	cmp	r1, r3
 8006a4e:	d002      	beq.n	8006a56 <__swsetup_r+0x46>
 8006a50:	4628      	mov	r0, r5
 8006a52:	f7ff f94f 	bl	8005cf4 <_free_r>
 8006a56:	2300      	movs	r3, #0
 8006a58:	6363      	str	r3, [r4, #52]	@ 0x34
 8006a5a:	89a3      	ldrh	r3, [r4, #12]
 8006a5c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8006a60:	81a3      	strh	r3, [r4, #12]
 8006a62:	2300      	movs	r3, #0
 8006a64:	6063      	str	r3, [r4, #4]
 8006a66:	6923      	ldr	r3, [r4, #16]
 8006a68:	6023      	str	r3, [r4, #0]
 8006a6a:	89a3      	ldrh	r3, [r4, #12]
 8006a6c:	f043 0308 	orr.w	r3, r3, #8
 8006a70:	81a3      	strh	r3, [r4, #12]
 8006a72:	6923      	ldr	r3, [r4, #16]
 8006a74:	b94b      	cbnz	r3, 8006a8a <__swsetup_r+0x7a>
 8006a76:	89a3      	ldrh	r3, [r4, #12]
 8006a78:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8006a7c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006a80:	d003      	beq.n	8006a8a <__swsetup_r+0x7a>
 8006a82:	4621      	mov	r1, r4
 8006a84:	4628      	mov	r0, r5
 8006a86:	f000 f88b 	bl	8006ba0 <__smakebuf_r>
 8006a8a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006a8e:	f013 0201 	ands.w	r2, r3, #1
 8006a92:	d00a      	beq.n	8006aaa <__swsetup_r+0x9a>
 8006a94:	2200      	movs	r2, #0
 8006a96:	60a2      	str	r2, [r4, #8]
 8006a98:	6962      	ldr	r2, [r4, #20]
 8006a9a:	4252      	negs	r2, r2
 8006a9c:	61a2      	str	r2, [r4, #24]
 8006a9e:	6922      	ldr	r2, [r4, #16]
 8006aa0:	b942      	cbnz	r2, 8006ab4 <__swsetup_r+0xa4>
 8006aa2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8006aa6:	d1c5      	bne.n	8006a34 <__swsetup_r+0x24>
 8006aa8:	bd38      	pop	{r3, r4, r5, pc}
 8006aaa:	0799      	lsls	r1, r3, #30
 8006aac:	bf58      	it	pl
 8006aae:	6962      	ldrpl	r2, [r4, #20]
 8006ab0:	60a2      	str	r2, [r4, #8]
 8006ab2:	e7f4      	b.n	8006a9e <__swsetup_r+0x8e>
 8006ab4:	2000      	movs	r0, #0
 8006ab6:	e7f7      	b.n	8006aa8 <__swsetup_r+0x98>
 8006ab8:	20000030 	.word	0x20000030

08006abc <_raise_r>:
 8006abc:	291f      	cmp	r1, #31
 8006abe:	b538      	push	{r3, r4, r5, lr}
 8006ac0:	4605      	mov	r5, r0
 8006ac2:	460c      	mov	r4, r1
 8006ac4:	d904      	bls.n	8006ad0 <_raise_r+0x14>
 8006ac6:	2316      	movs	r3, #22
 8006ac8:	6003      	str	r3, [r0, #0]
 8006aca:	f04f 30ff 	mov.w	r0, #4294967295
 8006ace:	bd38      	pop	{r3, r4, r5, pc}
 8006ad0:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8006ad2:	b112      	cbz	r2, 8006ada <_raise_r+0x1e>
 8006ad4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006ad8:	b94b      	cbnz	r3, 8006aee <_raise_r+0x32>
 8006ada:	4628      	mov	r0, r5
 8006adc:	f000 f830 	bl	8006b40 <_getpid_r>
 8006ae0:	4622      	mov	r2, r4
 8006ae2:	4601      	mov	r1, r0
 8006ae4:	4628      	mov	r0, r5
 8006ae6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006aea:	f000 b817 	b.w	8006b1c <_kill_r>
 8006aee:	2b01      	cmp	r3, #1
 8006af0:	d00a      	beq.n	8006b08 <_raise_r+0x4c>
 8006af2:	1c59      	adds	r1, r3, #1
 8006af4:	d103      	bne.n	8006afe <_raise_r+0x42>
 8006af6:	2316      	movs	r3, #22
 8006af8:	6003      	str	r3, [r0, #0]
 8006afa:	2001      	movs	r0, #1
 8006afc:	e7e7      	b.n	8006ace <_raise_r+0x12>
 8006afe:	2100      	movs	r1, #0
 8006b00:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8006b04:	4620      	mov	r0, r4
 8006b06:	4798      	blx	r3
 8006b08:	2000      	movs	r0, #0
 8006b0a:	e7e0      	b.n	8006ace <_raise_r+0x12>

08006b0c <raise>:
 8006b0c:	4b02      	ldr	r3, [pc, #8]	@ (8006b18 <raise+0xc>)
 8006b0e:	4601      	mov	r1, r0
 8006b10:	6818      	ldr	r0, [r3, #0]
 8006b12:	f7ff bfd3 	b.w	8006abc <_raise_r>
 8006b16:	bf00      	nop
 8006b18:	20000030 	.word	0x20000030

08006b1c <_kill_r>:
 8006b1c:	b538      	push	{r3, r4, r5, lr}
 8006b1e:	4d07      	ldr	r5, [pc, #28]	@ (8006b3c <_kill_r+0x20>)
 8006b20:	2300      	movs	r3, #0
 8006b22:	4604      	mov	r4, r0
 8006b24:	4608      	mov	r0, r1
 8006b26:	4611      	mov	r1, r2
 8006b28:	602b      	str	r3, [r5, #0]
 8006b2a:	f7fc fb21 	bl	8003170 <_kill>
 8006b2e:	1c43      	adds	r3, r0, #1
 8006b30:	d102      	bne.n	8006b38 <_kill_r+0x1c>
 8006b32:	682b      	ldr	r3, [r5, #0]
 8006b34:	b103      	cbz	r3, 8006b38 <_kill_r+0x1c>
 8006b36:	6023      	str	r3, [r4, #0]
 8006b38:	bd38      	pop	{r3, r4, r5, pc}
 8006b3a:	bf00      	nop
 8006b3c:	2000062c 	.word	0x2000062c

08006b40 <_getpid_r>:
 8006b40:	f7fc bb0e 	b.w	8003160 <_getpid>

08006b44 <_malloc_usable_size_r>:
 8006b44:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006b48:	1f18      	subs	r0, r3, #4
 8006b4a:	2b00      	cmp	r3, #0
 8006b4c:	bfbc      	itt	lt
 8006b4e:	580b      	ldrlt	r3, [r1, r0]
 8006b50:	18c0      	addlt	r0, r0, r3
 8006b52:	4770      	bx	lr

08006b54 <__swhatbuf_r>:
 8006b54:	b570      	push	{r4, r5, r6, lr}
 8006b56:	460c      	mov	r4, r1
 8006b58:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006b5c:	2900      	cmp	r1, #0
 8006b5e:	b096      	sub	sp, #88	@ 0x58
 8006b60:	4615      	mov	r5, r2
 8006b62:	461e      	mov	r6, r3
 8006b64:	da0d      	bge.n	8006b82 <__swhatbuf_r+0x2e>
 8006b66:	89a3      	ldrh	r3, [r4, #12]
 8006b68:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8006b6c:	f04f 0100 	mov.w	r1, #0
 8006b70:	bf14      	ite	ne
 8006b72:	2340      	movne	r3, #64	@ 0x40
 8006b74:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8006b78:	2000      	movs	r0, #0
 8006b7a:	6031      	str	r1, [r6, #0]
 8006b7c:	602b      	str	r3, [r5, #0]
 8006b7e:	b016      	add	sp, #88	@ 0x58
 8006b80:	bd70      	pop	{r4, r5, r6, pc}
 8006b82:	466a      	mov	r2, sp
 8006b84:	f000 f848 	bl	8006c18 <_fstat_r>
 8006b88:	2800      	cmp	r0, #0
 8006b8a:	dbec      	blt.n	8006b66 <__swhatbuf_r+0x12>
 8006b8c:	9901      	ldr	r1, [sp, #4]
 8006b8e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8006b92:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8006b96:	4259      	negs	r1, r3
 8006b98:	4159      	adcs	r1, r3
 8006b9a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8006b9e:	e7eb      	b.n	8006b78 <__swhatbuf_r+0x24>

08006ba0 <__smakebuf_r>:
 8006ba0:	898b      	ldrh	r3, [r1, #12]
 8006ba2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006ba4:	079d      	lsls	r5, r3, #30
 8006ba6:	4606      	mov	r6, r0
 8006ba8:	460c      	mov	r4, r1
 8006baa:	d507      	bpl.n	8006bbc <__smakebuf_r+0x1c>
 8006bac:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8006bb0:	6023      	str	r3, [r4, #0]
 8006bb2:	6123      	str	r3, [r4, #16]
 8006bb4:	2301      	movs	r3, #1
 8006bb6:	6163      	str	r3, [r4, #20]
 8006bb8:	b003      	add	sp, #12
 8006bba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006bbc:	ab01      	add	r3, sp, #4
 8006bbe:	466a      	mov	r2, sp
 8006bc0:	f7ff ffc8 	bl	8006b54 <__swhatbuf_r>
 8006bc4:	9f00      	ldr	r7, [sp, #0]
 8006bc6:	4605      	mov	r5, r0
 8006bc8:	4639      	mov	r1, r7
 8006bca:	4630      	mov	r0, r6
 8006bcc:	f7ff f906 	bl	8005ddc <_malloc_r>
 8006bd0:	b948      	cbnz	r0, 8006be6 <__smakebuf_r+0x46>
 8006bd2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006bd6:	059a      	lsls	r2, r3, #22
 8006bd8:	d4ee      	bmi.n	8006bb8 <__smakebuf_r+0x18>
 8006bda:	f023 0303 	bic.w	r3, r3, #3
 8006bde:	f043 0302 	orr.w	r3, r3, #2
 8006be2:	81a3      	strh	r3, [r4, #12]
 8006be4:	e7e2      	b.n	8006bac <__smakebuf_r+0xc>
 8006be6:	89a3      	ldrh	r3, [r4, #12]
 8006be8:	6020      	str	r0, [r4, #0]
 8006bea:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006bee:	81a3      	strh	r3, [r4, #12]
 8006bf0:	9b01      	ldr	r3, [sp, #4]
 8006bf2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8006bf6:	b15b      	cbz	r3, 8006c10 <__smakebuf_r+0x70>
 8006bf8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006bfc:	4630      	mov	r0, r6
 8006bfe:	f000 f81d 	bl	8006c3c <_isatty_r>
 8006c02:	b128      	cbz	r0, 8006c10 <__smakebuf_r+0x70>
 8006c04:	89a3      	ldrh	r3, [r4, #12]
 8006c06:	f023 0303 	bic.w	r3, r3, #3
 8006c0a:	f043 0301 	orr.w	r3, r3, #1
 8006c0e:	81a3      	strh	r3, [r4, #12]
 8006c10:	89a3      	ldrh	r3, [r4, #12]
 8006c12:	431d      	orrs	r5, r3
 8006c14:	81a5      	strh	r5, [r4, #12]
 8006c16:	e7cf      	b.n	8006bb8 <__smakebuf_r+0x18>

08006c18 <_fstat_r>:
 8006c18:	b538      	push	{r3, r4, r5, lr}
 8006c1a:	4d07      	ldr	r5, [pc, #28]	@ (8006c38 <_fstat_r+0x20>)
 8006c1c:	2300      	movs	r3, #0
 8006c1e:	4604      	mov	r4, r0
 8006c20:	4608      	mov	r0, r1
 8006c22:	4611      	mov	r1, r2
 8006c24:	602b      	str	r3, [r5, #0]
 8006c26:	f7fc fb03 	bl	8003230 <_fstat>
 8006c2a:	1c43      	adds	r3, r0, #1
 8006c2c:	d102      	bne.n	8006c34 <_fstat_r+0x1c>
 8006c2e:	682b      	ldr	r3, [r5, #0]
 8006c30:	b103      	cbz	r3, 8006c34 <_fstat_r+0x1c>
 8006c32:	6023      	str	r3, [r4, #0]
 8006c34:	bd38      	pop	{r3, r4, r5, pc}
 8006c36:	bf00      	nop
 8006c38:	2000062c 	.word	0x2000062c

08006c3c <_isatty_r>:
 8006c3c:	b538      	push	{r3, r4, r5, lr}
 8006c3e:	4d06      	ldr	r5, [pc, #24]	@ (8006c58 <_isatty_r+0x1c>)
 8006c40:	2300      	movs	r3, #0
 8006c42:	4604      	mov	r4, r0
 8006c44:	4608      	mov	r0, r1
 8006c46:	602b      	str	r3, [r5, #0]
 8006c48:	f7fc fb02 	bl	8003250 <_isatty>
 8006c4c:	1c43      	adds	r3, r0, #1
 8006c4e:	d102      	bne.n	8006c56 <_isatty_r+0x1a>
 8006c50:	682b      	ldr	r3, [r5, #0]
 8006c52:	b103      	cbz	r3, 8006c56 <_isatty_r+0x1a>
 8006c54:	6023      	str	r3, [r4, #0]
 8006c56:	bd38      	pop	{r3, r4, r5, pc}
 8006c58:	2000062c 	.word	0x2000062c

08006c5c <_gettimeofday>:
 8006c5c:	4b02      	ldr	r3, [pc, #8]	@ (8006c68 <_gettimeofday+0xc>)
 8006c5e:	2258      	movs	r2, #88	@ 0x58
 8006c60:	601a      	str	r2, [r3, #0]
 8006c62:	f04f 30ff 	mov.w	r0, #4294967295
 8006c66:	4770      	bx	lr
 8006c68:	2000062c 	.word	0x2000062c

08006c6c <_init>:
 8006c6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c6e:	bf00      	nop
 8006c70:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006c72:	bc08      	pop	{r3}
 8006c74:	469e      	mov	lr, r3
 8006c76:	4770      	bx	lr

08006c78 <_fini>:
 8006c78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c7a:	bf00      	nop
 8006c7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006c7e:	bc08      	pop	{r3}
 8006c80:	469e      	mov	lr, r3
 8006c82:	4770      	bx	lr
